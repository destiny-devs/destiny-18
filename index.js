/*============‚â†‚â†==========‚â†‚â†=============\\


N√ÉO PASSE O BOT PARA NINGU√âM, MUITOS V√ÉO FINGIR SER AMIGO. 

MUITOS DESEJAM COMPRAR PARA REVENDER E DIZER QUE FEZ.. 

EU ALEATORY N√ÉO FIZ TUDO, ASSUMO ISSO, PRECISEI DE AJUDA

PRA ISSO TENHO AMIGOS, PRA EVOLUIR JUNTO, ENT√ÉO.. 

N√ÉO JOGUE O ESFOR√áO QUE TIVE, APESAR DE N√ÉO SER TANTO A 

VISTA DE QUEM J√Å CONHECE O BASTANTE DA √ÅREA.. 


//=======================================*/

const { default: makeWASocket, downloadContentFromMessage, useSingleFileAuthState, makeInMemoryStore, DisconnectReason, WAGroupMetadata, relayWAMessage,	MediaPathMap, mentionedJid, processTime, MediaType, Browser, MessageType, Presence, Mimetype, Browsers, delay, fetchLatestBaileysVersion
} = require('@adiwajshing/baileys');

//_-_-_-_-_-_-_-_-_-_-MODULOS/FUN√á√ïES-_-_-_-_-_-_-_-_-_-_-_-\\

const { hx, fs, Boom, axios, chalk, yts, crypto, util, P, encodeUrl, linkfy, request, cheerio, ms, ffmpeg, imgbb, googleImage, googleIt, fetch, imageToBase64, webp2gifFile, webp_mp4, EmojiAPI, qrterminal, emoji, exec, spawn, execSync, moment, color, time, hora, date, getBuffer, convertSticker, recognize, fetchJson, fetchText, getBase64, createExif, insert, response, addLimit, getLimit, mediafireDl, upload, nit, addBanned, unBanned, BannedExpired, cekBannedUser, isFiltered, addFilter, validmove, setGame, addComandosId, deleteComandos, getComandoBlock, getComandos, addComandos, palavrasANA, quizanime, quizanimais, getLevelingXp, getLevelingLevel, getLevelingId, addLevelingXp, addLevelingLevel, addLevelingId, bayarLimit, limitAdd, addATM, addKoinUser, checkATMuser, getRegisteredRandomId, addRegisteredUser, createSerial, checkRegisteredUser, confirmATM, runtime, getpc, supre, WinnerX, WinnerO, Tie, IA, IAmove1, IAalter, priorityC, addTTTId, addTTTwin, addTTTdefeat, addTTTtie, addTTTpoints, getTTTId, getTTTwins, getTTTdefeats, getTTTties, getTTTpoints, wait, getExtension, h2k, generateMessageID, getGroupAdmins, getRandom, banner2, start2, banner3, infopd, success, start, close, temporizador, cmdadd, addMetadata, chyt, ttthelp, tttme, tttset, esp, kyun, simih } = require('./consts-func.js')

//-_-_-_-_-_-_-_-_-_-_--_-JSON-FUN√á√ïES-_-_-_-_-_-_-_-_-_-_-_-_\\

const { adeuscara, welcome_group, welcome_group2, bye_group, bye_group2, voting, sotoy, addVote, delVote, countMessage, comandos, welkom2, modobn, nsfw, daily, nescessario, welkom, premium, limitefll, antiflood, samih, samih2, _leveling, _level, bancht, anticall, ban, afk, joguinhodavelhajs, joguinhodavelhajs2, setting, logoslink, antilink, antifake, antilinkhard, autofigu, antilinkgp, antiimg, antisticker, antinotas, antictt, anticatalogo, antidoc, antiloc, antipv, antivid, antiaudio, palavra, palavrao, store, state, saveState } = require('./consts-func.js')

//-_-_-_-_-_-_-_-_-_-_-JS-MENUS/INFORMA√á√ïES-_-_-_-_-_-_-_-_-_-_\\

const { adms, alteradores, animes, menudono, figurinhas, jogos, loja, menu, menubasico, menuinfo, menuplay, nuvem, pack18 } = require('./menus/menu.js')



const { infokpet, prefixokbv, legendakbye, descri√ß√£okwelcome, tagkgroupw, tagkwelcome, legekwelcome, infootsu, infouchiha, infouzumaki, infohyuuga, infoakatsu } = require('./menus/infodens.js')

//_-_-_-_-_-_-_-_-_-_-_-_-(INFOS)_-_-_-_-_-_-_-_-_-_-_-_-_-_-_--\\

const { forwarding, imgnazista, imggay, imgcorno, imggostosa, imggostoso, imgfeio, imgvesgo, imgbebado, imggado, matarcmd, beijocmd, chutecmd } = require("./dono/nescessario.json")

//====================‚â†‚â†===============\\
 
 const Banspam = JSON.parse(fs.readFileSync('./datab/grupos/antispam.json'));
 
 const { mediafire } = require('./lib/mediafire')
 
 const maker = require('mumaker')
 
 const { textpro } = require('./lib/textpro')
 
 const { lirikLagu } = require('./lib/lirik.js')
 
 const uber = require('uberduck-api')
 
 
cdd = nescessario.cdd
 
crtt = nescessario.crtt
 
fundo1 = nescessario.fundo1

fundo2 = nescessario.fundo2
 
dono2 = nescessario.dono2

dono3 = nescessario.dono3
 
dono4 = nescessario.dono4

dono5 = nescessario.dono5
 
NomeDoBot = setting.NomeDoBot

NickDono = setting.NickDono

numerodono = setting.numerodono 

prefix = setting.prefix1

prefix2 = setting.prefix2

prefix3 = setting.prefix3

prefix4 = setting.prefix4

banChats = nescessario.banChats 

logo = logoslink.logo

limitefl = limitefll.limitefl

var lista = { ativada: true }

numbernye = '0'

blocked = [] 

hitt = []

keyale = "key-rafa-oliveira-2.0"

const vcard = 'BEGIN:VCARD\n' // metadata of the contact card
+ 'VERSION:3.0\n' 
+ 'FN:Nero\n' // Nome completo
+ 'ORG:Komi-bot;\n' // A organiza√ß√£o do contato
+ 'TEL;type=CELL;type=VOICE;waid=${numerodono}:${numerodono}\n' // WhatsApp ID + N√∫mero de telefone
+ 'END:VCARD' // Fim do ctt

const { Aki } = require('aki-api')
const region = 'pt'
jogo = {
jogador: '',
now: true
}

//=====================================\\

//======== ( Emojis do Tiago ) =========\\

var emojos = [`üïâÔ∏è`,`‚úùÔ∏è`,`‚ò™Ô∏è`,`‚ò∏Ô∏è`,`‚ú°Ô∏è`,`üîØ`,`üïé`,`‚òØÔ∏è`,`‚ò¶Ô∏è`,`üõê`,`‚õé`,`‚ôí`,`‚ôë`,`‚ôê`,`‚ôè`,`‚ôé`,`‚ôå`,`‚ôã`,`‚ôä`,`‚ôâ`,`‚ôà`,`‚ôì`,`üÜî`,`‚öõÔ∏è`,`üà∂`,`üàö`,`üà∏`,`üà∫`,`üà∑Ô∏è`,`‚ú¥Ô∏è`,`üÜöÔ∏è`,`üà¥`,`üàµ`,`üàπ`,`üà≤`,`üÖ∞Ô∏è`,`üÖ±Ô∏è`,`üÜë`,`üÖæÔ∏è`,`üèß`,`üöæ`,`‚ôø`,`üÖøÔ∏è`,`üõó`,`üà≥`,`üàÇÔ∏è`,`üõÇ`,`üõÉ`,`üõÑ`,`üõÖ`,`üöπ`,`üö∫`,`üöº`,`‚öß`,`üöª`,`üöÆ`,`üé¶`,`üì∂`,`üàÅ`,`üî£`,`üî§`,`üî°`,`üî†`,`üÜñ`,`üÜó`,`üÜô`,`#Ô∏è‚É£`,`üîÑ`,`üîÇ`,`üîÅ`,`üîÄ`,`‚è∫Ô∏è`,`‚èπÔ∏è`,`‚è∏Ô∏è`,`üî¢`]

function EmojeG(setgg){
return setgg[Math.floor(Math.random() * (setgg.length))]
}

// ======== ( Final ) ======== \\


const startAle = async() => {

// ABAIXO: IN√çCIO DE CONEX√ÉO

const destiny = makeWASocket({
logger: P({ level: 'fatal' }),
printQRInTerminal: true,
auth: state
})

store.bind(destiny.ev)



//==============Clans ü•ã

const guildasdir = './datab/usuarios/guildas.json'
const guildas  = JSON.parse(fs.readFileSync(guildasdir))

let dataclan = []
for (let i = 0; i < guildas.length; i++){
dataclan.push(guildas[i].clan)
}

const clanId = (userId) => {
let position = false
Object.keys(guildas).forEach((i) => {
if (guildas[i].id.includes(userId)) {
position = i
}
})
if (position !== false) {
return guildas[position].clan
}
}

const clanPs = (userId) => {
let position = false
Object.keys(guildas).forEach((i) => {
if (guildas[i].id.includes(userId)) {
position = i
}
})
if (position !== false) {
return position
}
}

const levelclanId = (userId) => {
let position = false
Object.keys(guildas).forEach((i) => {
if (guildas[i].clan === userId) {
position = i
}
})
if (position !== false) {
return guildas[position].level
}
}

const attacksclanId = (userId) => {
let position = false
Object.keys(guildas).forEach((i) => {
if (guildas[i].clan === userId) {
position = i
}
})
if (position !== false) {
return guildas[position].attacks
}
}

const clanLevel = (userId, amount) => {
let position = false
Object.keys(guildas).forEach((i) => {
if (guildas[i].clan === userId) {
position = i
}
})
if (position !== false) {
guildas[position].level += amount
fs.writeFileSync(guildasdir, JSON.stringify(guildas, null, 2) + '\n')
}
}

const clanAttacks = (userId, amount) => {
let position = false
Object.keys(guildas).forEach((i) => {
if (guildas[i].clan === userId) {
position = i
}
})
if (position !== false) {
guildas[position].attacks += amount
fs.writeFileSync(guildasdir, JSON.stringify(guildas, null, 2) + '\n')
}
}

//=====================










//===============(BEM VINDO)=============\\


destiny.ev.on('group-participants.update', async (ale) => {
  
const groupMetadata = await destiny.groupMetadata(ale.id) 
  
const mdata = await destiny.groupMetadata(ale.id)  


// CONST DO CMD DE BANIR QUEM ESTIVER NA LISTA N

const dbackid = []
for(i=0;i<adeuscara.length;++i) dbackid.push(adeuscara[i].groupId)
console.log(ale)
if(dbackid.indexOf(ale.id) >= 0) {
if (ale.action == 'add'){ 
num = ale.participants[0]
var ind = dbackid.indexOf(ale.id)
if(adeuscara[ind].actived && adeuscara[ind].number.indexOf(num.split('@')[0]) >= 0) {
await destiny.sendMessage(mdata.id,{text: '*Olha quem deu as cara por aqui, sente o poder do ban caba√ßo*'})
destiny.groupParticipantsUpdate(mdata.id, [ale.participants[0]], 'remove')
return
}
}
}

// FIM LISTANEGRA CONST ^



// ANTIFAKE QUE EST√Å JUNTO COM BEM VINDO 

if(antifake.includes(ale.id)) {
if (ale.action === 'add' && !ale.participants[0].startsWith(55)){
num = ale.participants[0]
destiny.sendMessage(mdata.id, {text: ' ‚õπÔ∏è‚õπÔ∏èBye Bye Estrangeiro...üëãüèåÔ∏è'})
await delay(1000)
destiny.groupParticipantsUpdate(mdata.id, [ale.participants[0]], 'remove')
}
}

if(antifake.includes(ale.id)) {
if (ale.action === 'add' && ale.participants[0].startsWith(55800)){
num = ale.participants[0]
destiny.sendMessage(mdata.id, {text: ' ‚õπÔ∏è‚õπÔ∏èBye Bye Estrangeiro...üëãüèåÔ∏è'})
await delay(1000)
destiny.groupParticipantsUpdate(mdata.id, [ale.participants[0]], 'remove')
}
}

// FIM ANTIFAKE ^

//====================================\\

function neroespera(index){
destiny.sendMessage(from, { product: { productImage: fs.readFileSync('./logos/clan.jpg'), description: "youth dev's", title: index , productImageCount: 1, productId: "4939046979532720", currencyCode: "USD", priceAmount1000: "100" }, "businessOwnerJid": "559185841876@s.whatsapp.net" });
}

function egirls(index){
destiny.sendMessage(from, { product: { productImage: fs.readFileSync('./logos/egirls.jpg'), description: "youth dev's", title: index , productImageCount: 1, productId: "4939046979532720", currencyCode: "USD", priceAmount1000: "100" }, "businessOwnerJid": "559185841876@s.whatsapp.net" });
}


// BEM VINDO COMPLETO 


if(welkom.includes(ale.id)) {
if(antifake.includes(ale.id) && !ale.participants[0].startsWith(55)) return
try {
  
// PEGAR DESCRI√á√ÉO DO GRUPO. 

const groupDesc = await groupMetadata.desc  
  
try {
ppimg = await destiny.profilePictureUrl(ale.participants[0])
} catch {
ppimg = 'https://telegra.ph/file/b5427ea4b8701bc47e751.jpg'
}

try {
ppgp = await destiny.profilePictureUrl(mdata.id)
} catch {
ppgp = 'https://image.flaticon.com/icons/png/512/124/124034.png'
}

shortpc = await axios.get(`https://tinyurl.com/api-create.php?url=${ppimg}`)
shortgc = await axios.get(`https://tinyurl.com/api-create.php?url=${ppgp}`)

const groupIdWelcomed = []
const groupIdBye = []
for(let obj of welcome_group) groupIdWelcomed.push(obj.id)
for(let obj of bye_group) groupIdBye.push(obj.id)


const isByed = groupIdBye.indexOf(ale.id) >= 0 ? true : false

const isWelcomed = (groupIdWelcomed.indexOf(ale.id) >= 0) ? true : false

if(ale.action === 'add') {
if(isWelcomed) {
var ind = groupIdWelcomed.indexOf(ale.id)
teks = welcome_group[ind].msg
.replace('#hora#', time)
.replace('#nomedogp#', mdata.subject)
.replace('#numerodele#', '@'+ale.participants[0].split('@')[0])
.replace('#numerobot#', destiny.user.id)
.replace('#prefixo#', prefix)
.replace('#descri√ß√£o#', groupDesc)
} else {
teks = welcome(ale.participants[0].split('@')[0], mdata.subject)
}
let buff = await getBuffer(ppimg)
ran = getRandom('.jpg')
await fs.writeFileSync(ran, buff)

fs.unlinkSync(ran)
imgbuff = await getBuffer(`https://aleatoryapi.herokuapp.com/welcome?titulo=BEM%20VINDO(A)&nome=${ale.participants[0].split('@')[0]}&perfil=${shortpc.data}&fundo=${fundo1}&grupo=BEM VINDO AO GRUPO ${encodeUrl(mdata.subject)}`)
destiny.sendMessage(mdata.id, {image: imgbuff, 
mentions: ale.participants, caption: teks})

} else if(ale.action === 'remove') {
mem = ale.participants[0]

try {
ppimg = await destiny.profilePictureUrl(`${mem.split('@')[0]}@c.us`)
} catch {
ppimg = 'https://telegra.ph/file/b5427ea4b8701bc47e751.jpg'
}


if(isByed) {
var ind = groupIdBye.indexOf(ale.id)
teks = bye_group[ind].msg
.replace('#hora#', time)
.replace('#nomedogp#', mdata.subject)
.replace('#numerodele#', ale.participants[0].split('@')[0])
.replace('#numerobot#', destiny.user.id)
.replace('#prefixo#', prefix)
.replace('#descri√ß√£o#', groupDesc)
} else {
teks = bye(ale.participants[0].split('@')[0])
}

let buff = await getBuffer(ppimg)
ran = getRandom('.jpg')
fs.writeFileSync(ran, buff)

imgbuff = await getBuffer(`https://aleatoryapi.herokuapp.com/welcome?titulo=Adeus&nome=${ale.participants[0].split('@')[0]}&perfil=${shortpc.data}&fundo=${fundo1}&grupo=SAIU DE ${encodeUrl(mdata.subject)}`)
destiny.sendMessage(mdata.id, {image: imgbuff, caption: teks, 
mentions: ale.participants})
 fs.unlinkSync(ran)

}
} catch (e) {
console.log(e);
}
}
})
// FIM ^


// BEM VINDO 2 ( SEM FOTO )

destiny.ev.on('creds.update', saveState);
destiny.ev.on('group-participants.update', async (ale) => {
 

if(welkom2.includes(ale.id)) {
if(antifake.includes(ale.id) && !ale.participants[0].startsWith(55)) return
try {

const groupMetadata = await destiny.groupMetadata(ale.id) 
  
const mdata = await destiny.groupMetadata(ale.id)  

// PEGAR DESCRI√á√ÉO DO GRUPO

const groupDesc = await groupMetadata.desc

const groupIdWelcomed2 = []
const groupIdBye2 = []
for(let obj of welcome_group2) groupIdWelcomed2.push(obj.id)
for(let obj of bye_group2) groupIdBye2.push(obj.id)


const isByed2 = groupIdBye2.indexOf(ale.id) >= 0 ? true : false

const isWelcomed2 = (groupIdWelcomed2.indexOf(ale.id) >= 0) ? true : false

if(ale.action === 'add') {
if(isWelcomed2) {
var ind = groupIdWelcomed2.indexOf(ale.id)
teks = welcome_group2[ind].msg
.replace('#hora#', time)
.replace('#nomedogp#', mdata.subject)
.replace('#numerodele#', '@'+ale.participants[0].split('@')[0])
.replace('#numerobot#', destiny.user.id)
.replace('#prefixo#', prefix)
.replace('#descri√ß√£o#', groupDesc)
} else {
teks = welcome(ale.participants[0].split('@')[0], mdata.subject)
}

destiny.sendMessage(mdata.id, {text: teks}, {mentions: ale.participants})

} else if(ale.action === 'remove') {
mem = ale.participants[0]

if(isByed2) {
var ind = groupIdBye2.indexOf(ale.id)
teks = bye_group2[ind].msg
.replace('#hora#', time)
.replace('#nomedogp#', mdata.subject)
.replace('#numerodele#', ale.participants[0].split('@')[0])
.replace('#numerobot#', destiny.user.id)
.replace('#prefixo#', prefix)
.replace('#descri√ß√£o#', groupDesc)
} else {
teks = bye(ale.participants[0].split('@')[0])
}

destiny.sendMessage(mdata.id, {text: teks}, {mentions: ale.participants})
 fs.unlinkSync(ran)
}
} catch (e) {
console.log(e);
}
}
})
// FIM BEM VINDO (2)

destiny.ev.on('messages.upsert', async ({ messages }) => {
try {
const info = messages[0]
if (!info.message) return 
saveState()
if (info.message.protocolMessage) return 
await destiny.readMessages([info.key]);
if (info.key && info.key.remoteJid == 'status@broadcast') return

const altpdf = Object.keys(info.message)
const type = altpdf[0] == 'senderKeyDistributionMessage' ? altpdf[1] == 'messageContextInfo' ? altpdf[2] : altpdf[1] : altpdf[0]

global.prefix

global.blocked

const content = JSON.stringify(info.message)
const speed = require('performance-now');
const from = info.key.remoteJid
const isGroup = from.endsWith('@g.us')

//==============(BODY)================\\
var body = (type === 'conversation') ? info.message.conversation : (type === 'imageMessage') ? info.message.imageMessage.caption : (type === 'videoMessage') ? info.message.videoMessage.caption : (type === 'extendedTextMessage') ? info.message.extendedTextMessage.text : (type === 'buttonsResponseMessage') ? info.message.buttonsResponseMessage.selectedButtonId : (type === 'listResponseMessage') ? info.message.listResponseMessage.singleSelectReply.selectedRowId : (type === 'templateButtonReplyMessage') ? info.message.templateButtonReplyMessage.selectedId : ''

const args = body.trim().split(/ +/).slice(1)
const isCmd = body.startsWith(prefix) || body.startsWith(prefix2) || body.startsWith(prefix3) || body.startsWith(prefix4)
const command = isCmd ? body.slice(1).trim().split(/ +/).shift().toLocaleLowerCase() : null

//================(BADY)================\\

bady = (type === 'conversation') ? info.message.conversation : (type == 'imageMessage') ? info.message.imageMessage.caption : (type == 'videoMessage') ? info.message.videoMessage.caption : (type == 'extendedTextMessage') ? info.message.extendedTextMessage.text : (info.message.listResponseMessage && info.message.listResponseMessage.singleSelectReply.selectedRowId) ? info.message.listResponseMessage.singleSelectReply.selectedRowId: ''

//=====================================\\


//===============(BUDY)==================\\

budy = (type === 'conversation') ? info.message.conversation : (type === 'extendedTextMessage') ? info.message.extendedTextMessage.text : ''

//======================================\\

var pes = (type === 'conversation' && info.message.conversation) ? info.message.conversation : (type == 'imageMessage') && info.message.imageMessage.caption ? info.message.imageMessage.caption : (type == 'videoMessage') && info.message.videoMessage.caption ? info.message.videoMessage.caption : (type == 'extendedTextMessage') && info.message.extendedTextMessage.text ? info.message.extendedTextMessage.text : ''

//===========(ID DAS FIGUS)===========\\

const figura = Object.keys(info.message)[0] == "stickerMessage" ? info.message.stickerMessage.fileSha256.toString('base64') : ""

//=====================================\\

const groupMetadata = isGroup ? await destiny.groupMetadata(from) : ''
const groupName = isGroup ? groupMetadata.subject : ''
const sender = isGroup ? info.key.participant : info.key.remoteJid
const pushname = info.pushName ? info.pushName : ''

const messagesC = pes.slice(0).trim().split(/ +/).shift().toLowerCase()

const arg = body.substring(body.indexOf(' ') + 1)

const botNumber = destiny.user.id.split(':')[0]+'@s.whatsapp.net'
const argss = body.split(/ +/g)
const testat = body
const ants = body
const tescuk = ["0@s.whatsapp.net"]
const q = args.join(' ')

const groupDesc = isGroup ? groupMetadata.desc : ''

const groupMembers = isGroup ? groupMetadata.participants : ''

const groupAdmins = isGroup ? getGroupAdmins(groupMembers) : ''

//=======================================\\

const nmrdn = setting.numerodono.replace(new RegExp("[()+-/ +/]", "gi"), "") + `@s.whatsapp.net`

const numerodono = [`${nmrdn}`, `${nescessario.dono1}@s.whatsapp.net`, `${nescessario.dono2}@s.whatsapp.net`, `${nescessario.dono3}@s.whatsapp.net`, `${nescessario.dono4}@s.whatsapp.net`, `${nescessario.dono5}@s.whatsapp.net`, `${nescessario.dono6}@s.whatsapp.net`]

//============(SORTEIO-CONST)============\\

const { infosorteio } = require('./armor/js/infosorteio.js')

//=========(enviar.espere)=============\\

const votacao = JSON.parse(fs.readFileSync('./dados/duelo/votacao.json'))

const { addVotoDuelo, delVotoDuelo } = require('./lib/votoduelo.js')

const votacaoduelo = JSON.parse(fs.readFileSync('./dados/duelo/votacaoduelo.json'))

const { mensagens } = require('./armor/js/aleatoria.js');

const { sortear } = require('./armor/js/aleatoria.js');

const registro = JSON.parse(fs.readFileSync('./datab/usuarios/registro.json'));

var enviarmen = mensagens[Math.floor(Math.random() * mensagens.length)] 
//========================================\\

//=======(ADMS/DONO/ETC..CONST)========\\

const quoted = info.quoted ? info.quoted : info

const isBot = info.key.fromMe ? true : false

const SoDono = numerodono.includes(sender) || isBot

const DonoOficial = setting.numerodono.includes(sender) 

const isPremium = premium.includes(sender)

const isBotGroupAdmins = groupAdmins.includes(botNumber) || false

const isGroupAdmins = groupAdmins.includes(sender) || false 

//============(FUN√á√ïES)============\\

const isWelkom2 = isGroup ? welkom2.includes(from) : true

const isVote = isGroup ? voting.includes(from) : false

const isModobn =  isGroup ? modobn.includes(from) : true

const isNsfw =  isGroup ? nsfw.includes(from) : true

const isSimi = isGroup ? samih.includes(from) : false

const isSimi2 = isGroup ? samih2.includes(from) : false

const isBanned = ban.includes(sender)

//===========(ANTIS-PROTE√á√ïES)===========\\

const isAntifake = isGroup ? antifake.includes(from) : false

const isAntiCtt = isGroup ? antictt.includes(from) : false

const isAnticatalogo = isGroup ? anticatalogo.includes(from) : false

const isAntiFlood = isGroup ? antiflood.includes(from) : false	

const isnit = nit.includes(sender) 

const isAntiLinkHard = isGroup ? antilinkhard.includes(from) : false

const isJoguin = isGroup ? joguinhodavelhajs.includes(sender) : false

const isAntilinkgp = isGroup ? antilinkgp.includes(from) : false

const isAutofigu = isGroup ? autofigu.includes(from) : false

const isAntiAudio = isGroup ? antiaudio.includes(from) : false	
	
const isAntiImg = isGroup ? antiimg.includes(from) : false

const isAntiSticker = isGroup ? antisticker.includes(from) : false

const isAntiNotas = isGroup ? antinotas.includes(from) : false

const Antidoc = isGroup ? antidoc.includes(from) : false

const Antiloc = isGroup ? antiloc.includes(from) : false

const isAntiVid = isGroup ? antivid.includes(from) : false	

const ischyt = chyt.includes(sender)

const isAntiPv = (antipv.indexOf('Ativado') >= 0) ? true : false	

const isAnticall = (anticall.indexOf('Ativado') >= 0) ? true : false

const isPalavrao = isGroup ? palavrao.includes(from) : false	

const isViewOnce = (type == 'viewOnceMessage')

//=======================================\\

enviar = {
espere: `${enviarmen}`,
successo: 'Ô∏è‚ù¨ ‚úî ‚ù≠ Sucesso üñ§',
levelon: '‚ù¨ ‚úî ‚ù≠ *leveling* *ativado*',
leveloff: '‚ù¨ X ‚ù≠  *leveling* *desativado*',
levelnoton: '‚ù¨ X ‚ù≠ *leveling n√£o ativado*',
levelnol: '*error* 0 ¬∞-¬∞',
error: {
stick: '*falhou, tente novamente ^_^*',
Iv: 'Link invalido ‚òπÔ∏è'
},
msg: {
grupo: '[‚ùó] Este comando s√≥ pode ser usado em grupos! ‚ùå',
premium: '[‚ùó] ESTE PEDIDO √â SO PARA *USU√ÅRIOS PREMIUMS*',
mod: `[‚ùó] ESTE PEDIDO √â ESPEC√çFICO PARA USUARIO MOD ${setting.NickDono}*`,
banido: '‚ùå Voc√™ foi banido de utilizar os comandos, entre em contato com o propriet√°rio pra saber o porque ‚ùå' ,
donosmt: '[‚ùó] Este √© um recurso especial para o propriet√°rio ‚ùå',
donosmt2: '[‚ùó] Este √© um recurso especial para o propriet√°rio ‚ùå',
adm: '[‚ùó] Este comando s√≥ pode ser usado por administradores de grupo! ‚ùå',
Badmin: ' [‚ùó] Este comando s√≥ pode ser usado quando o bot se torna administrador! ‚ùå',
}
}

//=========(CONSTS-FUN√á√ïES)============\\

const isWelkom = isGroup ? welkom.includes(from) : false

const issupre = supre.includes(sender)

const isLevelingOn = isGroup ? _leveling.includes(from) : false

const isBanchat = isGroup ? bancht.includes(from) : false	

//=====================================\\



//==========(VERIFICADO)===============\\

const selo = { key: {fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: "status@broadcast" } : {}) }, message: { "imageMessage": { "url": "https://mmg.whatsapp.net/d/f/At0x7ZdIvuicfjlf9oWS6A3AR9XPh0P-hZIVPLsI70nM.enc", "mimetype": "image/jpeg","caption": `${NomeDoBot}`, 'jpegThumbnail': fs.readFileSync('./logos/logo2.jpg')}}}

//=====================================\\

if (info.key.fromMe && !isCmd) return

const isMentioned = info?.message?.extendedTextMessage?.contextInfo?.mentionedJid >= 1 ? true : false
const isQuoted = info?.message?.extendedTextMessage?.contextInfo?.quotedMessage ? true : false
const mentioned = isMentioned ? info.message.extendedTextMessage.contextInfo.mentionedJid : isQuoted ? [info.message.extendedTextMessage.contextInfo.participant] : null

const reply = (texto) => {
destiny.sendMessage(from, { text: texto }, {quoted: info})
}

const getGroup = async function(totalchat){
let grup = []
let a = []
let b = []
for (c of totalchat){
a.push(c.id)
}
for (d of a){
if (d && d.includes('g.us')){
b.push(d)
}
}
for (e of b){
let ingfo = await destiny.groupMetadata(e)
grup.push(ingfo)
}
return grup
}  


const isUrl = (url) => {
if(linkfy.find(url)[0]) return true
return false
}	

const time2 = moment().tz('America/Sao_Paulo').format('HH:mm:ss')
if(time2 > "00:00:00"){
var tempo = 'Boa madrugada'
                                        } 
if(time2 > "05:30:00"){
var tempo = 'Bom dia'
                                        }
if(time2 > "12:00:00"){
var tempo = 'Boa tarde'
                                        }
if(time2 > "19:00:00"){
var tempo = 'Boa noite'
                                        }


const getFileBuffer = async (mediakey, MediaType) => {
  
const stream = await downloadContentFromMessage(mediakey, MediaType)

let buffer = Buffer.from([])
for await(const chunk of stream) {
buffer = Buffer.concat([buffer, chunk])
}
return buffer
}

const sendSticker = (from, filename, info) => {
destiny.sendMessage(from, {sticker: filename}, {quoted: info})
}

const sendImage = (ytb) => {
destiny.sendMessage(from, {image: ytb}, {quoted:info})
}


const sendMess = (hehe, ytb) => {
destiny.sendMessage(hehe, {text: ytb})
}


const mentions = (teks, memberr, id) => {
(id == null || id == undefined || id == false) ? destiny.sendMessage(from, {text: teks.trim(), mentions: memberr}) : destiny.sendMessage(from, {text: teks.trim(), mentions: memberr})
}
	
const costum = (pesan, tipe, target, target2) => {
destiny.sendMessage(from, pesan, tipe, {quoted: {key: {fromMe: false, participant: `${target}`, ...(from ? {remoteJid: from}: {})}, message: {conversation: `${target2}` }}})
}


const groupIdWelcomed = []	
for(let obj of welcome_group) groupIdWelcomed.push(obj.id)

const groupIdBye = []
for(let obj of bye_group) groupIdBye.push(obj.id)

const isWelcomed = (groupIdWelcomed.indexOf(from) >= 0) ? true : false

const isByed = (groupIdBye.indexOf(from) >= 0) ? true : false

const groupIdWelcomed2 = []	

for(let obj of welcome_group2) groupIdWelcomed2.push(obj.id)

const groupIdBye2 = []

for(let obj of bye_group2) groupIdBye2.push(obj.id)


const isWelcomed2 = (groupIdWelcomed2.indexOf(from) >= 0) ? true : false

const isByed2 = (groupIdBye2.indexOf(from) >= 0) ? true : false	
	
	//-_-_-_-_--_--_-_-_-_-_-_-_-_-_-_-_\\

const isVoto = isGroup ? votacao.includes(from) : false

const isVotoDuelo = isGroup ? votacaoduelo.includes(from) : false

/** VOTA√á√ÉO ESTILO DUELO : VS **/

if( isGroup ) {

if (budy.toLowerCase() === 'um'){

let voto = JSON.parse(fs.readFileSync(`./dados/duelo/P_votos/${from}.json`))
let _votos = JSON.parse(fs.readFileSync(`./dados/duelo/votos/${from}.json`))
let filtro = voto.map(v => v.participante)
let id_voto = sender ? sender : '0@s.whatsapp.net'
if(filtro.includes(id_voto)) {
return mentions('Ol√° '+'@' + sender.split('@')[0] + '\n~ N√£o √© poss√≠vel votar duas vezes.', filtro, true)
} else {
voto.push({
participante: id_voto,
votacao: '1'
})
fs.writeFileSync(`./dados/duelo/P_votos/${from}.json`,JSON.stringify(voto))
let _p = []
let _voto = `VOTA√á√ÉO...\n\nParticipante 1: @${_votos[0].votos.split('@')[0]}\nParticipante 2: @${_votos[0].votos2.split('@')[0]}\nMotivo da vota√ß√£o: ${_votos[0].razao}\nTotal de votos: ${voto.length}.\nDura√ß√£o: ${_votos[0].duracao} minuto.`
for(let i = 0; i < voto.length; i++) {
_voto +=  `\n\n========\nMembro: @${voto[i].participante.split('@')[0]}\nVotou em: ${voto[i].votacao}\n========`
_p.push(voto[i].participante)
}
_p.push(_votos[0].votos, _votos[0].votos2)
mencionar(_voto,_p,true)
}
} else if (budy.toLowerCase() === 'dois'){
const voto = JSON.parse(fs.readFileSync(`./dados/duelo/P_votos/${from}.json`))
let _votos = JSON.parse(fs.readFileSync(`./dados/duelo/votos/${from}.json`))
let filtro = voto.map(v => v.participante)
let id_voto = sender ? sender : '0@s.whatsapp.net'
if(filtro.includes(id_voto)) {
return mentions('Ol√° '+'@' + sender.split('@')[0] + '\n~ N√£o √© possivel votar duas vezes.', filtro, true)
} else {
voto.push({
participante: id_voto,
votacao: '2'
})
fs.writeFileSync(`./dados/duelo/P_votos/${from}.json`,JSON.stringify(voto))
let _p = []
let _voto = `VOTA√á√ÉO...\n\nParticipante 1: @${_votos[0].votos.split('@')[0]}\nParticipante 2: @${_votos[0].votos2.split('@')[0]}\nMotivo da vota√ß√£o: ${_votos[0].razao}\nTotal de votos: ${voto.length}.\nDura√ß√£o: ${_votos[0].duracao} minuto.`
for(let i = 0; i < voto.length; i++) {
_voto +=  `\n\n========\nMembro: @${voto[i].participante.split('@')[0]}\nVotou em: ${voto[i].votacao}\n========\n`
_p.push(voto[i].participante)
}
_p.push(_votos[0].votos, _votos[0].votos2)
mencionar(_voto,_p,true)
}
}
}

//=====(FUN√á√ÉO-CHECAR-LIMIT)====\\
const checkLimit = (sender) => {
let found = false
for (let lmt of _limit) {
if (lmt.id === sender) {
let limitCounts = limitawal - lmt.limit
if (limitCounts <= 0) return destiny.sendMessage(from,{text: `[üëæ] *LIMIT ESGOTADO*\n\n_Nota : para obter mais limit compre usando *${prefix}buylimit* ou suba de n√≠vel...`},{sendEphemeral: true, contextInfo: { forwardingScore: 50, isForwarded: true}, quoted: info})
destiny.sendMessage(from, {text: jrpl.limitcount(limitCounts)}, { quoted : info})
found = true
}
}
if (found === false) {
let obj = { id: sender, limit: 0 }
_limit.push(obj)
fs.writeFileSync('./datab/grupos/limit.json', JSON.stringify(_limit))
destiny.sendMessage(from, {text: jrpl.limitcount(limitCounts)}, { quoted : info})
}
} 
							
	//funtion limitado
const isLimit = (sender) =>{ 
if (issupre) {return false;}
let position = false
for (let i of _limit) {
if (i.id === sender) {
let limits = i.limit
if (limits >= limitawal ) {
position = true
destiny.sendMessage(from, {text: jrpl.limitend(pushname)}, {sendEphemeral: true, contextInfo: { forwardingScore: 50, isForwarded: true}, quoted: info})
return true
} else {
_limit
position = true
return false
}
}
}
if (position === false) {
const obj = { id: sender, limit: 0 }
_limit.push(obj)
fs.writeFileSync('./datab/grupos/limit.json',JSON.stringify(_limit))
return false
}
}
	
const sendFileFromUrl = async (from, url, caption, info, men) => {
let mime = ''; 
let res = await axios.head(url)
mime = res.headers['content-type'] 
if (mime.split("/")[1] === "gif") { 
return destiny.sendMessage(from, {video: await getBuffer(url),
caption: caption, gifPlayback: true, 
mentions: men ? men : []}, {quoted: info}) 
}
 
let type = mime.split("/")[0]+"Message" 
if(mime === "application/pdf"){ 
return destiny.sendMessage(from, {document: await getBuffer(url), mimetype: 'application/pdf', 
caption: caption, mentions: men ? men : []}, {quoted: info}) 
} 

if(mime.split("/")[0] === "image"){ 
return destiny.sendMessage(from, {image: await getBuffer(url), caption: caption, mentions: men ? men : []}, {quoted: info}) 
}
if(mime.split("/")[0] === "video"){ 
return destiny.sendMessage(from, {video: await getBuffer(url), caption: caption, mentions: men ? men : []}, {quoted: info}) 
} 
if(mime.split("/")[0] === "audio"){ 
return destiny.sendMessage(from, {audio: await getBuffer(url), caption: caption, mentions: men ? men : [], mimetype: 'audio'}, {quoted: info}) 
}
}
	
const sendMediaURL = async(to, url, text ="", mids=[]) =>{
if(mids.length > 0){
text = normalizeMention(to, text, mids)
}
const fn = Date.now() / 10000;
const filename = fn.toString()
let mime = ""
var download = function (uri, filename, callback) {
request.head(uri, function (err, res, body) {
mime = res.headers['content-type']
request(uri).pipe(fs.createWriteStream(filename)).on('close', callback);
});
};
download(url, filename, async function () {
console.log('done');
let media = fs.readFileSync(filename)
let type = mime.split("/")[0]+"Message"
if(mime === "image/gif"){
type = video
mime = Mimetype.gif
}
if(mime.split("/")[0] === "audio"){
mime = Mimetype.mp4Audio
}
destiny.sendMessage(to, {type: media, mimetype: mime, caption: text, contextInfo: {"mentionedJid": mids}}, { quoted: info})
fs.unlinkSync(filename)
});
}   

/********** ANTI NOME MODIFICADO **********/
function isDoubleByte(str) {
for (let i = 0, n = str.length; i < n; i++) {
if (str.charCodeAt(i) > 255) {
return true;
}
}
return false;
}

const convertBytes = function(bytes) {
const sizes = ["Bytes", "KB", "MB", "GB", "TB"]
if (bytes == 0) {
return "n/a"
}

const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))
if (i == 0) {
return bytes + " " + sizes[i]
}

return (bytes / Math.pow(1024, i)).toFixed(1) + " " + sizes[i]
}

const sendlistA = async (id, txt1, txt2, title1, btext, but) => {

const sections = but

const listMessage = {
text: txt1,
footer: txt2,
title: title1,
buttonText: btext,
sections
}
destiny.sendMessage(id, listMessage)  
}

// ENVIAR BOT√ÉO COM TEXTO
const sendBtext = async (id, text1, desc1, but = [], vr) => {
buttonMessage = {
text: text1,
footer: desc1,
buttons: but,
headerType: 1
}
destiny.sendMessage(id, buttonMessage, {quoted: vr})
}

/////////////

const sendBvid = async (id, vid1, text1, desc1, but = [], vr) => {
templateMessage = {
video: {url: vid1},
caption: text1,
footer: desc1,
templateButtons: but,
}
destiny.sendMessage(id, templateMessage, {quoted: vr})
}



// ENVIAR BOT√ÉO COM IMAGEM
const sendBimg = async (id, img1, text1, desc1, but = [], vr) => {
buttonMessage = {
image: {url: img1},
caption: text1,
footerText: desc1,
buttons: but,
headerType: 4
}
destiny.sendMessage(id, buttonMessage, {quoted: vr})
}

// PRA ENVIAR BOT√ÉO DE TEMPLATE
const sendBimgT = async (id, img1, text1, desc1, but = [], vr) => {
templateMessage = {
image: {url: img1},
caption: text1,
footer: desc1,
templateButtons: but,
}
destiny.sendMessage(id, templateMessage, {quoted: vr})
}

//////////

const enviarfigu = async (figu, tag) => {
bla = fs.readFileSync(figu)
destiny.sendMessage(from, {sticker: bla}, {quoted: info})
}

const enviarfiguUrl = async (link) => {
ranp = getRandom('.gif')
rano = getRandom('.webp')
ini_buffer = `${link}`
exec(`wget ${ini_buffer} -O ${ranp} && ffmpeg -i ${ranp} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 320:320 ${rano}`, (err) => {
fs.unlinkSync(ranp)
buff = fs.readFileSync(rano)
destiny.sendMessage(from, {sticker: buff}, { quoted: info})
fs.unlinkSync(rano)
})
}

if(isAutofigu && isGroup) {
if(type == "videoMessage") {
buff = await getFileBuffer(info.message.videoMessage, 'video')
ran = getRandom('.'+await getExtension(info.message.videoMessage.mimetype))
fs.writeFileSync(ran, buff)
res = await upload(buff)
enviarfiguUrl(`${res}`).catch(e => {
})
fs.unlinkSync(ran, buff)
} else if(type == "imageMessage") {
buff = await getFileBuffer(info.message.imageMessage, 'image')
ran = getRandom('.'+await getExtension(info.message.imageMessage.mimetype))
fs.writeFileSync(ran, buff)
res = await upload(buff)
enviarfiguUrl(`${res}`).catch(e => {
})
fs.unlinkSync(ran, buff)
}
}

//=====================Dinheiro üí∞üí∞üí∞
const bunda = JSON.parse(fs.readFileSync('./datab/jsons/Pets/petsch.json'))

const dinheiro = JSON.parse(fs.readFileSync('./datab/jsons/dinheiro/dinheiro.json'))

const minerar = JSON.parse(fs.readFileSync('./datab/jsons/dinheiro/minerar.json'))

const isMinerar = minerar.includes(sender)

const roubar = JSON.parse(fs.readFileSync('./datab/jsons/dinheiro/roubar.json'))

const isRoubar = roubar.includes(sender)

const money = (sender, amount) => {
let position = false
Object.keys(dinheiro).forEach((i) => {
if (dinheiro[i].id === sender) {
position = i
}
})
if (position !== false) {
dinheiro[position].dinheiro += amount
fs.writeFileSync('./datab/jsons/dinheiro/dinheiro.json', JSON.stringify(dinheiro, null, 2))
}
}

const getMoneyId = (sender) => {
let position = false
Object.keys(dinheiro).forEach((i) => {
if (dinheiro[i].id === sender) {
position = i
}
})
if (position !== false) {
return dinheiro[position].id
}
}
const MoneyId = getMoneyId(sender)

const getMoney = (sender) => {
let position = false
Object.keys(dinheiro).forEach((i) => {
if (dinheiro[i].id === sender) {
position = i
}
})
if (position !== false) {
return dinheiro[position].dinheiro
}
}
const userId = getMoney(sender)

const PetUser = (sender) => {
let position = false
Object.keys(bunda).forEach((i) => {
if (bunda[i].id === sender) {
position = i
}
})
if (position !== false) {
return bunda[position].pet
}
}
const NomePet = PetUser(sender)

const getNumbe = (sender) => {
let position = false
Object.keys(bunda).forEach((i) => {
if (bunda[i].id === sender) {
position = i
}
})
if (position !== false) {
return bunda[position].id
}
}
const DonoPet = getNumbe(sender)

const getSexopet = (sender) => {
let position = false
Object.keys(bunda).forEach((i) => {
if (bunda[i].id === sender) {
position = i
}
})
if (position !== false) {
return bunda[position].sexo
}
}
const SexoPett = getSexopet(sender)

const getVidaPet = (sender) => {
let position = false
Object.keys(bunda).forEach((i) => {
if (bunda[i].id === sender) {
position = i
}
})
if (position !== false) {
return bunda[position].vida
}
}
const VidaDoPet = getVidaPet(sender)

const getStatusVida = (sender) => {
let position = false
Object.keys(bunda).forEach((i) => {
if (bunda[i].id === sender) {
position = i
}
})
if (position !== false) {
return bunda[position].statu
}
}
const StatusVivo = getStatusVida(sender)

const getProte√ß√£o = (sender) => {
let position = false
Object.keys(bunda).forEach((i) => {
if (bunda[i].id === sender) {
position = i
}
})
if (position !== false) {
return bunda[position].prote√ß√£o
}
}

const getPosition = (sender) => {
let position = false
Object.keys(bunda).forEach((i) => {
if (bunda[i].id === sender) {
position = i
}
})
if (position !== false) {
return position
}
}

const energypet = (sender, amount) => {
let position = false
Object.keys(dinheiro).forEach((i) => {
if (bunda[i].id === sender) {
position = i
}
})
if (position !== false) {
bunda[position].energia += amount
fs.writeFileSync('./datab/jsons/Pets/petsch.json', JSON.stringify(bunda, null, 2))
}
}

const getEnergy = (sender) => {
let position = false
Object.keys(bunda).forEach((i) => {
if (bunda[i].id === sender) {
position = i
}
})
if (position !== false) {
return bunda[position].energia
}
}
const PetEnergy = getEnergy(sender)

const getPosiPet = (index) => {
let position = undefined
bunda.forEach((o, i) => {
if (o.id == index){
position = i
}
})
return position
}

const PosiMoney = (index) => {
let position = undefined
dinheiro.forEach((o, i) => {
if (o.id == index){
position = i
}
})
return position
}

function petAtack(tipo){
if (tipo == '√Ågua'){
var atack = ["Rajada de √Ågua Suprema#70","Bomba de √Ågua#80","Mini Gotinhas de √Åguas#90"]
} else if (tipo == 'Fogo'){
var atack = ["Canh√£o de Fogo#70","Rabada De Fogo#65", "Fogo Emo#90"]
} else if (tipo == 'Gelo'){
var atack = ["Frio Artico#70", "Golpe gelado#80", "Espinhos de Gelo#90"]
}
return atack[Math.floor(Math.random() * atack.length)]
}

/////////

var nmrdnofc1 = setting.numerodono.replace(new RegExp("[()+-/ +/]", "gi"), "")

if(isGroup && fs.existsSync(`./func/afk/afk-@${nmrdnofc1}.json`)) {
if(budy.includes(`@${nmrdnofc1}`)) {
const tabelin = JSON.parse(fs.readFileSync(`./func/afk/afk-@${nmrdnofc1}.json`));  

txt = `- Ol√°, o ${NickDono} Est√° ausente.\n\n - Desde: ${tabelin.Ausente_Desde}\n\n- üòá Mensagem de aus√™ncia : ${tabelin.Motivo_Da_Aus√™ncia}`

destiny.sendMessage(from, {text: txt}, {quoted: info})
}
}
 
if(isGroup && fs.existsSync(`./func/sairgp/sairgp-${from}.json`)) {

const sairalg = JSON.parse(fs.readFileSync(`./func/sairgp/sairgp-${from}.json`)); 

datinhaofc = moment.tz('America/Sao_Paulo').format('DD/MM/YY');

if(datinhaofc >= sairalg.Data_de_sair) {

group = await destiny.groupMetadata(from)
member = group['participants']
mem = []
member.map( async adm => {
mem.push(adm.id.replace('c.us', 's.whatsapp.net'))
})
options = {
text: `Aten√ß√£o membros, aqui quem est√° falando √© o bot com a mensagem autom√°tica, sairei do grupo por o tempo que foi realizado no dia que alugou, completou 30 dias....`,
mentions: mem,
quoted: info
}
destiny.sendMessage(from, options)

exec(`cd func && cd sairgp && rm sairgp-${from}.json`)

setTimeout(async() => {
reply(`${prefix}sairgp`)
}, 5000)
}
}

if(fs.existsSync("baileys_store_multi.json")) {
statsObj = fs.statSync('./baileys_store_multi.json')  

if(convertBytes(statsObj.size) >= "20 MB") {
exec("rm baileys_store_multi.json")
}
}
 
//========================================\\
//BAN CHATS/GRUPOS
if (isBanchat && !isGroupAdmins && !SoDono){
if (!isGroupAdmins && !SoDono) return
if (budy.toLowerCase().startsWith('unbangp')){
if (isCmd && !isBanchat && !isGroupAdmins) return reply(`Este grupo esta banido, ou seja n√£o estou ouvindo ningu√©m`)
let lfd = bancht.indexOf(from)
bancht.splice(lfd, 1)
fs.writeFileSync('./datab/grupos/banchat.json', JSON.stringify(bancht))
reply(`Grupo desbanido...`)
}
}

//=======FUNCIONALIDADE PATENTE=========\\
const nivelAtual = getLevelingLevel(sender)
var patt = 'Bronze Iü•â'
if (nivelAtual === 1) {patt = 'Bronze  Iü•â' } else if (nivelAtual === 2) {patt = 'Bronze IIü•â'} else if (nivelAtual === 3) {patt = 'Bronze  IIIü•â'} else if (nivelAtual === 4) {patt = 'Bronze  IVü•â'} else if (nivelAtual === 5) {patt = 'Bronze  Vü•â'} else if (nivelAtual === 6) {patt = 'Prata Iü•à'} else if (nivelAtual === 7) {patt = 'Prata IIü•à'} else if (nivelAtual === 8) {patt = 'Prata IIIü•à'} else if (nivelAtual === 9) {patt = 'Prata IVü•à'} else if (nivelAtual === 10) {patt = 'Prata Vü•à'} else if (nivelAtual === 11) {patt = 'Ouro Iü•á'} else if (nivelAtual === 12) {patt = 'Ouro IIü•á'} else if (nivelAtual === 13) {patt = 'Ouro IIIü•á'} else if (nivelAtual === 14) {patt = 'Ouro IVü•á'} else if (nivelAtual === 15) {patt = 'Ouro Vü•á'} else if (nivelAtual === 16) {patt = 'Campe√£o IüèÜ'} else if (nivelAtual === 17) {patt = 'Campe√£o IIüèÜ'} else if (nivelAtual === 18) {patt = 'Campe√£o IIIüèÜ'} else if (nivelAtual === 19) {patt = 'Campe√£o IVüèÜ'} else if (nivelAtual === 20) {patt = 'Campe√£o VüèÜ'} else if (nivelAtual === 21) {patt = 'Diamante I üíé'} else if (nivelAtual === 22) {patt = 'Diamante II üíé'} else if (nivelAtual === 23) {patt = 'Diamante III üíé'} else if (nivelAtual === 24) {patt = 'Diamante IV üíé'} else if (nivelAtual === 25) {patt = 'Diamante V üíé'} else if (nivelAtual === 26) {patt = 'Mestre I üêÇ'} else if (nivelAtual === 27) {patt = 'Mestre II üêÇ'} else if (nivelAtual === 28) {patt = 'Mestre III üêÇ'} else if (nivelAtual === 29) {patt = 'Mestre IV üêÇ'} else if (nivelAtual === 30) {patt = 'Mestre V üêÇ'} else if (nivelAtual === 31) {patt = 'M√≠tico I üîÆ'} else if (nivelAtual === 32) {patt = 'M√≠tico II üîÆ'} else if (nivelAtual === 33) {patt = 'M√≠tico III üîÆ'} else if (nivelAtual === 34) {patt = 'M√≠tico IV üîÆ'} else if (nivelAtual === 35) {patt = 'M√≠tico V üîÆ'} else if (nivelAtual === 36) {patt = 'God Iüï¥'} else if (nivelAtual === 37) {patt = 'God IIüï¥'} else if (nivelAtual === 38) {patt = 'God IIIüï¥'} else if (nivelAtual === 39) {patt = 'God IVüï¥'} else if (nivelAtual === 40) {patt = 'God Vüï¥'} else if (nivelAtual > 41) {patt = 'üõêGrande Mestreüõê'}
//========================================\\



//========(FUN√á√ÉO DE LEVEL)===========\\

if (isGroup && isLevelingOn) {
const currentLevel = getLevelingLevel(sender)
const checkId = getLevelingId(sender)
try {
if (currentLevel === undefined && checkId === undefined) addLevelingId(sender)
const amountXp = Math.floor(Math.random() * 10) + 500
const requiredXp = 5000 * (Math.pow(2, currentLevel) - 1)
const getLevel = getLevelingLevel(sender)
addLevelingXp(sender, amountXp)
if (requiredXp <= getLevelingXp(sender)) {
addLevelingLevel(sender, 1)
bla = fs.readFileSync('./audios/level.mp3')
destiny.sendMessage(from, {audio: bla, mimetype: 'audio/mp4', ptt:true}, {quoted:info})
gzx = fs.readFileSync('./logos/logo2.jpg')
rafa = `  
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÇ    ‚ó™ LEVEL UP ‚ó™
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÇ‚ùí 
‚îÇ„ÄΩÔ∏èNUMERO: ${sender.split("@")[0]}.               
‚îÇüåêPATENTE*: ${patt}
‚îÇ‚ôªÔ∏èXP: ${getLevelingXp(sender)}
‚îÇüìâLEVEL: ${getLevel} -> ${getLevelingLevel(sender)}
‚îÇ‚ùí
‚ï∞‚îÄ‚îÄ‚îÄ‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚û¢   `   
await destiny.sendMessage(from, {image: gzx, caption: rafa})
}
} catch (err) {
console.error(err)
}
}

//=======================================\\
//=======================================\\



const sendStickerFromUrl = async(to, url) => {
var names = Date.now() / 10000;
var download = function (uri, filename, callback) {
request.head(uri, function (err, res, body) {
request(uri).pipe(fs.createWriteStream(filename)).on('close', callback);
});
};
download(url, './sticker' + names + '.png', async function () {
console.log('enviando sticker');
let filess = './sticker' + names + '.png'
let asw = './sticker' + names + '.webp'
exec(`ffmpeg -i ${filess} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 800:800 ${asw}`, (err) => {
let media = fs.readFileSync(asw)
EnviarAlgo(to, {sticker: media}, {sendEphemeral: true, contextInfo: { forwardingScore: 50, isForwarded: true}, quoted: info})
fs.unlinkSync(filess)
fs.unlinkSync(asw)
});
});
}


//===================================\\

		//JOGO DO ANAGRAM
if(isGroup && fs.existsSync(`./armor/anagrama-${from}.json`)){
let dataAnagrama = JSON.parse(fs.readFileSync(`./armor/anagrama-${from}.json`))
if(budy.slice(0,4).toUpperCase() == dataAnagrama.original.slice(0,4).toUpperCase() && budy.toUpperCase() != dataAnagrama.original) return reply('est√° perto')
xp = Math.floor(Math.random() * 14) + 3000
if(budy.toUpperCase() == dataAnagrama.original) { destiny.sendMessage(from, {text: `parab√©ns ${pushname} ü•≥ voc√™ ganhou o jogo\nPalavra : ${dataAnagrama.original}\nIniciando o proximo jogo em 5 segundos...`}, {"mentionedJid": [sender]}), fs.unlinkSync(`./armor/anagrama-${from}.json`)		
addLevelingXp(sender, xp)
recompensa = `üéâüéâRECOMPENSAüéâüéâ\nVoc√™ ganhou ${xp} em *xp*`
reply(recompensa)
		setTimeout(async() => {
fs.writeFileSync(`./armor/anagrama-${from}.json`, `${JSON.stringify(palavrasANA[Math.floor(Math.random() * palavrasANA.length)])}`)
let dataAnagrama2 = JSON.parse(fs.readFileSync(`./armor/anagrama-${from}.json`))
destiny.sendMessage(from, {text:`
‚ï≠‚îÅ„Äî ü•∑ JOGO DAS LETRAS ü•∑„Äï‚îÅ‚¨£
‚ïë ‚ñ¢ DESCUBRA A PALAVRA
‚ïë ‚ñ¢ ANAGRAMA: ${dataAnagrama2.embaralhada}
‚ïë ‚ñ¢ DICA: ${dataAnagrama2.dica}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
`}) 
}, 5000)
}}

//========================================\\


		//JOGO QUIZ
if(isGroup && fs.existsSync(`./armor/quizanim-${from}.json`)){
let dataAnagramaa = JSON.parse(fs.readFileSync(`./armor/quizanim-${from}.json`))
if(budy.slice(0,4).toUpperCase() == dataAnagramaa.original.slice(0,4).toUpperCase() && budy.toUpperCase() != dataAnagramaa.original) return reply('est√° perto')
if(budy.toUpperCase() == dataAnagramaa.original) { 
destiny.sendMessage(from,{text: `Parab√©ns ${pushname} voc√™ acertou\n${dataAnagramaa.original}\nProximo em 5 segundos...`}, {"mentionedJid": [sender]}), fs.unlinkSync(`./armor/quizanim-${from}.json`)		
setTimeout(async() => {
fs.writeFileSync(`./armor/quizanim-${from}.json`, `${JSON.stringify(quizanimais[Math.floor(Math.random() * quizanimais.length)])}`)
let dataAnagrama2 = JSON.parse(fs.readFileSync(`./armor/quizanim-${from}.json`))
imagemtexto =`                             „Äå‚ùìQuiz‚ùì„Äç`
wew = await getBuffer(`${dataAnagrama2.foto}`)   
await destiny.sendMessage(from, {image: wew, caption: imagemtexto, thumbnail: wew}, {quoted: selo})
}, 5000)
}
}

const sleep = async (ms) => {return new Promise(resolve => setTimeout(resolve, ms))}

//=========(isQuoted/consts)=============\\
const isImage = type == 'imageMessage'
const isVideo = type == 'videoMessage'
const isAudio = type == 'audioMessage'
const isSticker = type == 'stickerMessage'
const isContact = type == 'contactMessage'
const isLocation = type == 'locationMessage'
const isProduct = type == 'productMessage'
const isMedia = (type === 'imageMessage' || type === 'videoMessage' || type === 'audioMessage')
typeMessage = body.substr(0, 50).replace(/\n/g, '')
if (isImage) typeMessage = "Image"
else if (isVideo) typeMessage = "Video"
else if (isAudio) typeMessage = "Audio"
else if (isSticker) typeMessage = "Sticker"
else if (isContact) typeMessage = "Contact"
else if (isLocation) typeMessage = "Location"
else if (isProduct) typeMessage = "Product"

const isQuotedMsg = type === 'extendedTextMessage' && content.includes('textMessage')

const isQuotedImage = type === 'extendedTextMessage' && content.includes('imageMessage')

const isQuotedVideo = type === 'extendedTextMessage' && content.includes('videoMessage')

const isQuotedDocument = type === 'extendedTextMessage' && content.includes('documentMessage')

const isQuotedAudio = type === 'extendedTextMessage' && content.includes('audioMessage')

const isQuotedSticker = type === 'extendedTextMessage' && content.includes('stickerMessage')

const isQuotedContact = type === 'extendedTextMessage' && content.includes('contactMessage')

const isQuotedLocation = type === 'extendedTextMessage' && content.includes('locationMessage')

const isQuotedProduct = type === 'extendedTextMessage' && content.includes('productMessage')
             

///////////ANTI-SPAM BY ITALU/////////
if (isCmd && isFiltered(sender) && !isGroup) {
console.log(color('~> [SPAM]', 'red'), color(moment.tz('America/Sao_Paulo').format('HH:mm:ss'), 'yellow'), color(`${command}`), 'DE:', color(pushname))
const ff = `*„Äå ‚ùó „ÄçFlood detectado, espere 5 segundos*`
return reply(ff)
}
if (isCmd && isFiltered(sender) && isGroup) {
console.log(color('~> [SPAM]', 'red'), color(moment.tz('America/Sao_Paulo').format('HH:mm:ss'), 'yellow'), color(`${command}`), 'DE:', color(pushname))
const ff1 = `*„Äå ‚ùó „ÄçFlood detectado, espere 5 segundos*`
return reply(ff1)
}

//=================== ANTI SPAM CMD ================\\


if (isGroup && isCmd && !info.key.fromMe && !SoDono && !isGroupAdmins && isFlode == undefined){
var nero = { id: sender, contador: 1 }
Flode.push(nero)
setTimeout( () => {
Flode.splice(isFlode, 1)
}, 9000)
} else if (isGroup && isCmd && !info.key.fromMe && !SoDono && !isGroupAdmins && Flode[isFlode].contador < 4){
Flode[isFlode].contador += 1
console.log(Flode)
} else if (isGroup && isCmd && !info.key.fromMe && !SoDono && !isGroupAdmins && Flode[isFlode].contador >= 4){
await destiny.groupSettingUpdate(from, 'announcement')
reply(`ol√° voc√™ acaba de floda muitos comandos consecutivamente, por esse motivo voc√™ ser√° banido`)
destiny.groupParticipantsUpdate(from, [sender], 'remove')
await destiny.groupSettingUpdate(from, 'not_announcement')
reply(`GRUPO ABERTO, USE COM SABEDORIA, NAO SENDO DEMENTE.`)
}


//=========(ANTIPV-QUE-S√ì-FALA)==========\\



//////BLOCK CMD///////
//(CREDITOS AO KAUAN GAY)\\
if(isGroup){
const checar = getComandos(from)
if(checar === undefined) addComandosId(from)
}
if(isGroup && isCmd && !SoDono && !isnit && getComandoBlock(from).includes(command))return reply('comando blockeado')

////FIMMMMMMMMM/////,

if (!isGroup && isCmd) console.log('\033[0;35m~\x1b[1;37m>', '[\x1b[1;32mCOMANDO\x1b[1;37m]', time, color(command), 'do ', color(sender.split('@')[0]))

if (!isGroup && !isCmd && !info.key.fromMe) console.log('\033[0;35m~\x1b[1;37m>', '[\033[0;35mMENSAGEM\x1b[1;37m]', 'do ', color(sender.split('@')[0]))

if (isCmd && isGroup) console.log('\033[0;35m~\x1b[1;37m>', '[\x1b[1;32mCOMANDO\x1b[1;37m]', time, color(command), 'do ', color(sender.split('@')[0]), 'no gp: ', color(groupName))

if (!isCmd && isGroup && !info.key.fromMe) console.log('\033[0;35m~\x1b[1;37m>', '[\033[0;35mMENSAGEM\x1b[1;37m]',  'do ', color(sender.split('@')[0]), 'no gp: ', color(groupName))
//======(JOGO-DA-VELHA)=======(Fun√ß√£o)===\\

//////////_FUN√á√ïES DO JOGO DA VELHA_//////
async function joguinhodavelha() {
if(joguinhodavelhajs2.includes(from) || joguinhodavelhajs.includes(sender)) {
const cmde = budy.toLowerCase().split(" ")[0] || "";
let arrNum = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
if (fs.existsSync(`./armor/tictactoe/db/${from}.json`)) {
const boardnow = setGame(`${from}`);
if (budy == "Cex") return reply("why");
if (
budy.toLowerCase() == "s" ||
budy.toLowerCase() == "sim" ||
budy.toLowerCase() == "ok"
) {
if (boardnow.O == sender.replace("@s.whatsapp.net", "")) {
if (boardnow.status)
return reply(`O jogo j√° come√ßou antes!`);
const matrix = boardnow._matrix;
boardnow.status = true;
fs.writeFileSync(`./armor/tictactoe/db/${from}.json`,
JSON.stringify(boardnow, null, 2)
);
const chatAccept = `*üéÆ·èÄÃ∏·é™Ã∏·é∑Ã∏·é¨Ã∏ ·é†Ã∏·é™Ã∏ ·èôÃ∏·é¨Ã∏·èûÃ∏·éªÃ∏·é™Ã∏üïπÔ∏è*
                    
‚ùå : @${boardnow.X}
‚≠ï : @${boardnow.O}
               
Sua vez... : @${boardnow.turn == "X" ? boardnow.X : boardnow.O}

${matrix[0][0]}  ${matrix[0][1]}  ${matrix[0][2]}
${matrix[1][0]}  ${matrix[1][1]}  ${matrix[1][2]}
${matrix[2][0]}  ${matrix[2][1]}  ${matrix[2][2]}
`;
destiny.sendMessage(from, {text: chatAccept}, {quoted: info,
contextInfo: {
mentionedJid: [
boardnow.X + "@s.whatsapp.net",
boardnow.O + "@s.whatsapp.net", 
],
},
});
}
} else if (
budy.toLowerCase() == "n" ||
budy.toLowerCase() == "n√£o" ||
budy.toLowerCase() == "no"
) {
if (boardnow.O == sender.replace("@s.whatsapp.net", "")) {
if (boardnow.status)
return reply(`O jogo j√° come√ßou!`);
fs.unlinkSync(`./armor/tictactoe/db/${from}.json`);
 destiny.sendMessage(from, {text:
 `@${boardnow.X} *_Infelizmente seu oponente n√£o aceitou o desafio ‚ùåüòï_*`}, {quoted: info,
 contextInfo: {
 mentionedJid: [boardnow.X + "@s.whatsapp.net"],
},
}
);
joguinhodavelhajs.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs))
joguinhodavelhajs2.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
}
}
}

if (arrNum.includes(cmde)) {
const boardnow = setGame(`${from}`);
if (!boardnow.status) return reply(`Parece que seu oponente n√£o aceitou o desafio ainda...`)
if (
(boardnow.turn == "X" ? boardnow.X : boardnow.O) !=
     
sender.replace("@s.whatsapp.net", "")
)
return;
const moving = validmove(Number(budy), `${from}`);
const matrix = moving._matrix;
if (moving.isWin) {
if (moving.winner == "SERI") {
const chatEqual = `*üéÆ·èÄÃ∏·é™Ã∏·é∑Ã∏·é¨Ã∏ ·é†Ã∏·é™Ã∏ ·èôÃ∏·é¨Ã∏·èûÃ∏·éªÃ∏·é™Ã∏üïπÔ∏è*
          
Jogo termina empatado üòê
`;
reply(chatEqual);
fs.unlinkSync(`./armor/tictactoe/db/${from}.json`);
joguinhodavelhajs.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs)) 
joguinhodavelhajs2.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
return;
}
const abt = Math.ceil(Math.random() + 4000)
const winnerJID = moving.winner == "O" ? moving.O : moving.X;
const looseJID = moving.winner == "O" ? moving.X : moving.O;
const limWin = Math.floor(Math.random() * 1) + 10;
const limLoose = Math.floor(Math.random() * 1) + 5;
const chatWon = `*üéÆ·èÄÃ∏·é™Ã∏·é∑Ã∏·é¨Ã∏ ·é†Ã∏·é™Ã∏ ·èôÃ∏·é¨Ã∏·èûÃ∏·éªÃ∏·é™Ã∏üïπÔ∏è*
          
Vencido por @${winnerJID} üòéüëë
`;
addLevelingXp(winnerJID + "@s.whatsapp.net", abt)

destiny.sendMessage(from, {text: chatWon}, {quoted: info,
contextInfo: {
mentionedJid: [
moving.winner == "O" ?
moving.O + "@s.whatsapp.net" :
moving.X + "@s.whatsapp.net",
],
},
});
setTimeout( () => {
if (fs.existsSync("./armor/tictactoe/db/" + from + ".json")) {
 fs.unlinkSync("./armor/tictactoe/db/" + from + ".json");
 reply(`*üïπÔ∏èJOGO DA VELHA RESETADO...üïπÔ∏è*`);
 } else {
console.log(color(time, "red"), color("[ ESPIRADO ]", "magenta"), color('Jogo da velha espirado', "red"));
 }
joguinhodavelhajs.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs))
joguinhodavelhajs2.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
}, 300000) //5 minutos
reply(`_*ü•≥Parab√©ns @${winnerJID} Voc√™ ganhou "${abt}" em xp por ter ganhado o jogo da velhaüéâ...*_`)      
fs.unlinkSync(`./armor/tictactoe/db/${from}.json`);
joguinhodavelhajs.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs)) 
joguinhodavelhajs2.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
} else {
const chatMove = `*üéÆ·èÄÃ∏·é™Ã∏·é∑Ã∏·é¨Ã∏ ·é†Ã∏·é™Ã∏ ·èôÃ∏·é¨Ã∏·èûÃ∏·éªÃ∏·é™Ã∏üïπÔ∏è*
          
‚ùå : @${moving.X}
‚≠ï : @${moving.O}

Sua vez : @${moving.turn == "X" ? moving.X : moving.O}

${matrix[0][0]}  ${matrix[0][1]}  ${matrix[0][2]}
${matrix[1][0]}  ${matrix[1][1]}  ${matrix[1][2]}
${matrix[2][0]}  ${matrix[2][1]}  ${matrix[2][2]}
`;
destiny.sendMessage(from, {text: chatMove}, {quoted: info,
contextInfo: {
mentionedJid: [
moving.X + "@s.whatsapp.net",
moving.O + "@s.whatsapp.net",
],
},
});
}
} 
} 
}


//=================================\\

async function AntilinkHardF() {
if(isUrl(body) && isAntiLinkHard && isGroupAdmins && isBotGroupAdmins) {
linkgpp = await destiny.groupInviteCode(from)
if(!isUrl(body)) return 
if(budy.match(`${linkgpp}`)) return 
if(isBot) return 
reply('*Link detectado, por√©m usu√°rio √© admin*')
}

if(isUrl(body) && isAntiLinkHard && !isGroupAdmins && isBotGroupAdmins) {
linkgpp = await destiny.groupInviteCode(from)
if(budy.match(`${linkgpp}`)) return reply('Link do nosso grupo, n√£o irei remover.. ')  
if(!isUrl(body)) return 
reply('*Link detectado, punindo usu√°rio...*')
destiny.groupParticipantsUpdate(from, [sender], 'remove')
}
} 
AntilinkHardF()
joguinhodavelha()

if(isUrl(body) && isAntilinkgp && isGroup && isBotGroupAdmins) {
if(!isAntilinkgp) return
if(!isUrl(body)) return 
if(isGroupAdmins) return reply("Voc√™ √© adm, n√£o removerei voc√™..") 
if(budy.includes("chat.whatsapp.com/")){
if(!budy.includes("chat.whatsapp.com/")) return
if(isBot) return 
linkgpp = await destiny.groupInviteCode(from)
if(budy.match(`${linkgpp}`)) return reply('Link do nosso grupo, n√£o irei remover.. ')  
reply('*Link de grupo detectado, punindo usu√°rio...*')
destiny.groupParticipantsUpdate(from, [sender], 'remove')
}
}

//========(CONTADOR-DE-MENSAGENS)========\\

const groupIdscount = []
const numbersIds = []
for(let obj of countMessage) {
groupIdscount.push(obj.groupId)
}
if(isGroup && groupIdscount.indexOf(from) >= 0) {
var ind = groupIdscount.indexOf(from)
for(let obj of countMessage[ind].numbers) {numbersIds.push(obj.id)}
if(numbersIds.indexOf(sender) >=0) {
var indnum = numbersIds.indexOf(sender)
countMessage[ind].numbers[indnum].messages += 1
countMessage[ind].numbers[indnum].cmd_messages += isCmd ? 1 : 0
fs.writeFileSync('./datab/grupos/countmsg.json', JSON.stringify(countMessage, null, 2)+ '\n')
} else {
const messages = 1
const cmd_messages = isCmd ? 1 : 0
countMessage[ind].numbers.push({
id: sender,
messages: messages,
cmd_messages: cmd_messages
})
fs.writeFileSync('./datab/grupos/countmsg.json', JSON.stringify(countMessage, null, 2) + '\n')
}
} else if(isGroup) {
countMessage.push({
groupId: from,
numbers: [{
id: sender,
messages: 2,
cmd_messages: isCmd ? 1 : 0
}]
})
fs.writeFileSync('./datab/grupos/countmsg.json', JSON.stringify(countMessage, null, 2) + '\n')
}
//====================================\\


//===============(AUTO-BAN)=============\\
const dbids = []
for(i=0;i<adeuscara.length;++i) {
dbids.push(adeuscara[i].groupId)
}
const isAdeusCara = (isGroup && dbids.indexOf(from) >= 0) ? true : false

//======================================\\


//============(EVAL-EXECU√á√ïES)===========\\

if (budy.startsWith('>')){
try {
if(!SoDono && !isnit && !issupre && !ischyt && !info.key.fromMe && !issupre && !ischyt) return
console.log('[', color('EVAL', 'silver'),']', color(moment(info.messageTimestamp * 1000).format('DD/MM HH:mm:ss'), 'yellow'), color(budy))

return reply(JSON.stringify(eval(budy.slice(2)),null,'\t')) 
} catch (e){
reply(e)
}
}

if (budy.startsWith('=>')){
try {
if (!SoDono && !isnit && !issupre && !ischyt && !info.key.fromMe && !issupre && !ischyt) return 
var konsol = budy.slice(3)
Return = (sul) => {
var sat = JSON.stringify(sul, null, 2)
bang = util.format(sat)
if (sat == undefined){
bang = util.format(sul)
}
return reply(bang)
}

reply(util.format(eval(`;(async () => { ${konsol} })()`)))
console.log('\x1b[1;37m>', '[', '\x1b[1;32mEXEC\x1b[1;37m', ']', time, color(">", "green"), 'from', color(sender.split('@')[0]), 'args :', color(args.length))
} catch (e) {
reply(String(e))  
}
}


if (body.startsWith('$')) {
if(!SoDono && !isnit) return 
if (!q && !SoDono && !isnit && !issupre && !ischyt && !info.key.fromMe) return
exec(q, (err, stdout) => {
if(err) return reply(`${err}`)
if (stdout) {
reply(stdout)
}
})
}

//======================================\\


//======(ANTI-IMAGEM)========\\
if(isAntiImg && isBotGroupAdmins && type == 'imageMessage') {
if (info.key.fromMe) return
if(isGroupAdmins) return destiny.sendMessage(from, {text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: info})
await destiny.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
destiny.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

//======(ANTI-STICKER)========\\
if(isAntiSticker && isBotGroupAdmins && type == 'stickerMessage') {
if (info.key.fromMe) return
if(isGroupAdmins) return destiny.sendMessage(from, {text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: info})
await destiny.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
destiny.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

if(Antidoc && isBotGroupAdmins && type == 'documentMessage') {
if (info.key.fromMe) return
if(isGroupAdmins) return destiny.sendMessage(from, {text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: info})
await destiny.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
destiny.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

// ANTI NOTAS FAKES ======================>

if(isAntiNotas && bady.toString().match(/(üí≥|üíé|üí∏|üíµ|üí∑|üí∂|ü™ô|üí∞|ü§ë|‚öñÔ∏è)/gi) && isBotGroupAdmins) {
if(type == 'stickerMessage') return
let verificar = bady.toString().match(/(üí≥|üíé|üí∏|üíµ|üí∑|üí∂|ü™ô|üí∞|ü§ë|‚öñÔ∏è)/gi)
if (verificar && bady.length < 100) return  
await destiny.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
destiny.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

//FINALZIN ==============================>


//======(ANTI-VIDEO)========\\
if(isAntiVid && isBotGroupAdmins && type == 'videoMessage') {
if(isGroupAdmins) return destiny.sendMessage(from,{text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: info})
await destiny.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
destiny.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

//======(ANTI-AUDIO)=======\\
if(isAntiAudio && isBotGroupAdmins && type == 'audioMessage') {
if(isGroupAdmins) return destiny.sendMessage(from, {text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: info})
await destiny.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
destiny.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}
//=======================================\\


//========(ANTI-PV-QUE-BLOQUEIA)======\\
if(isAntiPv && !isGroup && !SoDono && !isnit && !isPremium){ 
	reply('*Antipv ativado, voc√™ ser√° bloqueado!*\n*Contate o criador*')
delay(4000)
destiny.updateBlockStatus(sender, 'block')
return
}
//======================================\\


//=========(ANTIPV-QUE-S√ì-FALA)==========\\

if(!isGroup && !isPremium && !SoDono && !isnit && !issupre && !ischyt && !info.key.fromMe && banChats === true) return reply(`Ol√°, sou uma intelig√™ncia artificial, programado(a) para realizar a√ß√µes, por adms e o dono, se voc√™ est√° enviando mensagem, provavelmente voc√™ n√£o sabe disso, eu removo diariamente pessoas por enviar links e muito mais..`)
const atibot = info.isBaileys
if (atibot === true) return 


//======================================\\

// ANTI_LIGAR \\

if(isAnticall) {
destiny.ws.on('CB:call', async (B) => {
if (B.content[0].tag == 'offer') {
destiny.sendMessage(B.content[0].attrs['call-creator'], { text: "N√£o pode ligar para o bot, voc√™ ser√° bloqueado.." }).then(() => { 
delay(4000)
destiny.updateBlockStatus(B.content[0].attrs['call-creator'], "block") })
}
})
}

//==SISTEMA DE VOTA√á√ÉO: CR√âDITOS: KAUAN==\\
if(isGroup) {
if (budy.toLowerCase() === 'voto'){
let vote = JSON.parse(fs.readFileSync(`./armor/${from}.json`))
let _votes = JSON.parse(fs.readFileSync(`./armor/vote/${from}.json`))  
let fil = vote.map(v => v.participant)
let id_vote = sender ? sender : '0@s.whatsapp.net'
if(fil.includes(id_vote)) {
return mentions('@'+sender.split('@')[0]+' n√£o √© possivel votar duas vezes', fil, true)
} else {
vote.push({
participant: id_vote,
voting: '‚úÖ'
})
fs.writeFileSync(`./armor/${from}.json`,JSON.stringify(vote))
let _p = []
let _vote = '*Vote* '+ '@'+ _votes[0].votes.split('@')[0] + `\n\n*para*: ${_votes[0].reason}\n*total Votos* : ${vote.length} Votos\n*Dura√ß√£o* : ${_votes[0].durasi} minutos\n\n` 
for(let i = 0; i < vote.length; i++) {
_vote +=  `@${vote[i].participant.split('@')[0]}\n*Vote* : ${vote[i].voting}\n\n`
_p.push(vote[i].participant)
        }  
_p.push(_votes[0].votes)
mentions(_vote,_p,true)   
}
} else if (budy.toLowerCase() === 'devoto'){
const vote = JSON.parse(fs.readFileSync(`./armor/${from}.json`))
let _votes = JSON.parse(fs.readFileSync(`./armor/vote/${from}.json`))  
let fil = vote.map(v => v.participant)
let id_vote = sender ? sender : '0@s.whatsapp.net'
if(fil.includes(id_vote)) {
return mentions('@'+sender.split('@')[0]+' n√£o √© possivel anular um voto', fil, true)
} else {
vote.push({
participant: id_vote,
voting: '‚ùå'
})
fs.writeFileSync(`./armor/${from}.json`,JSON.stringify(vote))
let _p = []
let _vote = '*Vote* '+ '@'+ _votes[0].votes.split('@')[0] + `\n\n*para*: ${_votes[0].reason}\n*total Votos* : ${vote.length} Vote\n*dura√ß√£o* : ${_votes[0].durasi} minutos\n\n` 
for(let i = 0; i < vote.length; i++) {
_vote +=  `@${vote[i].participant.split('@')[0]}\n*Vote* : ${vote[i].voting}\n\n`
_p.push(vote[i].participant)
}  
_p.push(_votes[0].votes)
mentions(_vote,_p,true)   
}
}
}	
//======================================\\


//_CONTAGEM DE COMANDOS
if (isCmd) cmdadd()
            
if (isBanned) return
BannedExpired(ban)

if (isCmd && !SoDono && !isnit && !issupre && !ischyt) addFilter(sender)


switch (figura) {
  
case 'PhBL0PtpQ7pESrESQNgLuXpPJfhblay8ykTUfOH3xpRXYw=':
bla = fs.readFileSync('./audios/qviado.mp3')
destiny.sendMessage(from, {audio: bla, mimetype: 'audio/mp4', ptt:true}, {quoted:info})
break
}

//INICIO DE COMANDO DE PREFIXO
switch(command) {
  
//========(-MENUS-DE-CMDS-)========\\

case 'cu': {
const infowe = ["https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
bundak = infowe[Math.floor(Math.random() * infowe.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
bla = await getBuffer('https://telegra.ph/file/4a10f6f0ae553daac1302.jpg')
let buttons = [
{buttonId: `${prefix}dono`, buttonText: {displayText: '‚≠î DONO ‚≠î'}, type: 1},
{buttonId: `${prefix}ping`, buttonText: {displayText: '‚≠î PING ‚≠î'}, type: 1},
{buttonId: `${prefix}lista`, buttonText: {displayText: '‚≠î MENU DE LISTA ‚≠î'}, type: 2}
]
destiny = `
*Ol√°, irei le explicar rapidamente o b√°sico dos meus comandos*

‚ùë *Como utilizar meus comandos?*

Antes de utilizar qualquer comando, sempre coloque o ${prefix}

‚ùë *Exemplo a ser usado:*

Ponto Sticker > ${prefix}menu

‚ùë *Nunca coloque depois do comando.*

O prefixo sempre deve estar antes do comando e n√£o depois, o mesmo √© v√°lido para todos os comandos, sem exclus√£o de nenhum.

‚ùë *Exemplo a seguir:*

‚úÖ ${prefix}sticker > Correto

‚ùé Sticker${prefix} > Incorreto

‚ùë *Prefixo usado.*

Irei responder unicamente ao meu prefix, meu prefix √© '${prefix}'.

‚ùë *Meu menu:*

Veja mais comando que tenho dispon√≠vel utilizando *${prefix}menu*

‚ùë *Meu criador:*

Receba o seu contato digitando este comando *( ${prefix}creditos )* no chat.

‚ùë *Duvidas?:*

Pe√ßa ajuda a alguem no chat caso tenha ficado com duvidas, at√© logo.`
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'),
mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
fileName: `Ol√° ${pushname}`,
jpegThumbnail: bla,
fileLength: 99999999999999,
caption: destiny,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: bla,
mediaUrl: bundao,
}}
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'menuss':
case 'menu': {
men = [
"https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
logomenu = [
"https://telegra.ph/file/17a32a0ae60e2a9bc7222.jpg",
"https://telegra.ph/file/ced5e676b3b74fc5e74d2.jpg",
"https://telegra.ph/file/45a1bb15f62ade29e4d0a.jpg",
"https://telegra.ph/file/d798dba75544d9737ff38.jpg",
"https://telegra.ph/file/c7c7d1fbae0a597074c11.jpg",
"https://telegra.ph/file/4a10f6f0ae553daac1302.jpg"]
bundak = men[Math.floor(Math.random() * men.length)]
menulogo = logomenu[Math.floor(Math.random() * logomenu.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}dono`, buttonText: {displayText: '‚≠î DONO ‚≠î'}, type: 1},
{buttonId: `${prefix}ping`, buttonText: {displayText: '‚≠î PING ‚≠î'}, type: 1},
{buttonId: `${prefix}lista`, buttonText: {displayText: '‚≠î MENU DE LISTA ‚≠î'}, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: menu,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)}
break

case 'menuadms':
case 'menuadm': {
menuadm = [
"https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
logoadm = [
"https://telegra.ph/file/17a32a0ae60e2a9bc7222.jpg",
"https://telegra.ph/file/ced5e676b3b74fc5e74d2.jpg",
"https://telegra.ph/file/45a1bb15f62ade29e4d0a.jpg",
"https://telegra.ph/file/d798dba75544d9737ff38.jpg",
"https://telegra.ph/file/c7c7d1fbae0a597074c11.jpg",
"https://telegra.ph/file/4a10f6f0ae553daac1302.jpg"]
bundak = menuadm[Math.floor(Math.random() * menuadm.length)]
menulogo = logoadm[Math.floor(Math.random() * logoadm .length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}menujogos`, buttonText: {displayText: `${EmojeG(emojos)} ùêâùêéùêÜùêéùêí ${EmojeG(emojos)}` }, type: 1},
{buttonId: `${prefix}menuanimes`, buttonText: {displayText: `${EmojeG(emojos)}ùêÄùêçùêàùêåùêÑùêí ${EmojeG(emojos)}` }, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: adms(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)}
break

case 'menuanime':
case 'menuanimes':
case 'animes': {
animex = [
"https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
logome = [
"https://telegra.ph/file/17a32a0ae60e2a9bc7222.jpg",
"https://telegra.ph/file/ced5e676b3b74fc5e74d2.jpg",
"https://telegra.ph/file/45a1bb15f62ade29e4d0a.jpg",
"https://telegra.ph/file/d798dba75544d9737ff38.jpg",
"https://telegra.ph/file/c7c7d1fbae0a597074c11.jpg",
"https://telegra.ph/file/4a10f6f0ae553daac1302.jpg"]
bundak = animex[Math.floor(Math.random() * animex.length)]
menulogo = logome[Math.floor(Math.random() * logome.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}alteradores`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêÄùêãùêìùêÑùêëùêÄùêÉùêéùêëùêÑùêí [${EmojeG(emojos)}]` }, type: 1},
{buttonId: `${prefix}nsfww2`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêçùêíùêÖùêñ [${EmojeG(emojos)}]` }, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: animes(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)}
break

case 'donomenu':
case 'menudono': 
if(!SoDono && !isGroup) return reply('So dono')
{
mendono = [
"https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
logome = [
"https://telegra.ph/file/17a32a0ae60e2a9bc7222.jpg",
"https://telegra.ph/file/ced5e676b3b74fc5e74d2.jpg",
"https://telegra.ph/file/45a1bb15f62ade29e4d0a.jpg",
"https://telegra.ph/file/d798dba75544d9737ff38.jpg",
"https://telegra.ph/file/c7c7d1fbae0a597074c11.jpg",
"https://telegra.ph/file/4a10f6f0ae553daac1302.jpg"]
bundak = mendono[Math.floor(Math.random() * mendono.length)]
menulogo = logome[Math.floor(Math.random() * logome.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}menujogos`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêâùêéùêÜùêéùêí [${EmojeG(emojos)}]` }, type: 1},
{buttonId: `${prefix}loja`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêãùêéùêâùêÄ [${EmojeG(emojos)}]` }, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: menudono(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'alteradores': {
altera = [
"https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
logome = [
"https://telegra.ph/file/17a32a0ae60e2a9bc7222.jpg",
"https://telegra.ph/file/ced5e676b3b74fc5e74d2.jpg",
"https://telegra.ph/file/45a1bb15f62ade29e4d0a.jpg",
"https://telegra.ph/file/d798dba75544d9737ff38.jpg",
"https://telegra.ph/file/c7c7d1fbae0a597074c11.jpg",
"https://telegra.ph/file/4a10f6f0ae553daac1302.jpg"]
bundak = altera[Math.floor(Math.random() * altera.length)]
menulogo = logome[Math.floor(Math.random() * logome.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}efeitos`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêÑùêÖùêÑùêàùêìùêéùêí [${EmojeG(emojos)}]` }, type: 1},
{buttonId: `${prefix}nuvem`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêçùêîùêïùêÑùêå [${EmojeG(emojos)}]` }, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: alteradores(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'jogos':
case 'menujogos': {
gamer = [
"https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
logome = [
"https://telegra.ph/file/17a32a0ae60e2a9bc7222.jpg",
"https://telegra.ph/file/ced5e676b3b74fc5e74d2.jpg",
"https://telegra.ph/file/45a1bb15f62ade29e4d0a.jpg",
"https://telegra.ph/file/d798dba75544d9737ff38.jpg",
"https://telegra.ph/file/c7c7d1fbae0a597074c11.jpg",
"https://telegra.ph/file/4a10f6f0ae553daac1302.jpg"]
bundak = gamer[Math.floor(Math.random() * gamer.length)]
menulogo = logome[Math.floor(Math.random() * logome.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}menuinfo`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêàùêçùêÖùêé [${EmojeG(emojos)}]` }, type: 1},
{buttonId: `${prefix}menubasico`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêÅùêÄùêíùêàùêÇùêé [${EmojeG(emojos)}]` }, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: jogos(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'menuloja':
case 'loja': {
neroespera('seja bem vindo a nossa loja.')
lojja = [
"https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
logome = [
"https://telegra.ph/file/17a32a0ae60e2a9bc7222.jpg",
"https://telegra.ph/file/ced5e676b3b74fc5e74d2.jpg",
"https://telegra.ph/file/45a1bb15f62ade29e4d0a.jpg",
"https://telegra.ph/file/d798dba75544d9737ff38.jpg",
"https://telegra.ph/file/c7c7d1fbae0a597074c11.jpg",
"https://telegra.ph/file/4a10f6f0ae553daac1302.jpg"]
bundak = lojja[Math.floor(Math.random() * lojja.length)]
menulogo = logome[Math.floor(Math.random() * logome.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}menuadms`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêÄùêÉùêåùêí [${EmojeG(emojos)}]` }, type: 1},
{buttonId: `${prefix}nuvem`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêçùêîùêïùêÑùêå [${EmojeG(emojos)}]` }, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: loja(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'menubasico':
case 'basico': {
barc = [
"https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
logome = [
"https://telegra.ph/file/17a32a0ae60e2a9bc7222.jpg",
"https://telegra.ph/file/ced5e676b3b74fc5e74d2.jpg",
"https://telegra.ph/file/45a1bb15f62ade29e4d0a.jpg",
"https://telegra.ph/file/d798dba75544d9737ff38.jpg",
"https://telegra.ph/file/c7c7d1fbae0a597074c11.jpg",
"https://telegra.ph/file/4a10f6f0ae553daac1302.jpg"]
bundak = barc[Math.floor(Math.random() * barc.length)]
menulogo = logome[Math.floor(Math.random() * logome.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}menuinfo`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêàùêçùêÖùêé [${EmojeG(emojos)}]` }, type: 1},
{buttonId: `${prefix}menuanimes`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêÄùêçùêàùêåùêÑùêí [${EmojeG(emojos)}]` }, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: menubasico(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'menuinfo':
case 'info': {
infro = [
"https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
logome = [
"https://telegra.ph/file/17a32a0ae60e2a9bc7222.jpg",
"https://telegra.ph/file/ced5e676b3b74fc5e74d2.jpg",
"https://telegra.ph/file/45a1bb15f62ade29e4d0a.jpg",
"https://telegra.ph/file/d798dba75544d9737ff38.jpg",
"https://telegra.ph/file/c7c7d1fbae0a597074c11.jpg",
"https://telegra.ph/file/4a10f6f0ae553daac1302.jpg"]
bundak = infro[Math.floor(Math.random() * infro.length)]
menulogo = logome[Math.floor(Math.random() * logome.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}menubasico`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêÅùêÄùêíùêàùêÇùêé [${EmojeG(emojos)}]` }, type: 1},
{buttonId: `${prefix}menupack`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêèùêÄùêÇùêä [${EmojeG(emojos)}]` }, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: menuinfo(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'menuply':
case 'menuplay': {
meplay = [
"https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
logome = [
"https://telegra.ph/file/17a32a0ae60e2a9bc7222.jpg",
"https://telegra.ph/file/ced5e676b3b74fc5e74d2.jpg",
"https://telegra.ph/file/45a1bb15f62ade29e4d0a.jpg",
"https://telegra.ph/file/d798dba75544d9737ff38.jpg",
"https://telegra.ph/file/c7c7d1fbae0a597074c11.jpg",
"https://telegra.ph/file/4a10f6f0ae553daac1302.jpg"]
bundak = meplay[Math.floor(Math.random() * meplay.length)]
menulogo = logome[Math.floor(Math.random() * logome.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}figurinhas`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêÖùêàùêÜùêîùêëùêàùêçùêáùêÄùêí [${EmojeG(emojos)}]` }, type: 1},
{buttonId: `${prefix}menuadms`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêÄùêÉùêåùêí [${EmojeG(emojos)}]` }, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: menuplay(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'menunuvem':
case 'nuvem': {
nuva = [
"https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
logonu = [
"https://telegra.ph/file/17a32a0ae60e2a9bc7222.jpg",
"https://telegra.ph/file/ced5e676b3b74fc5e74d2.jpg",
"https://telegra.ph/file/45a1bb15f62ade29e4d0a.jpg",
"https://telegra.ph/file/d798dba75544d9737ff38.jpg",
"https://telegra.ph/file/c7c7d1fbae0a597074c11.jpg",
"https://telegra.ph/file/4a10f6f0ae553daac1302.jpg"]
bundak = nuva[Math.floor(Math.random() * nuva.length)]
menulogo = logonu[Math.floor(Math.random() * logonu.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}menuplay`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêèùêãùêÄùêò [${EmojeG(emojos)}]` }, type: 1},
{buttonId: `${prefix}figurinhas`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêÖùêàùêÜùêîùêëùêàùêçùêáùêÄùêí [${EmojeG(emojos)}]` }, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: nuvem(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break
 
case 'menusexy':
case 'menu+18': {
fic = [
"https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
logome = [
"https://telegra.ph/file/17a32a0ae60e2a9bc7222.jpg",
"https://telegra.ph/file/ced5e676b3b74fc5e74d2.jpg",
"https://telegra.ph/file/45a1bb15f62ade29e4d0a.jpg",
"https://telegra.ph/file/d798dba75544d9737ff38.jpg",
"https://telegra.ph/file/c7c7d1fbae0a597074c11.jpg",
"https://telegra.ph/file/4a10f6f0ae553daac1302.jpg"]
bundak = fic[Math.floor(Math.random() * fic.length)]
menulogo = logome[Math.floor(Math.random() * logome.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}menuplay`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêèùêãùêÄùêò [${EmojeG(emojos)}]` }, type: 1},
{buttonId: `${prefix}efeitos`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêÑùêÖùêÑùêàùêìùêéùêí [${EmojeG(emojos)}]` }, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: pack18(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'figu':
case 'figurinhas':
case 'figurinha': {
fick = [
"https://youtu.be/yigBhNBMoeQ",
"https://youtu.be/D5KvU8Hw-n8",
"https://youtu.be/hAh3Ts5YdB0",
"https://youtu.be/ErOahjOYDx8"]
logome = [
"https://telegra.ph/file/17a32a0ae60e2a9bc7222.jpg",
"https://telegra.ph/file/ced5e676b3b74fc5e74d2.jpg",
"https://telegra.ph/file/45a1bb15f62ade29e4d0a.jpg",
"https://telegra.ph/file/d798dba75544d9737ff38.jpg",
"https://telegra.ph/file/c7c7d1fbae0a597074c11.jpg",
"https://telegra.ph/file/4a10f6f0ae553daac1302.jpg"]
bundak = fick[Math.floor(Math.random() * fick.length)]
menulogo = logome[Math.floor(Math.random() * logome.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}menuplay`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêèùêãùêÄùêò [${EmojeG(emojos)}]` }, type: 1},
{buttonId: `${prefix}efeitos`, buttonText: {displayText: `[${EmojeG(emojos)}] ùêÑùêÖùêÑùêàùêìùêéùêí [${EmojeG(emojos)}]` }, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: figurinhas(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break


case 'lista':
sections = [
{title: "informa√ß√µes",
rows: [
{title: `[${EmojeG(emojos)}] MENU [${EmojeG(emojos)}]`, rowId: `${prefix}menu`, description: "menu principal"},
	    {title: `[${EmojeG(emojos)}] ADMS [${EmojeG(emojos)}]`, rowId: `${prefix}menuadms`, description: "menu dos adms"},
	    {title: `[${EmojeG(emojos)}] JOGOS [${EmojeG(emojos)}]`, rowId: `${prefix}jogos`, description: "Menu de jogos"},
	    {title: `[${EmojeG(emojos)}] FIGURINHA [${EmojeG(emojos)}]`, rowId: `${prefix}figurinhas`, description: "menu de sticker entre outros"},
	    {title: `[${EmojeG(emojos)}] ALTERA [${EmojeG(emojos)}]`, rowId: `${prefix}alteradores`, description: "menu de altera img etc..."},
	    {title: `[${EmojeG(emojos)}] BASICO [${EmojeG(emojos)}]`, rowId: `${prefix}menubasico`, description: "menu com comandos aleatorios"},
	    {title: `[${EmojeG(emojos)}] ANIMES [${EmojeG(emojos)}]`, rowId: `${prefix}menuanime`, description: "menu geek dos mas diversos assuntos"},
	    {title: `[${EmojeG(emojos)}] PLAY [${EmojeG(emojos)}]`, rowId: `${prefix}menuply`, description: "menu de baixa m√∫sica, v√≠deo etc.."},
	    	    	    {title: `[${EmojeG(emojos)}] DONO [${EmojeG(emojos)}]`, rowId: `${prefix}donomenu`, description: "menu pro dono da komi-bot"},
	    	    {title: `[${EmojeG(emojos)}] INFO [${EmojeG(emojos)}]`, rowId: `${prefix}info`, description: "menu de informa√ß√µes"},
	    	    {title: `[${EmojeG(emojos)}] LISTA-MIDIA [${EmojeG(emojos)}]`, rowId: `${prefix}lista-midia`, description: "lista de v√≠deos"},
	    	    {title: `[${EmojeG(emojos)}] LISTA-APPS [${EmojeG(emojos)}]`, rowId: `${prefix}lista-apps`, description: "lista de apps"},
	 	]}, {
	 title: "LISTRA EXTRA",
	 rows: [
	    {title: "üÖÅüÑ∏üÑ≤üÑ∞üÖÅüÑ≥üÑæ", rowId: `${prefix}nero`, description: "informa√ßoes em audio sobre os criadores da komi"},
	    {title: "üÖÇüÑ∞üÑºüÖÑüÑ¥üÑª", rowId: `${prefix}samuel`, description: "canal dos criadores e informa√ßoes"},
	    {title: "üÖÉüÑ∏üÑ∞üÑ∂üÑæ", rowId: `${prefix}tiago`, description: "canal dos criadores e informa√ßoes"},]
}]
listMessage2 = {
text: `[üé≠] Aperte Em Exibir Lista\n[üßß] Para Voc√™ Acessar Todos\n[üèÆ] Os Menu do Bot`,
  footer: ``,
  title: "[üìç] ‚Ä¢ LISTA MENU ‚Ä¢ [üìç]\n",
  buttonText: "EXIBIR LISTA",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2)
break

case 'infobv':
sections = [
{title: "informa√ß√µes",
rows: [
     {title: `legenda welcome`, rowId: `${prefix}legewelcome`, description: "como add mensagem no bem vindo"},
	    {title: `tag membro`, rowId: `${prefix}tagwelcome`, description: "como coloca marcando o n√∫mero da pessoa no bem vindo"},
	    {title: `tag grupo`, rowId: `${prefix}tagrupowelcome`, description: "como coloca o nome do grupo no bem vindo."},
	    {title: `descri√ß√£o`, rowId: `${prefix}descri√ß√£owelcome`, description: "como coloca a descri√ß√£o do grupo no bem vindo."},
	    {title: `despedida`, rowId: `${prefix}legendabye`, description: "como coloca uma msg no bem vindo de despedida."},
	    {title: `prefix`, rowId: `${prefix}prefixobv`, description: "como mostra qual eo prefixo do bot no bem vindo"},]
}]
listMessage2 = {
text: `‚≠î informa√ß√µes welcome\n‚≠î aprenda a usar corretamente\n‚≠î boa sorte`,
  footer: ``,
  title: "",
  buttonText: "ùóòùó´ùóúùóïùóúùó• || ùóüùóúùó¶ùóßùóî",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2)
break






///// INFO BV 

case 'legewelcome': {
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
destiny = ` `
daftarimg = await getBuffer(ppimg)
let buttons = [
{
buttonId: `${prefix}lista`, 
buttonText: {
displayText: 'INFO/WELCOME'
}, type: 1},
]
let buttonMessage = {
image: { url: ppimg},
caption: destiny,
footer: legekwelcome(prefix),
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply: {
title: ``,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: await getBuffer("https://telegra.ph/file/9502bef19ca15f45e7cd5.jpg"),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`,
}}
}
await destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'tagwelcome': {
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
destiny = ` `
daftarimg = await getBuffer(ppimg)
let buttons = [
{
buttonId: `${prefix}lista`, 
buttonText: {
displayText: 'INFO/WELCOME'
}, type: 1},
]
let buttonMessage = {
image: { url: ppimg},
caption: destiny,
footer: tagkwelcome(prefix),
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply: {
title: ``,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: await getBuffer("https://telegra.ph/file/9a2c478d5e056189d7a50.jpg"),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`,
}}
}
await destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'tagrupowelcome': {
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
destiny = ` `
daftarimg = await getBuffer(ppimg)
let buttons = [
{
buttonId: `${prefix}lista`, 
buttonText: {
displayText: 'INFO/WELCOME'
}, type: 1},
]
let buttonMessage = {
image: { url: ppimg},
caption: destiny,
footer: tagkgroupw(prefix),
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply: {
title: ``,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: await getBuffer("https://telegra.ph/file/9502bef19ca15f45e7cd5.jpg"),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`,
}}
}
await destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'descri√ß√£owelcome': {
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
destiny = ` `
daftarimg = await getBuffer(ppimg)
let buttons = [
{
buttonId: `${prefix}lista`, 
buttonText: {
displayText: 'INFO/WELCOME'
}, type: 1},
]
let buttonMessage = {
image: { url: ppimg},
caption: destiny,
footer: descri√ß√£okwelcome(prefix),
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply: {
title: ``,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: await getBuffer("https://telegra.ph/file/9a2c478d5e056189d7a50.jpg"),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`,
}}
}
await destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'legendabye': {
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
destiny = ` `
daftarimg = await getBuffer(ppimg)
let buttons = [
{
buttonId: `${prefix}lista`, 
buttonText: {
displayText: 'INFO/WELCOME'
}, type: 1},
]
let buttonMessage = {
image: { url: ppimg},
caption: destiny,
footer: legendakbye(prefix),
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply: {
title: ``,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: await getBuffer("https://telegra.ph/file/9502bef19ca15f45e7cd5.jpg"),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`,
}}
}
await destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'prefixobv': {
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
destiny = ` `
daftarimg = await getBuffer(ppimg)
let buttons = [
{
buttonId: `${prefix}lista`, 
buttonText: {
displayText: 'INFO/WELCOME'
}, type: 1},
]
let buttonMessage = {
image: { url: ppimg},
caption: destiny,
footer: prefixokbv(prefix),
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply: {
title: ``,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: await getBuffer("https://telegra.ph/file/9a2c478d5e056189d7a50.jpg"),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`,
}}
}
await destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break


////

case 'infopalavr√£o': {
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
destiny = ` `
daftarimg = await getBuffer(ppimg)
let buttons = [
{
buttonId: `${prefix}lista`, 
buttonText: {
displayText: 'INFO/WELCOME'
}, type: 1},
]
let buttonMessage = {
image: { url: ppimg},
caption: destiny,
footer: `‚ùë o antipalavr√£o √© criado por voc√™ mesmo(a), basicamente voc√™ usu√°rio escolhe qual palavra vc quer coloca, pra caso seja dita,o bot vai fazer a remo√ß√£o dessa pessoa.

‚ùë ${prefix}addpalavra 

‚ùë ${prefix}delpalavra 

‚ùë ${prefix}antipalavr√£o 

‚ùë exemplo: 

‚ùë ${prefix}addpalavra gay

‚ùë isso ser√° inclu√≠do como um palavr√£o, "mas como fa√ßo isso funcionar agora?" 

‚ùë voc√™ deve ativar a fun√ß√£o por grupo, exemplo:

‚ùë ${prefix}antipalavr√£o 

‚ùë a√≠ escolhe se deseja desativar ou ativar aparti da lista que o bot ir√° disponibilizar pra vc escolher.

‚ùë e se voc√™ quer tirar a palavra de inclus√£o dos palavr√µes, √© s√≥ digitar :

‚ùë ${prefix}delpalavra gay

‚ùë "gay" √© apenas a palavra que utilize como exemplo, mas voc√™ que tem que criar, e escolher quais frases n√£o deseja que seja falada no seu grupo.
`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply: {
title: ``,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: await getBuffer("https://telegra.ph/file/9a2c478d5e056189d7a50.jpg"),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`,
}}
}
await destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'infovotacao': {
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
destiny = ` `
daftarimg = await getBuffer(ppimg)
let buttons = [
{
buttonId: `${prefix}lista`, 
buttonText: {
displayText: 'INFO/WELCOME'
}, type: 1},
]
let buttonMessage = {
image: { url: ppimg},
caption: destiny,
footer: `‚ùë Ol√° 

‚ùë Comando: /vota√ß√£o


‚ùë Deseja saber sobre como funciona os comandos de vota√ß√£o?, √© simples, voc√™ deve marcar uma pessoa junto a uma / e digitar uma frase como pergunta, e depois / e os minutos, 

‚ùë Exemplo: /vota√ß√£o @marca-pessoa/Vamos lanchar bolo hoje??/1  

‚ùë para votar ou negar, tem que digitar sem prefixo:

‚ùë voto ou devoto


‚ùë √© 1 Minuto de vota√ß√£o, ent√£o fa√ßa exatamente, dessa f√≥rma a√≠.

‚ùë e caso queira anular ele use o comando:

‚ùë /delvote

‚ùë ele anula sua vota√ß√£o.
 `,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply: {
title: ``,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: await getBuffer("https://telegra.ph/file/9a2c478d5e056189d7a50.jpg"),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`,
}}
}
await destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'infolistanegra': {
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
destiny = ` `
daftarimg = await getBuffer(ppimg)
let buttons = [
{
buttonId: `${prefix}lista`, 
buttonText: {
displayText: 'INFO/WELCOME'
}, type: 1},
]
let buttonMessage = {
image: { url: ppimg},
caption: destiny,
footer: `‚ùë Ol√° 

‚ùë existe esses 3 comandos 

‚ùë /autoban 

‚ùë /listanegra

‚ùë /tirardalista

‚ùë Como isso funciona? 

‚ùë esse comando, por exemplo, se algu√©m envia algo no seu grupo, vamos supor, um link, e sai r√°pido, voc√™ vai digitar o seguinte 

‚ùë /listanegra numero-junto-da-pessoa

‚ùë vai colocar o n√∫mero junto da pessoa que saiu, sem o + lembrando, e sem o -. 

‚ùë pra remover ele da lista √© simples:

‚ùë /tirardalista numero-junto-da-pessoa

‚ùë mesmos detalhes de add.. 

‚ùë Depois de ter adicionado, voc√™ tem que ativar a fun√ß√£o por grupo, que √© o seguinte. 

‚ùë /autoban 

‚ùë e selecionar uma das op√ß√µes, ativar ou desativar

‚ùë boa sorte amigo..

 `,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply: {
title: ``,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: await getBuffer("https://telegra.ph/file/9a2c478d5e056189d7a50.jpg"),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`,
}}
}
await destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

// ====== [ FIM DOS MENU ] 


case 'destrava':
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
await destiny.sendMessage(from, {text: destrava(prefix)}, {quoted: info})
break 


//////////// TINDER 

case "rgtinder":{
tinder = JSON.parse(fs.readFileSync("./armor/js/tinder.json"))
let [nome, idade, bio] = q.split("/")
if(!(nome||idade||bio))return reply("informe nome idade e a bio separando com uma '/' \nex: "+prefix+"rgtinder nome/idade/bio marcando uma imagem")
if(!isQuotedImage && !isImage)return reply("marque uma imagem com a legenda "+ body)
if(tinder.map(i => i.id).indexOf(sender) >= 0)return reply("vc j√° est√° registrado")
tinder.push({
id: sender,
nome,
idade,
bio,
image: info.message.imageMessage ? info.message : info.message.extendedTextMessage.contextInfo.quotedMessage
})
fs.writeFileSync("./armor/js/tinder.json", JSON.stringify(tinder))
reply("Registrado no tinder com sucesso")
}
break

case "tinder":{
tinder = JSON.parse(fs.readFileSync("./armor/js/tinder.json"))
if(tinder.map(i => i.id).indexOf(sender) < 0)return reply("registre-se no tinder, usando \n"+prefix+"rgtinder nome/idade/bio")
ttt = tinder[Math.floor(Math.random() * tinder.length)]
img =  await getFileBuffer(ttt.image.imageMessage, 'image')
butao = [{buttonId: `${prefix + command}`, buttonText: {displayText: `üî• ùêèùêëùêéÃÅùêóùêàùêåùêÄ ùêèùêÑùêíùêíùêéùêÄ üî•Ô∏è`}, type: 1}]
destiny.sendMessage(from, {
image: img,
caption: `                  üî•ùêìùêàùêçùêÉùêÑùêëüî•

‚ïî‚îâ‚úº‚îâ‚ïê‡º∫‚óà‚úº‚ùÑÔ∏è‚úº‚óà‡ºª‚ïê‚îâ‚úº‚îâ‚ïó   
‚ïë ü§ó ùêçùêéùêåùêÑ: ${ttt.nome}
‚ïë üìÖ ùêàùêÉùêÄùêÉùêÑ: ${ttt.idade}
‚ïë üîÆ ùêÅùêàùêé: ${ttt.bio}
‚ïë ùê∞ùêö ùê¶ùêû: wa.me/${ttt.id.split("@")[0]}
‚ïö‚îâ‚úº‚îâ‚ïê‡º∫‚óà‚úº‚ùÑÔ∏è‚úº‚óà‡ºª‚ïê‚îâ‚úº‚îâ‚ïù   
`,
mentions: [ttt.id],
footerText: `${NomeDoBot}`,
buttons: butao,
headerType: 4
},{
quoted: info
})}
break

case 'rmtinder':
case 'sairtinder':
if(command == "sairtinder") {
var qp = sender
reply("Pronto, voc√™ foi retirado do tinder com sucesso..")
} else {
if(!SoDono && !isnit && !info.key.fromMe) return reply('```SOMENTE MEU DONO CARAI KKKKKK```')
if(!q) return reply(`cader o n√∫mero?\nexemplo: ${prefix}rmtinder 559185841876`)
var qp = q.replace(new RegExp("[()+-/ +/]", "gi"), "") + "@s.whatsapp.net"
}
blir = tinder.map(i => i.id).indexOf(qp)
if(blir < 0)return reply("nao tem essa pessoa registrada n√£o")
if(SoDono) {reply("Usu√°rio foi tirado do tinder com sucesso")}
tinder.splice(blir, 1)
fs.writeFileSync("./armor/js/tinder.json", JSON.stringify(tinder))
break

////////

case 'gimage': case 'gig': {
if (!q) return reply("*digite a consulta depois de colocar o comando.*")
reply("Processando dados...") 
let gis = require('g-i-s')
gis(q, async (error, result) => {
n = result
images = n[Math.floor(Math.random() * n.length)].url
let buttons = [
{buttonId: `${prefix}gimage ${q}`, buttonText: {displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'}, type: 1}
]
let buttonMessage = {
image: { url: images },
caption:  '*T√≠tulo* : ' + q + '\n*Link* : '+images,
footer: ``,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title:"ùôÇùôûùô¢ùôñùôúùôö",
body: `${NomeDoBot}`,
  thumbnail: '',
mediaType:2,
mediaUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`, 
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, { quoted: selo })
})
}
break

case 'clima':
if (!isGroup) return reply("SOMENTE EM GRUPOS")
if (!q) return reply('Insira o nome da sua cidade.')
try {
clima = await axios(`https://pt.wttr.in/${q}?format=Cidade%20=%20%l+\n\nEstado%20=%20%C+%c+\n\nTemperatura%20=%20%t+\n\nUmidade%20=%20%h\n\nVento%20=%20%w\n\nLua agora%20=%20%m\n\nNascer%20do%20Sol%20=%20%S\n\nPor%20do%20Sol%20=%20%s`)
buffer = await getBuffer(`https://wttr.in/${q}.png`)
teks = `*„ÄåC L I M A„Äç*
‚ï¥
${clima.data}
‚ï¥
${NomeDoBot}`
destiny.sendMessage(from, {image: buffer, caption: teks}, info)
} catch {
reply('Estranho...\nCertifique-se de n√£o estar usando acentos ok?')
}
break


case 'criagp': {
if (!SoDono) return reply(`So quem pode fazer grupo por comando √© o ${NickDono}`)
blown = args.join(' ')
blown1 = blown.split("/")[0];
blown2 = blown.split("/")[1];
if(!blown.includes("/")) return reply(`Use assim exemplo: ${prefix + command} Os legais/Oi`)
group = await destiny.groupCreate(`${blown1}`, [`${sender.split("@")[0]}@s.whatsapp.net`])
    console.log("Grupo Criado Com Id: " + group.id)
destiny.sendMessage(group.id, { text:`${blown2}` })
linkty = await destiny.groupInviteCode(group.id)
await sleep(3000)
reply(`Grupo: ${blown1}, criado com sucesso\nAqui esta o link ${NickDono}\n‚Ä¢ https://Chat.whatsapp.com/${linkty}\nEspero que goste üçí,`)
}
break

case 'clone': 
if (!isGroup) return reply("apenas para grupos") 
if (!SoDono) return reply("apenas pro dono") 
if (!q) return reply("cade o id do grupo?\nUse: o Comando /getgroupid Para Pegar o Id Desse Grupo.") 
getInfoOfGroupID = isGroup ? await destiny.groupMetadata(q) : ''
getNameOfGroupID = isGroup ? getInfoOfGroupID.subject : ''
getMembersOfGroupID = isGroup ? getInfoOfGroupID.participants : ''
getDescOfGroupID = isGroup ? getInfoOfGroupID.desc : ''
const createGroup = await destiny.groupCreate(getNameOfGroupID, [sender], "add")
await destiny.groupUpdateDescription(createGroup.id, getDescOfGroupID) 
for (let max of getMembersOfGroupID){
await destiny.groupParticipantsUpdate(createGroup.id, [max.id], "add")
}
destiny.sendMessage(from, { text: 'Grupo Criado Com Sucesso!' }) 
destiny.groupParticipantsUpdate(createGroup.id, [numerodono[0]], "promote") 
destiny.sendMessage(createGroup.id, { text: 'Ola Vadias!' })  
break

case 'getgroupid': 
reply(from)
break

case 'perfil':
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
var conselho = palavras[Math.floor(Math.random() * palavras.length)]
const nivelgado = ['1','2','3','4','5','6','7','8','9']
const nivelgado2 = ['1','2','3','4','5','6','7','8','9'] 
const nivelgador = nivelgado[Math.floor(Math.random() * (nivelgado.length))]
const nivelgado2r = nivelgado2[Math.floor(Math.random() * (nivelgado2.length))] 
const puta = ['1','2','3','4','5','6','7','8','9']
const puta2 = ['1','2','3','4','5','6','7','8','9'] 
const putar = puta[Math.floor(Math.random() * (puta.length))]
const putar2 = puta2[Math.floor(Math.random() * (puta2.length))] 
const gostosura = ['1','2','3','4','5','6','7','8','9']
const gostosura2 = ['1','2','3','4','5','6','7','8','9'] 
const gostosurar = gostosura[Math.floor(Math.random() * (gostosura.length))]
const gostosurar2 = gostosura2[Math.floor(Math.random() * (gostosura2.length))] 
gadop = `${Math.floor(Math.random() * 100)}`
const programa = Math.ceil(Math.random() * 10000)
const asLvl = getLevelingLevel(sender)
const ssXp = getLevelingXp(sender)
const dptr = `     „Äå üî• ~_*PERFIL*_~ üåà „Äç
üóí *Nome* : *${pushname}*
ü™Ä *N√∫mero* : @${sender.split("@")[0]}
üêÇ *N√≠vel gado* : *${nivelgador}${nivelgado2r}%*
üì± *Seu C√©lular* : ${info.key.id.length > 21 ? 'Android ü§£' : info.key.id.substring(0, 2) == '3A' ? 'IOSüòÇüòÇüòÖ' : 'Zap zap web üòÇüòÇ‚òùüèºüòÖ'}
üòà *N√≠vel puta* : *${putar}${putar2}%*
üòã *N√≠vel de gostosura* : *${gostosurar}${gostosurar2}%*
üçº *Valor do programa* : *R$${programa}*
‚ûª *~_CONSELHO_~* :
${conselho}`
daftarimg = await getBuffer(ppimg)
buttons = buttons = [{buttonId: `${prefix}conselhobiblico`, buttonText: {displayText: `üí†CONSELHOSüí†`}, type: 1}]
destiny.sendMessage(from, {image: daftarimg, caption: dptr, footer: " ", buttons}, {quoted: selo})
break

case 'frases':
case 'frase':
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
hehe = await fetchJson(`https://www.luc4rio-rest-api.tk/api/aleatorios/frases`)
if (hehe.error) return reply(hehe.error)
ccg =
`
  ‚Ä£ Author: ${hehe.Author}
  ‚Ä£ Criador: ${hehe.Criador}
  ‚Ä£ Frase: 
  ${hehe.Frase}\n`
daftarimg = await getBuffer(ppimg)
await destiny.sendMessage(from, {image: daftarimg, caption: ccg}, {quoted:info})
break

case 'frases':
case 'frase':
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}

hehe = await fetchJson(`https://www.luc4rio-rest-api.tk/api/aleatorios/frases`)
if (hehe.error) return reply(hehe.error)
ccg =
`
  ‚Ä£ Author: ${hehe.Author}
 
  ‚Ä£ Criador: ${hehe.Criador}
 
  ‚Ä£ Frase: 
 
  ${hehe.Frase}\n`
daftarimg = await getBuffer(ppimg)
await destiny.sendMessage(from, {image: daftarimg, caption: ccg}, {quoted:info})
break

case 'conselhobiblico':
case 'conselhosbiblico':  
case 'conselhosb':   
case 'conselhob':  
  const { conselhob } = require('./armor/js/conselhob.js');
var conselhos = conselhob[Math.floor(Math.random() * conselhob.length)] 
bli = `https://telegra.ph/file/3102df137f2f8c0851915.jpg`
jr = `${tempo} ${pushname} 
Conselhos B√≠blico Para Voc√™: 
> Grupo: *${groupName}*
> Bot: *${NomeDoBot}*
„Äå *${conselhob}* „Äç`
sendBimg(from, bli, jr, NomeDoBot, [{buttonId:`kk`, buttonText: {displayText: '„Äå Am√©m „Äç'}, type: 1}], selo)
break

case 'tabela':
await destiny.sendMessage(from, {text: tabela(prefix, NomeDoBot)}, {quoted: selo})
break 

case 'destrava2':
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
await destiny.sendMessage(from, {text: destrava2 (prefix)}, {quoted: info})
break 

case 'infovota√ß√£o':
case 'infovotacao':  
await destiny.sendMessage(from, {text: infovotacao(prefix, pushname)}, {quoted: selo})
break

case 'infobemvindo':
case 'infobv':  
await destiny.sendMessage(from, {text: infobemvindo(prefix)}, {quoted: selo})
break

case 'idiomas':
case 'idioma':
txt = `  
IDIOMAS DO GTTS OU DO TRADUTOR

EXEMPLO :

>> ${prefix}gtts pt (texto)

>> ${prefix}traduzir pt/(texto)

o PT que coloquei, √© a linguagem, ent√£o pode por no lugar as 2 letras que define a linguagem, iguais os exemplos e os idiomas abaixo.

'af': 'Afrikaans',
'sq': 'Albanian',
'ar': 'Arabic',
'hy': 'Armenian',
'ca': 'Catalan',
'hr': 'Croatian',
'cs': 'Czech',
'da': 'Danish',
'nl': 'Dutch',
'en': 'English',
'eo': 'Esperanto',
'fi': 'Finnish',
'fr': 'French',
'de': 'German',
'el': 'Greek',
'ht': 'Haitian Creole',
'hi': 'Hindi',
'hu': 'Hungarian',
'is': 'Icelandic',
'id': 'Indonesian',
'it': 'Italian',
'ja': 'Japanese',
'ko': 'Korean',
'la': 'Latin',
'lv': 'Latvian',
'mk': 'Macedonian',
'no': 'Norwegian',
'pl': 'Polish',
'pt': 'Portugues',
'ro': 'Romanian',
'ru': 'Russian',
'sr': 'Serbian',
'sk': 'Slovak',
'es': 'Spanish',
'sw': 'Swahili',
'sv': 'Swedish',
'ta': 'Tamil',
'th': 'Thai',
'tr': 'Turkish',
'vi': 'Vietnamese',
'cy': 'Welsh'
 
üî•${setting.NomeDoBot}üî•`

destiny.sendMessage(from, {text: txt}, {quoted: selo})
break

case 'infocontador':
await destiny.sendMessage(from, {text: infocontador(prefix, pushname)}, {quoted: selo})
break

case 'databoton':
await destiny.sendMessage(from, {text: databoton(prefix)}, {quoted: selo})
break

case 'infolistanegra':
await destiny.sendMessage(from, {text: infolistanegra(prefix, pushname)}, {quoted: selo})
break

case 'infopalavr√£o':
case 'infopalavrao':
await destiny.sendMessage(from, {text: infopalavrao(prefix, pushname)}, {quoted: selo})
break

case 'infobancarac':
await destiny.sendMessage(from, {text: infobancarac(prefix, pushname)}, {quoted: selo})
break

case 'git':
case 'git-bot':  
case 'gitdobot':
case 'gitbot':   
await destiny.sendMessage(from, {text: gitdobot(prefix)}, {quoted: selo})
break

//========(FUN√á√ïES-PREMIUM-AQUI)=======\\

case 'mediafire':
try {
if (!q) return reply(`Coloque um link`)
if (!isUrl(q) || !q.includes('mediafire.com')) return reply(`Link inv√°lido!`)
mfdw = await mediafire(`${args[0]}`)
buttons02 = [
{buttonId: `${mfdw[0].link}`, buttonText: {displayText: `Baixar`}, type: 1}
]
if (mfdw[0].peso.split('MB')[0] >= 250)
{
buttonMessage02 = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
fileLength: 9999999,
caption: `*Downloader*

Nome: ${mfdw[0].nome}
Peso: ${mfdw[0].peso}
Tipo: ${mfdw[0].tipo}

Espere um momento...`,
footer: ``,
buttons: buttons02,
headerType: 4,
contextInfo:{externalAdReply: {
title: `${NomeDoBot}`,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: await getBuffer(`${logo}`),
mediaUrl: 'https://youtube.com/c/SaikyoDev',
sourceUrl: 'https://youtube.com/c/SaikyoDev',
}}
}
destiny.sendMessage(from, buttonMessage02)
} else {
buttonMessage02 = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
fileLength: 9999999,
caption: `*Downloader*

Nome: ${mfdw[0].nome}
Peso: ${mfdw[0].peso}
Tipo: ${mfdw[0].tipo}

Espere um momento...`,
footer: ``,
buttons: buttons02,
headerType: 4,
contextInfo:{externalAdReply: {
title: `${NomeDoBot}`,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: await getBuffer(`${logo}`),
mediaUrl: 'https://youtube.com/c/SaikyoDev',
sourceUrl: 'https://youtube.com/c/SaikyoDev',
}}
}
destiny.sendMessage(from, buttonMessage02)
await sleep(1000)
destiny.sendMessage(from, {document: {url: mfdw[0].link}, fileName: mfdw[0].nome, mimetype: mfdw[0].tipo, mentions: [sender]}, {quoted: selo})
}
} catch (err) {
console.log(err)
reply("ERROR.")
}
break

case 'ler': 
case 'ocr':   
case 'lerfoto':  
if(!isPremium) return reply(enviar.msg.premium)
if ((isMedia && !info.message.videoMessage || isQuotedImage) && args.length == 0) {
encmedia = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'image')
fs.writeFileSync(rane, buffimg)
media = rane 
reply(enviar.espere)
await recognize(media, {lang: 'eng+ind', oem: 1, psm: 3})
.then(teks => {
reply(teks.trim())
fs.unlinkSync(media)
})
.catch(err => {
reply(err.message)
fs.unlinkSync(media)
})
} else {
reply('Somente fotos!')
}
break

case 'walink':
if (!isGroup) return reply(enviar.msg.grupo)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque A Pessoa Que Voc√™ Queira Fazer O Link')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
for (let _ of mentioned) {
destiny.sendMessage(from, {text: `‚îÅ‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ ‚Ä¢ ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚îÅ\n      ‚ùè     Link Do @     ‚ùè\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nLink: Wa.me//+${_.split('@')[0]}\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nCopyright ¬© ${NomeDoBot}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ ‚Ä¢ ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚îÅ`, templateButtons: [{index: 1, urlButton: {displayText: `Copiar`, url: `https://www.whatsapp.com/otp/copy/Wa.me//+${_.split('@')[0]}`}}]}, {quoted: selo})}
break

case 'wame':
var captionnye = q.split('|')[0] || `wame gerado com sucesso,aperte no bot√£o pra copiar.\n`
var displaynye = q.split('|')[1] || `COPIAR`
var copynye = q.split('|')[2] || (`wa.me/${sender.split('@')[0]} - *${pushname}*`)
 menuButa = [{index: 1, urlButton: {displayText: `${displaynye}`, url: 'https://www.whatsapp.com/otp/copy/'+copynye}}]
await destiny.sendMessage(from, { text: `${captionnye}`, templateButtons: menuButa, footer: NomeDoBot })
break

case 'nick': case 'gerarnick': 
case 'fazernick': {
let { styletext } = require('./lib/scraper')
if (!q) throw 'Digite seu nick!'
let anu = await styletext(q)
let teks = `Nicks Gerado A Parti Do Nome\n[--- *${q}* ---]\n\n`
for (let i of anu) {
teks += `*Fontes*: ${i.result}\n\n`
}
reply(teks)
}
break

case 'novolink':
¬† if (!SoDono && !info.key.fromMe) return reply(`Voc√™ n√£o e o wa.me/${setting.numerodono} so ele pode usar esse comando kkkk`)
const code =¬† destiny.groupRevokeInvite(from, "abcd-xyz@g.us")
¬†¬†¬† console.log("New group code: " + code)
¬†¬†¬† break

case 'gitclone':
reply("Processando dados...") 
let regex1 = /(?:https|git)(?::\/\/|@)github\.com[\/:]([^\/:]+)\/(.+)/i
if (!args[0]) reply(`Use ${prefix}gitclone repo link\nExemplo: https://github.com/NuevaGeneracionALB/aleatory-md`)
if (!regex1.test(args[0])) return reply(' ')
let [, user, repo] = args[0].match(regex1) || []
repo = repo.replace(/.git$/, '')
let url = `https://api.github.com/repos/${user}/${repo}/zipball`
let filename = (await fetch(url, {method: 'HEAD'})).headers.get('content-disposition').match(/attachment; filename=(.*)/)[1]
destiny.sendMessage(from, { document: { url: url }, fileName: filename+'.zip', mimetype: 'application/zip' }, { quoted: selo }).catch((err) => reply('ERROR!!'))
break

case 'lermais':
if(!q) return reply(`Cade o nome depois do Comando\nExemplo: ${prefix + command} Curioso n√©`)
destiny.sendMessage(from, {text: `‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã ${q}`, footer: `Copie e Cole no Painel de Mensagem`, templateButtons: [{index: 1, urlButton: {displayText: `Copiar`, url: `https://www.whatsapp.com/otp/copy/${q}`}}]}, {quoted: info})
break


case 'getquoted':
case 'getinfo':  
case 'get':  
reply(JSON.stringify(info.message.extendedTextMessage.contextInfo, null, 3))
break

case 'id':
case 'figuid':
if (!SoDono && !info.key.fromMe) return 
if (isQuotedSticker) {
var figu = info.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage.fileSha256.toString("base64");
reply(figu)
}
break

case 'gerarcpf':
if(!isPremium) return reply(enviar.msg.premium)
cp1 = `${Math.floor(Math.random() * 300) + 600}`
cp2 = `${Math.floor(Math.random() * 300) + 600}`
cp3 = `${Math.floor(Math.random() * 300) + 600}`
cp4 = `${Math.floor(Math.random() * 30) + 60}`
cpf = `${cp1}.${cp2}.${cp3}-${cp4}`
await destiny.sendMessage(from, {text: `CPF gerado com sucesso : ${cpf}`}, {quoted: info})
break

case 'cep':
if(!isPremium) return reply(enviar.msg.premium)  
if (args.length == 0) return reply(`Exemplo: ${prefix + command} 54330235`)
query = args.join(" ")
get_result = await fetchJson(`https://api-team-of-hero.herokuapp.com/api/tools/cep?apikey=apiteam&cep=${query}`)
x = get_result.resultado
k = `CEP : ${x.cep}
LOGRADOURO: ${x.logradouro}
BAIRRO : ${x.bairro}
LOCALIDADE : ${x.localidade}
UF : ${x.uf}
IBGE : ${x.ibge}
GIA : ${x.gia}
DDD : ${x.ddd}
SIAFI : ${x.siafi}`
reply(k)
break 

case 'placa':
if(!isPremium) return reply(enviar.msg.premium)  
if (args.length == 0) return reply(`Exemplo: ${prefix + command} 54330235`)
query = args.join(" ")
get_result = await fetchJson(`http://api.ifindconsultas.tk/?token=2d6de38e-6c92-485e-bacb-db64139f8a02&placa=${query}`)
x = get_result
k = `CPF : ${x.cpf}
NOME: ${x.nome}
PLACA : ${x.placa}
CHASSI : ${x.chassi}
RENAVAM : ${x.renavam}
CIDADE : ${x.cidade}
UF : ${x.uf}
CATEGORIA : ${x.categoria}
COMBUST√çVEL : ${x.combustivel}`
reply(k)
break 

case 'ddd':
if(!isPremium) return reply(enviar.msg.premium)
if (args.length < 1) return reply(`Use ${prefix + command} 81`)
ddd = body.slice(5)
ddds = await axios.get(`https://brasilapi.com.br/api/ddd/v1/${ddd}`)
dddlist = `Lista de Cidades de ${ddds.data.state} com este DDD ${q}>\n\n`
for (let i = 0; i < ddds.data.cities.length; i++) { dddlist += `${i + 1} ‚™ß *${ddds.data.cities[i]}*\n` }
destiny.sendMessage(from, {text: dddlist}, {quoted: info})	
break

case 'encurtalink':
if(!isPremium) return reply(enviar.msg.premium)
if(args.length < 1) return reply(`Exemplo:\n${prefix}encurtalink https://youtube.com/c/aleatoryconteudos`)
try {
link = args[0]
anu = await axios.get(`https://tinyurl.com/api-create.php?url=${link}`)
reply(`${anu.data}`)
} catch (e) {
emror = String(e)
reply(`${e}`)
}
await limitAdd(sender)
break

//============================

case 'dado':
rafa = Math.floor(Math.random() * 6) + 1
bla = fs.readFileSync(`./logos/dado/${rafa}.webp`)
destiny.sendMessage(from, {sticker: bla}, {quoted: info})
buttons2 = [
¬† {buttonId: `${prefix}Dado`, buttonText: {displayText: 'üé≤„ÄåJogar Novamente„Äçüé≤'}, type: 1},
¬† {buttonId: `${prefix}sundado`, buttonText: {displayText: 'üé≤„ÄåN√£o Jogar„Äçüé≤'}, type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "Estou jogando o dado para voc√™, se quiser que eu jogue novamente, selecione uma op√ß√£o abaixo:",
¬†¬†¬† footer: '„Äåüá∏ üá∫ üá≥//üáß üá¥ üáπ //üá≤ üá© „Äç',
¬†¬†¬† buttons: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg = destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break

case 'sundado': 
  reply('Ent√£o vai ser fude seu fi se rapaziada corno(a) sem m√£e gorda do caralho pobre e rid√≠culo no meu pau no seu ouvido.')
  break


case 'eunu':
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
sendBimg(from, ppimg, '*Hmm, Entendo*\nAinda Quer Brincar?', "Aperte No Bot√£o Abaixo", [{buttonId: `${prefix}eununca`, buttonText: {displayText: `Sim`}, type: 1}])
break

case 'euj':
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
sendBimg(from, ppimg, '*Eita Que Pol√™mico*\nAinda Quer Brincar?', "Aperte No Bot√£o Abaixo", [{buttonId: `${prefix}eununca`, buttonText: {displayText: `Sim`}, type: 1}])
break

case 'eununca':
if(!txt) return reply("Cade a frase")
sections = [{
title: 'Eu Nunca üåπ',
rows: [
{title: "Eu J√°", rowId: `${prefix}euj`}, 
{title: "Eu Nunca", rowId: `${prefix}eunu`},
]}]
listMessage2 = {
  text: `${txt}`,
  footer: ``,
  title: `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ ‚Ä¢ ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n‚Ä¢ `,
  buttonText: `Minha Resposta`,
  sections}
destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'moeda':
cara = Math.floor(Math.random() * 2) + 1
bla = fs.readFileSync(`./logos/cara/${cara}.webp`)
destiny.sendMessage(from, {sticker: bla}, {quoted: info})
buttons = [
¬† {buttonId: `${prefix}moeda`, buttonText: {displayText: 'ü™ô„ÄåJogar Novamente„Äçü™ô'}, type: 1},
¬† {buttonId: `${prefix}sundado`, buttonText: {displayText: 'üé≤„ÄåN√£o Jogar„Äçüé≤'}, type: 1}]
buttonMessage = {
¬†¬†¬† text: "Estou jogando a moeda para voc√™, se quiser que eu jogue novamente, selecione uma op√ß√£o abaixo:",
¬†¬†¬† footer: '„Äåüá∏ üá∫ üá≥//üáß üá¥ üáπ //üá≤ üá© „Äç',
¬†¬†¬† buttons: buttons,
¬†¬†¬† headerType: 1
}
sendMsg =¬† destiny.sendMessage(from, buttonMessage, {quoted: selo}) 
break


//===========(ADMS-FUN√á√ïES-AKI)=========\\

case 'calculadora':
case 'calcular':  
case 'calc':
teks = args.join(" ").replace("x", "*").replace("√∑", "/")
.replace(new RegExp("abcdefghijklmnopqrstwyuvxz", "gi"), "1")
if(!body.includes('1') && !body.includes('2') && !body.includes('3') && !body.includes('4') && !body.includes('5') && !body.includes('6') && !body.includes('7') && !body.includes('8') && !body.includes('9') && !body.includes('10')) return reply('KD O N√öMERO?')
if(body.includes("document") || body.includes("audio") || body.includes("pdf") || body.includes("apk") || body.includes("image") || body.includes("video") || body.includes("text") || body.includes("conn") || body.includes("reply") || body.includes("console") || body.includes("'") || body.includes('"')) return reply("KD O C√ÅLCULO?")
console.log('[', color.green('EVAL', 'silver'),']', color.green(moment(info.messageTimestamp * 1000).format('DD/MM HH:mm:ss'), 'yellow'), color.red(budy))
return reply(JSON.stringify(eval(`${teks}`),null,'\t'))
break 

case 'status':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins && !SoDono && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.adm)
imgstts = `https://telegra.ph/file/b8115b073b3520abaab0a.jpg`
statuszada =
`‚ï≠‚ïº‚ïº‚ïæ‚ù≤ S T A T U S ‚ù≥‚ïº‚ïº‚ïæ‚ïÆ
‚îÇ
‚îÇ‚û± Antiaudio: ${isAntiAudio? '‚úì' : '‚úï'}
‚îÇ‚û± Antidocumento: ${Antidoc ? '‚úì' : '‚úï'}
‚îÇ‚û± Antifake: ${isAntifake ? '‚úì' : '‚úï'}
‚îÇ‚û± Antiimg: ${isAntiImg? '‚úì' : '‚úï'}
‚îÇ‚û± AntiSticker: ${isAntiSticker ? '‚úì' : '‚úï'}
‚îÇ‚û± Antiliga√ß√£o: ${isAnticall ? '‚úì' : '‚úï'}
‚îÇ‚û± AntiPv-Block: ${isAntiPv ? '‚úì' : '‚úï'}
‚îÇ‚û± AntilinkHard: ${isAntiLinkHard ? '‚úì' : '‚úï'}
‚îÇ‚û± LimiteCaracteres: ${isAntiFlood ? '‚úì' : '‚úï'}
‚îÇ‚û± AntiCatalogo: ${isAnticatalogo ? '‚úì' : '‚úï'}
‚îÇ‚û± AntiPalavr√£o: ${isPalavrao ? '‚úì' : '‚úï'}
‚îÇ‚û± Antivideo: ${isAntiVid ? '‚úì' : '‚úï'}
‚îÇ‚û± AntiLocaliza√ß√£o: ${Antiloc ? '‚úì' : '‚úï'}
‚îÇ‚û± Bemvindo: ${isWelkom ? '‚úì' : '‚úï'}
‚îÇ‚û± Simih: ${isSimi ? '‚úì' : '‚úï'}
‚îÇ
‚ï∞‚ïº‚ïæ‚ù≤ ${NomeDoBot} ‚ù≥‚ïº‚ïæ‚ïØ`
sendBimg(from, imgstts, statuszada, '', [{buttonId: `nd`, buttonText: {displayText: `Obrigado ${NomeDoBot} üö©`}, type: 1}])
break

case 'nomegp':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
blat = args.join(" ")
destiny.groupUpdateSubject(from, `${blat}`)
destiny.sendMessage(from, {text: 'Sucesso, alterou o nome do grupo'}, {quoted: info})
break

case 'descgp':
case 'descri√ß√£ogp':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.adm)
blabla = args.join(" ")
destiny.groupUpdateDescription(from, `${blabla}`)
destiny.sendMessage(from, {text: 'Sucesso, alterou a descri√ß√£o do grupo'}, {quoted: info})
break

case 'setfotogp':
case 'fotogp':  
addFilter(from)
if (!isGroup) return reply('S√≥ pode ser utilizado em Grupo')
if (!isGroupAdmins) return reply('Voc√™ precisa ser ADM')
if (!isBotGroupAdmins) return reply('O bot Precisa ser ADM')
if (!isQuotedImage) return reply(`Use: ${prefix + command} <Marque uma foto>`)
ftgp = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(ftgp.mimetype))
buffimg = await getFileBuffer(ftgp, 'image')
fs.writeFileSync(rane, buffimg)
medipp = rane 
await destiny.updateProfilePicture(from, {url: medipp})
reply(`Foto do grupo alterada com sucesso`) 
break

case 'atividade':
case 'atividades':  
try{
if(!isGroupAdmins && !issupre && !ischyt) return reply(enviar.msg.adm)
if(isGroup && groupIdscount.indexOf(from) >= 0) {
var ind = groupIdscount.indexOf(from)
teks = `*Atividade dos membros do grupo:*\n\n`
mem = []
ativid = await getBuffer('https://telegra.ph/file/1ac59b7dd958beb9c29ad.mp4')
for(let obj of groupMembers) {
if(numbersIds.indexOf(obj.id) >=0) {
var indnum = numbersIds.indexOf(obj.id)
teks += `*‚Ä¢ Membro:* @${countMessage[ind].numbers[indnum].id.split('@')[0]}\n*‚Ä¢ Comandos:* ${countMessage[ind].numbers[indnum].cmd_messages}\n*‚Ä¢ Mensagens:* ${countMessage[ind].numbers[indnum].messages}\n\n----------------------------------\n\n`
} else {
teks += `*‚Ä¢ Membro:* @${obj.id.split('@')[0]}\n*‚Ä¢ Comandos:* 0\n*‚Ä¢ Mensagens:* 0\n\n----------------------------------\n\n`
}
mem.push(obj.id)
}
destiny.sendMessage(from, {video: ativid, caption: teks, gifPlayback: true, contextInfo:{mentionedJid: mem}}, {quoted: info})
} else return reply('*Nada foi encontrado*')
} catch (e){
console.log(e)
}
break

case 'linkgp': case 'linkgroup': {
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isGroup) return reply(enviar.msg.grupo)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
linkgc = await destiny.groupInviteCode(from)
txtl = `‚îè‚îÅ‚îÄ‚îÄñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠ŸúüîÆ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚îÄ‚îÄ‚îÅ
‚îù„Ä¢Usu√°rio: ${pushname}
‚îù„Ä¢Grupo: ${groupName}
‚îù„Ä¢Link: https://chat.whatsapp.com/${linkgc}
‚îó‚îÅ‚îÄ‚îÄñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠ŸúüîÆ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚îÄ‚îÄ‚îÅ`
let goku = {
image: {url: 'https://telegra.ph/file/8b102c459aada73e99347.jpg'},
caption: txtl,
footer: ``,
headerType: 4,
contextInfo:{externalAdReply:{
title: `Link Do Grupo`,
body: `${NomeDoBot} ¬©`,
showAdAttribution: true,
renderLargerThumbnail: true,
thumbnail: fs.readFileSync('./logos/logo2.jpg'),
mediaType:2,
sourceUrl:`https://www.instagram.com/maysurf__/`
}}
}
destiny.sendMessage(from, goku,
{quoted: selo})
}
break

case 'linkpv':
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
teks = `${mentioned[0].split('@')[0]}@s.whatsapp.net`
linkgc = await destiny.groupInviteCode(from)  
destiny.sendMessage(teks, {text: `link do grupo : https://chat.whatsapp.com/${linkgc}`})
break

case 'grupo':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono && !isGroupAdmins) return reply(enviar.msg.adm)
buttons = [
¬† {buttonId: `${prefix}abrir2`, buttonText: {displayText: 'ABRIR‚úÖ'}, type: 1},
¬† {buttonId: `${prefix}fechar2`, buttonText: {displayText: 'FECHARüí§'}, type: 1}]
buttonMessage = {
¬†¬†¬† text: "Configura√ß√µes Do Grupo‚öôÔ∏è",
¬†¬†¬† footer: 'komi_ofc',
¬†¬†¬† buttons: buttons,
¬†¬†¬† headerType: 1
}
sendMsg =¬† destiny.sendMessage(from, buttonMessage, {quoted: selo}) 
break




case 'abrir2':
if(!isGroup) return reply(`S√ì EM GRUPO`)
if(!SoDono && !isGroupAdmins) return reply(`voc√™ nem √© adm`)
if(!isBotGroupAdmins) return reply(`BOT PREPRECISA SER ADMININASTROR`)
reply(`*GRUPO ABERTO COM SUCESSO*`)
await destiny.groupSettingUpdate(from, 'not_announcement')
break 

case 'fechar2':
¬† if (!isGroup) return reply(`S√ì EM GRUPO`)
if (!SoDono && !isGroupAdmins) return reply(`Voc√™ nao √© adm kkkk`)
if (!isBotGroupAdmins) return reply(`BOT PREPRECISA SER ADMININASTROR`)
reply(`*GRUPO FECHADO COM SUCESSO*`)
await destiny.groupSettingUpdate(from, 'announcement')
break

case 'closegp':
if (!SoDono && !isGroupAdmins) return reply (`${say.only.admin}`)
var nomor = info.participant;
let qtt = args.join(' ').split(' ');
let qaa = parseInt(qtt[0]);
let qbb = qtt[1];
if (isNaN(qaa)) return reply (`Precisa ser um n√∫mero!!!\n\nexemplo:\n${prefix}closegp 30 s`)
if (qbb === 's') {
let calc = parseInt(qaa + '000')
await reply (`O grupo ser√° fechado em ${qaa} segundos`)
await sleep(calc);
await destiny.groupSettingUpdate(from, 'announcement')
return reply (`O grupo foi fechado pelo administrador *${pushname}* ap√≥s ${qaa} segundos!`)
}
if (qbb === 'm') {
calc = parseInt(qaa * 60 + '000')
await reply (`O grupo ser√° fechado em ${qaa} minutos`)
await sleep(calc);
await destiny.groupSettingUpdate(from, 'announcement')
return reply (`O grupo foi fechado pelo administrador *${pushname}* ap√≥s ${qaa} minutos!`)
}
if (qbb === 'h') {
calc = parseInt(qaa * 3600 + '000')
await reply (`O grupo ser√° fechado em ${qaa} horas`)
await sleep(calc);
await comm.groupSettingUpdate(from, 'announcement')
return reply (`O grupo foi fechado pelo administrador *${pushname}* ap√≥s ${qaa} horas!`)
}
else {
return reply (`s = segundos\nm = minutos\nh = horas\n\nexemplo:\n${prefix}closetime 5 m`)
}
break

case 'opengp':
if (!SoDono && !isGroupAdmins) return reply (`${say.only.admin}`)
var nomor = info.participant;
let qxx = args.join(' ').split(' ');
let qxt = parseInt(q[0]);
let tqb = qxx[1];
if (isNaN(qxt)) return reply (`Precisa ser um n√∫mero!!!\n\nexemplo:\n${prefix}opengp 30 s`)
if (tqb === 's') {
let calc = parseInt(qxt + '000')
await reply (`O grupo ser√° aberto em ${qxt} segundos`)
await sleep(calc);
await destiny.groupSettingUpdate(from, 'not_announcement')
return reply (`O grupo foi aberto pelo administrador *${pushname}* ap√≥s ${qxt} segundos!`)
}
if (tqb === 'm') {
calc = parseInt(qxt * 60 + '000')
await reply (`O grupo ser√° aberto em ${qxt} minutos`)
await sleep(calc);
await destiny.groupSettingUpdate(from, 'not_announcement')
return reply (`O grupo foi aberto pelo administrador *${pushname}* ap√≥s ${qxt} minutos!`)
}
if (tqb === 'h') {
calc = parseInt(qxt * 3600 + '000')
await reply (`O grupo ser√° aberto em ${qxt} horas`)
await sleep(calc);
await destiny.groupSettingUpdate(from, 'not_announcement')
return reply (`O grupo foi aberto pelo administrador *${pushname}* ap√≥s ${qxt} horas!`)
}
else {
return reply (`s = segundos\nm = minutos\nh = horas\n\nexemplo:\n${prefix}opentime 5 m`)
}
break

case 'grupoinfo':
case 'infogrupo':
case 'infogp':  
case 'gpinfo':  
case 'regras':  
if (!isGroup) return reply(enviar.msg.grupo)
if(!isGroupAdmins)return reply(enviar.msg.adm)
ppUrl = await destiny.profilePictureUrl(from, 'image')
buffer = await getBuffer(ppUrl)
const metadata = await destiny.groupMetadata(from) 
destiny.sendMessage(from, {image: buffer, caption: `*NOME* : ${groupName}\n*MEMBRO* : ${groupMembers.length}\n*ADMIN* : ${groupAdmins.length}\n*DESCRI√á√ÉO* : ${metadata.desc}`, thumbnail: null}, {quoted: info})
break 
 
case 'totag':
case 'hidetag':
if(!isGroup) return reply('Este comando s√≥ deve ser utilizado em Grupo.')
if(!isGroupAdmins) return reply('Voc√™ precisa ser ADM pra utilizar este comando')
membros = (groupId, membros1) => {
array = []
for (let i = 0; i < membros1.length; i++) {
array.push(membros1[i].id)
}
return array
}
var yd = membros(from, groupMembers)
if((isMedia && !info.message.videoMessage || isQuotedSticker) && args.length == 0) {
media = isQuotedSticker ? info.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage : info.message.stickerMessage
rane = getRandom('.'+await getExtension(media.mimetype))
img = await getFileBuffer(media, 'sticker')
fs.writeFileSync(rane,img)
fig = fs.readFileSync(rane)
var options = {
sticker: fig,  
mentions: yd
}
destiny.sendMessage(from, options).then(() => fs.unlinkSync(rane) )
} else if ((isMedia && !info.message.videoMessage || isQuotedImage) && args.length == 0) {
media = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(media.mimetype))
img = await getFileBuffer(media, 'image')
fs.writeFileSync(rane,img)
buff = fs.readFileSync(rane)
destiny.sendMessage(from, {image: buff, caption: media.caption, mentions: yd}, {quoted: info}).then(() => fs.unlinkSync(rane) )
} else if ((isMedia && !info.message.videoMessage || isQuotedVideo) && args.length == 0) {
media = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(media.mimetype))
vid = await getFileBuffer(media, 'video')
fs.writeFileSync(rane,vid)
buff = fs.readFileSync(rane)
destiny.sendMessage(from, {video: buff, gifPlayback: media.gifPlayback, caption: media.caption, mentions: yd}, {quoted: info}).then(() => fs.unlinkSync(rane) )
} else if ((isMedia && !info.message.videoMessage || isQuotedAudio) && args.length == 0) {
media = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(media.mimetype))
aud = await getFileBuffer(media, 'audio')
fs.writeFileSync(rane,aud)
buff = fs.readFileSync(rane)
destiny.sendMessage(from, {audio: buff, mimetype: 'audio/mp4', ptt:true, mentions: yd}, {quoted: info}).then(() => fs.unlinkSync(rane) )
} else if ((isMedia && !info.message.videoMessage || isQuotedDocument) && args.length == 0) {
media = isQuotedDocument ? info.message.extendedTextMessage.contextInfo.quotedMessage.documentMessage : info.message.documentMessage
rane = getRandom('.'+await getExtension(media.mimetype))
doc = await getFileBuffer(media, 'document')
fs.writeFileSync(rane,doc)
buff = fs.readFileSync(rane)
con .sendMessage(from, {document: buff, mimetype : `${media.mimetype}`, fileName: media.fileName, mentions: yd}, {quoted: info}).then(() => fs.unlinkSync(rane) )
} else if ((info.message.extendedTextMessage != undefined || info.message.extendedTextMessage != null) && !isMedia){
buff = info.message.extendedTextMessage.contextInfo.quotedMessage.conversation
destiny.sendMessage(from, {text: buff, mentions: yd}, {quoted: info}) 
} else if(args.join(' ')){
destiny.sendMessage(from, {text: args.join(' '), mentions: yd}, {quoted: info})
} else {
reply(`Marque uma, imagem/v√≠deo/√°udio/documento/figurinha/texto, com o comando ${prefix + command}`)
}
break

case 'react':
if (!args.join(' ')) return reply(`Cade o emoji?`)
if (info.message.extendedTextMessage == undefined || info.message.extendedTextMessage == null || !isGroup){
var reactionMessage = {
react: {
text: args.join(' '),
key: info.key
}}
} else {
var a = info.message.extendedTextMessage.contextInfo
var rafa = {
remoteJid: `${from}`,
fromMe: false,
id: `${a.stanzaId}`,
participant: `${a.participant}`
}
var reactionMessage = {
react: {
text: args.join(' '),
key: rafa
}}
}
destiny.sendMessage(from, reactionMessage)
break

case 'marcar':
if (!isGroupAdmins) return reply('Voc√™ precisa ser ADM pra utilizar este comando')
reply('ol√° maestro, irei convoca todos do grupo pro nosso coral')
raimgs = [
  `https://telegra.ph/file/b6e992ea6adac911bb5f9.jpg`,
  `https://telegra.ph/file/742a9df20adaacaac6918.jpg`,
  `https://telegra.ph/file/e6c6e08d886a65acbfea2.jpg`,
  `https://telegra.ph/file/f293eac6a7964ab6a92e7.jpg`,
  `https://telegra.ph/file/74c2354f7da0d842d55bb.jpg`,
  `https://telegra.ph/file/240f53c8a0f9ffe40c160.jpg`,
  `https://telegra.ph/file/be0c5405e43e0c228a5f7.jpg`,
  `https://telegra.ph/file/dd057766309ed8c25e4ac.jpg`]
imgs = raimgs[Math.floor(Math.random() * raimgs.length)]
try {
members_id = []
teks = (args.length > 1) ? body.slice(8).trim() : ''
teks += '\n‚ï≠‚îÅ‚îÅ ‚™©\n‚ïø‚ïë „Äå„Åç‚Éü‚ôªÔ∏èùô≥ùô¥ùöÇùöÉùô∏ùôΩùöà‚ôªÔ∏è „Äç\n'
for (let mem of groupMembers) {
teks += `‚îÇ‚ùè @${mem.id.split('@')[0]}\n`
members_id.push(mem.id)
}
destiny.sendMessage(from, {image: {url: imgs}, caption: teks, mentions: members_id}, {quoted: selo})
} catch {
reply('ERROR!!')
}
break

case 'marcarwame':
if (!isGroupAdmins) return reply('Voc√™ precisa ser ADM pra utilizar este comando')
reply('ol√° maestro, irei convoca todos do grupo pro nosso coral')
raimgs = [
  `https://telegra.ph/file/b6e992ea6adac911bb5f9.jpg`,
  `https://telegra.ph/file/742a9df20adaacaac6918.jpg`,
  `https://telegra.ph/file/e6c6e08d886a65acbfea2.jpg`,
  `https://telegra.ph/file/f293eac6a7964ab6a92e7.jpg`,
  `https://telegra.ph/file/74c2354f7da0d842d55bb.jpg`,
  `https://telegra.ph/file/240f53c8a0f9ffe40c160.jpg`,
  `https://telegra.ph/file/be0c5405e43e0c228a5f7.jpg`,
  `https://telegra.ph/file/dd057766309ed8c25e4ac.jpg`]
imgs = raimgs[Math.floor(Math.random() * raimgs.length)]
try {
members_id = []
teks = (args.length > 1) ? body.slice(10).trim() : ''
teks += ''
for (let mem of groupMembers) {
teks += `‚ï≠https://wa.me/${mem.id.split('@')[0]}\n‚ï∞Nome: ${pushname.id}\n`
members_id.push(mem.id)
}
destiny.sendMessage(from, {image: {url: imgs}, caption: teks, mentions: members_id}, {quoted: selo})
} catch {
reply('ERROR!!')
}
break

case 'convite':
if (!isGroup) return reply(`S√ì EM GRUPO KRLH`)
qp = args.join(" ")
var nomor = info.participant
invite = `[ Convite de grupo ]\nDe: wa.me/${sender.split("@s.whatsapp.net")[0]}\n ${qp}`
sendBimgT(`${setting.numerodono}@s.whatsapp.net`,wew = `https://telegra.ph/file/5f8d8e6dd0c5d4044686a.jpg`, invite, "Leia com Aten√ß√£o", [
{index: 2, quickReplyButton: {displayText: '‚úÖ Aceitar', id: `${prefix}entrarlink ${qp}`}},
{index: 2, quickReplyButton: {displayText: 'üö´ Recusar', id: `${prefix}negarconvite ${sender.split("@s.whatsapp.net")[0]}`}}], selo)
reply("Convite de grupo enviado ao meu dono, pfv espere a sua resposta")
break

case 'entrarlink':
case 'entrar':
if (!SoDono) return reply(`S√≥ meu dono`)
try{
await destiny.groupAcceptInvite (`${q.slice([26])}`)
reply('‚úÖ Entrei no Grupo')
} catch {
reply('N√£o foi poss√≠vel entrar no grupo')
}
break

case 'negarconvite':
if (!SoDono) return reply(`S√≥ meu dono`)
merda = args.join(" ")
bla = "üö´ Seu convite foi negado"
await destiny.sendMessage(`${merda}@s.whatsapp.net")`, {text: bla})
reply('‚úÖ Mensagem enviada com sucesso')
break

case 'kick': {
if (!isGroup) return reply('Este comando s√≥ deve ser utilizado em Grupo.')
if (!isGroupAdmins) return reply('Voc√™ precisa ser ADM pra utilizar este comando')
if (!isBotGroupAdmins) return reply('Bot precisa ser ADM, para executar esta fun√ß√£o.')
mentioned = args.join(" ").replace("@", "") + "@s.whatsapp.net"
if(numerodono.includes(mentioned)) return reply("N√£o pode remover meu dono üò°")
if(botNumber.includes(mentioned)) return reply("Voc√™ acha que vou banir eu mesmo??, troxa voc√™ em..")
if(!isMentioned) return reply('Marque a')
baimg = await getBuffer(`https://telegra.ph/file/9f20029f7ff8758573a14.jpg`)
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
for (let _ of mentioned) {
bantxt = `O usu√°rio: @${mentioned[0].split('@')[0]}\n*Foi Banido Permanente por motivos justo*`
destiny.groupParticipantsUpdate(from, mentioned, 'remove')}
sleep(1000)
let cop = [
{buttonId: `nd`, buttonText: {displayText: `Bem Feito üö©`}, type: 1}]
let buttonMessage = {
image: baimg,
caption: bantxt,
footer: `${NomeDoBot}`,
headerType: 4,
contextInfo:{externalAdReply:{
buttons: cop,
title: `instagram`,
body: `¬© Copyright ${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: fs.readFileSync('./logos/logo2.jpg'),
sourceUrl: `https://www.instagram.com/maysurf__/`
}}
}
destiny.sendMessage(from, buttonMessage, 
{quoted:selo})}
break

case 'banir10':
if(!isGroup) return reply(enviar.msg.grupo)  
if(!SoDono) return reply("S√≥ dono pode executar este comando..")
var ids = groupIdscount.indexOf(from)
var x = countMessage[ids].numbers
var mem = groupMembers.map(({id}) => id)
try {
var msg = x.filter(({id, messages}) => (messages < 5 && mem.includes(id))).sort((a,b) => b.messages - a.messages)
var count = 0
var interval = setInterval(function(){
count++
if(count === 10){
clearInterval(interval)
reply('Pronto removi 10 macaco que n√£o fala porra nenhuma aqui no grupo ü§¨')
}
destiny.groupParticipantsUpdate(from, [msg[count -1].id], 'remove')
}, 1000)
} catch(e){
clearInterval(interval)
reply('Ops n√£o achei nenhum membro inativo.')
console.log(e)
}
break

case 'kickfake':
case 'banfake':
{
if (!isGroupAdmins && !SoDono) return reply(enviar.msg.adm)
array_fake = [];
for(let a of groupMembers) {
if(!a.id.startsWith("55") && a.id !== botNumber && a.admin === null) {
array_fake.push(a.id)
}
}
if(array_fake.length === 0) return reply("Nenhum n√∫mero fake encontrado no grupo")
for(let a of array_fake) {
await sleep(100)
destiny.groupParticipantsUpdate(from, [a], 'remove')
}
teks = `${array_fake.length} n√∫meros fake removido do grupo`
destiny.sendMessage(from, {text: teks, mentions: array_fake})
}
break



case 'reviver':
if (!isGroup) return reply('Esse comando so funciona em grupo, sinto muito')
if(!isGroupAdmins) return reply('‚ùå VOC√ä N√ÉO √â ADM PRA UTILIZAR ESTE COMANDO, DESCULPE, QUEM SABE UM DIA üòÇ')
if(!isBotGroupAdmins) return reply("N√£o sou adm pra executar esta a√ß√£o..")
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque uma mensagem do alvo!')
add = info.message.extendedTextMessage.contextInfo.participant
sleep(5000)
const response2 = await destiny.groupParticipantsUpdate(from, [add], "add" )
reply('Usuario Adicionado de volta ao grupo.')
break

case 'add':
if(!SoDono) return reply('Comando Desativado por quest√µes de seguran√ßa, estava ocasionandoo Ban do n√∫mero do bot.')
if(!isGroupAdmins) return reply('‚ùå VOC√ä N√ÉO √â ADM PRA UTILIZAR ESTE COMANDO, DESCULPE, QUEM SABE UM DIA üòÇ')  
if(!isBotGroupAdmins) return reply("N√£o sou adm pra executar esta a√ß√£o..")
if(q.length < 1) return reply('Quer adicionar uma alma?')  
try {
tdt = args[0]
if(tdt.length < 1) return reply(`Digita o n√∫mero que deseja add, exemplo: ${prefix}add 558198923680`)
if (info.message.extendedTextMessage === null || info.message.extendedTextMessage === undefined) {
adduser = q.replace(new RegExp("[()+-/ +/]", "gi"), "") + `@s.whatsapp.net`
if(groupMetadata.participants.includes(adduser)) return reply('Esse membro j√° est√° no grupo, como voc√™ vai adicionar??? ')
reply('Irei adicionar ele(a) em 5 segundos...')  
setTimeout(async() => {
responser = await destiny.groupParticipantsUpdate(from, [adduser], "add")
}, 5000)
o = responser.participants[0]
let inv = (Object.values(o))
if(inv[0].code == 409) return reply('O alvo j√° est√° no grupo!')
if(inv[0].code == 403) return reply('Erro, conta privada do usu√°rio')
if(inv[0].code == 408) return reply('Erro, usu√°rio acabou de sair')
if(inv[0].code == 401) return reply('Erro, porque o bot est√° bloqueado pelo alvo ')
} else {
if(groupMetadata.participants.includes(adduser)) return reply('Esse membro j√° est√° no grupo, como voc√™ vai adicionar??? ')  
reply('Irei adicionar ele(a) em 5 segundos...')  
adduser = info.message.extendedTextMessage.contextInfo.participant
setTimeout(async() => {
responser =  await destiny.groupParticipantsUpdate(from, [adduser], "add")
}, 5000)
o = responser.participants[0]
let inv = (Object.values(o))
if(inv[0].code == 409) return reply('O alvo j√° est√° no grupo! ')
if(inv[0].code == 403) return reply('Falhou, porque em privado ')
if(inv[0].code == 408) return reply('Falha, porque o alvo acabou de sair ')
if(inv[0].code == 401) return reply('Falha, porque o bot est√° bloqueado pelo alvo ')
}
} catch {
reply('Izi, se n√£o for adicionado provavelmente ele privou s√≥ para contatos adicionar ele em grupo.')
}
break

case 'sairgp':
if(isGroup && !SoDono && !info.key.fromMe) return reply("Este comando s√≥ o bot ou o dono pode executar..")
try {
destiny.groupLeave(from)
} catch(erro) {
reply(String(erro))
}
break

case 'ban': case 'banir': {
if (!isGroup) return reply('Este comando s√≥ deve ser utilizado em Grupo.')
if (!isGroupAdmins) return reply('Voc√™ precisa ser ADM pra utilizar este comando')
if (!isBotGroupAdmins) return reply('Bot precisa ser ADM, para executar esta fun√ß√£o.')
if (info.message.extendedTextMessage != undefined || info.message.extendedTextMessage != null) {
num = info.message.extendedTextMessage.contextInfo.participant
if(botNumber.includes(num)) return reply('N√£o sou besta de remover eu mesmo n√© üôÅ, mas estou decepcionado com voc√™')
if(numerodono.includes(num)) return reply('N√£o posso remover meu dono ü§ß')
wew = await getBuffer("https://telegra.ph/file/59c198f533657546ddce7.jpg")
mban = `Usu√°rio ${num.split("@")[0]} banido permanente por motivos justo [‚úÖ]`
destiny.groupParticipantsUpdate(from, [num], 'remove')
let buttonMessage = {
image: wew,
caption: mban,
footer: `${NomeDoBot}`,
headerType: 4,
contextInfo:{externalAdReply:{
title: `instagram`,
body: `¬© Copyright ${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: fs.readFileSync('./logos/logo2.jpg'),
sourceUrl: `https://www.instagram.com/maysurf__/`
}}
}
destiny.sendMessage(from, buttonMessage, 
{quoted:selo})
} else { 
reply('Responda a mensagem da pessoa')
}}
break


//======‚â†(INFOS/EXECU√á√ÉO/DONO)‚â†=========\\

case 'apresentar':
case 'apr':  
inff = `Bem vindo(a) ao grupo : ${groupName}


üëæ ‚Ä¢ùë¨ùëµùëªùëπùë∂ùëº ùë∫ùë¨ ùë®ùë∑ùëπùë¨ùë∫ùë¨ùëµùëªùë®‚Ä¢
üì∏ ‚Ä¢Fùú£Tùú£
üëª ‚Ä¢Nùú£ME
üìå ‚Ä¢CID‚àÜDE
üóìÔ∏è ‚Ä¢ID‚àÜDE
‚ö†Ô∏è ‚Ä¢LEI‚àÜ ‚àÜS REGR‚àÜS Dùú£ GRUPùú£

*APROVEITE O GRUPO!*`
destiny.sendMessage(from, {text: inff}, {quoted: selo})
break

case 'papof':
case 'regraspp':  
if(!isGroupAdmins) return reply('Qual foi membro comum?')
txtz = `„Äê·ØΩíã®üì∑:ùëÜùëí ùëéùëùùëüùëíùë†ùëíùëõùë°ùëíùëö ùëôùëñùë•ùëúùë†üåö¬ª¬∞„Äë
íã®Œá‡£≠‡£™Ãáüî•…¥·¥è·¥ç·¥á:
íã®Œá‡£≠‡£™Ãáüî•…™·¥Ö·¥Ä·¥Ö·¥á:
íã®Œá‡£≠‡£™Ãáüî• Ä·¥Ä ô·¥Ä:
*A·¥ò Ä·¥ás·¥á…¥·¥õ·¥á-s·¥á s·¥á «´·¥ú…™s·¥á Ä.*
ùôèùòºùôÇùôé‚û≠◊Ç·úî‡†≠ ‚Å∏‚Çà‚Å∏|ùüñùüñùüñ|ùü†ùü†ùü†| ‡Ω∫‡Ω≤‚Å∏‚Å∏‚Å∏
 ‚îÄ‚îÄ‚ïå‚ïå‚ïå‚îà‚ä∞‚òÖ‚ä±‚îà‚ïå‚ïå‚ïå‚îà‚îÄ
‚ùå ENTROU NO 
GRUPO INTERAJA, N√ÉO PRECISAMOS DE ENFEITES,INATIVOS SERAO REMOVIDOS ‚ùå* 

/Ôπã<,Ô∏ª‚ï¶‚ï§‚îÄ “â - -----üí• 
/Ôπã üÖ¥ üÖ±üÖ¥üÖº üÜÖüÖ∏üÖΩüÖ≥üÖæ üÜÇüÖ¥üÜÑüÜÇ üÖµüÖ∏üÖªüÖ∑üÖæüÜÇ üÖ≥üÖ∞ üÖøüÜÑüÜÉüÖ∞`
destiny.sendMessage(from, {text: txtz}, {quoted: selo})
break

case 'digt':
bla = `üî•‚ÜØùêâùêÄ ùêÑùêçùêìùêëùêÄ ùêÉùêàùêÜùêàùêìùêÄùêçùêÉùêé ùöΩùêà ‚ÜØ¬∞üåöüíï
           ‡Ω≤‚ãÆ ‡æÄüå¥‚èù ‡Ω≤‚ãÆ ‡æÄüö∏ ‡Ω≤‚ãÆ ‡æÄ‚èùüå¥ ‡Ω≤‚ãÆ ‡æÄ 

üêºüçß‚ÜØùñ†ùñ∞ùñ¥ùñ® ùñµùñÆùñ¢ùñ§ÃÇ ùñØùñÆùñ£ùñ§ ùñ≤ùñ§ùñ±‚ÜØüçßüêª
„Ö§„Ö§„Ö§„Ö§  ‚óç€´‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿú‚üÖ‚óåŸúüõ∏‚óå‚üÜ‡£≠‡£≠Ÿú‡ªë‚ÉïÍî∑‚Éò‡£≠‡£≠‡£≠‡£≠Ÿú‚ùÄ€´‚óç‡£≠‡£≠‡£≠‡£≠‡Ω≤ ‡Ω¥
    „Äê‚úî„Äë·¥ò Ä·¥á·¥õ·¥Äüë©üèæ‚Äçü¶± „Äê‚úî„Äë ô Ä·¥Ä…¥·¥Ñ·¥Äüë©üèº
    „Äê‚úî„Äë·¥ç·¥Ä…¢ Ä·¥Äüçß„Äê‚úî„Äë…¢·¥è Ä·¥Ö·¥Äüçø
    „Äê‚úî„Äë·¥ò·¥è ô Ä·¥áü™ô „Äê‚úî„Äë Ä…™·¥Ñ·¥Äüí≥
    „Äê‚úî„Äë ô·¥Ä…™·¥Ä…¥·¥Äüíå„Äê‚úî„Äë·¥ç·¥Ä·¥Ñ·¥è…¥ ú·¥á…™ Ä·¥ÄüçÅ
    „Äê‚úî„Äë·¥è·¥õ·¥Ä·¥ã·¥úüßß„Äê‚úî„Äë·¥á-…¢…™ Ä üü¶Ñ
    „Äê‚úî„Äë ü·¥è ü…™üç≠    „Äê‚úî„Äë…¢·¥Ä·¥Ö·¥èüêÉ
    „Äê‚úî„Äë…¢·¥Ä èüè≥Ô∏è‚Äçüåà     „Äê‚úî„Äë ü·¥ás ô…™·¥Ñ·¥Ä‚úÇÔ∏è
    „Äê‚úî„Äë·¥†·¥Ä·¥Ö…™·¥ÄüíÑ  „Äê‚úî„Äë·¥õ Ä·¥Ä·¥†·¥á·¥Ñ·¥èüçå
                „Äê‚úî„Äë…¥…™…¥…¢·¥ú·¥á·¥ç  ü…™…¢·¥Äüìµ
. ‚ò™Ô∏é ‚Ä¢ ‚òÅÔ∏é. . ‚Ä¢.
„Äê ùêïùêÑùêå ùêÜùêÄùêãùêÑùêëùêÄ, ùêíùêÑ ùêÉùêàùêïùêÑùêëùêìùêàùêë ùêÑ ùêÖùêÄùêôùêÑùêë ùêèùêÄùêëùêìùêÑ ùêÉùêÄ ùêÖùêÄùêåùêàùêãùêàùêÄ.„Äëü•Ç`
destiny.sendMessage(from, {text: bla}, {quoted: selo})
break

case 'autoban':
if (!isGroup) return reply(enviar.msg.adm)
if (!isGroupAdmins && !SoDono) return reply('Precisa ser Dono')
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
var ind = dbids.indexOf(from)
if(isAdeusCara) {
adeuscara[ind].actived = true
} else {
adeuscara.push({
groupId: from,
actived: true,
number: []
})
}
fs.writeFileSync('./datab/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`Ativou com sucesso o recurso de autoban neste grupo‚úîÔ∏è`)
} else if (Number(args[0]) === 0) {
var ind = dbids.indexOf(from)						
if(isAdeusCara) {
adeuscara[ind].actived = false
} else {
adeuscara.push({
groupId: from,
actived: false,
number: []
})
}
fs.writeFileSync('./datab/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`Desativou com sucesso o recurso de autoban neste grupo‚úîÔ∏è`)
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'listban':
if (!isGroup) return reply(enviar.msg.adm)
if (!isGroupAdmins) return reply(enviar.msg.adm)
var ind = dbids.indexOf(from)
if(!isAdeusCara) return reply('*Nenhum N√∫mero n√£o foi adicionado*')
teks = '*N√∫meros que vou moer na porrada se voltar üò°:*\n'
for(i=0;i<adeuscara[ind].number.length;++i) {
teks += `‚û§ *${adeuscara[ind].number[i]}*\n`
}
teks += '*Esses ai vou descer meu martelo do ban ü•µ*'
reply(teks)
break  

case 'listagp': 
if (!SoDono && !isnit && !info.key.fromMe) return reply('```SOMENTE MEU DONO LIND√ÉO```')
listvi = await getBuffer('https://telegra.ph/file/40a4ec9d4105a2336453b.mp4')
tdufg = await store.chats.all()
ingfoo = await getGroup(tdufg)
teks1 = `*L I S T A  D E  G R U P O S*\n*Total de Grupos* : ${ingfoo.length}\n\n`
for (let i = 0; i < ingfoo.length; i++){
teks1 += `‚Ä¢ *Nome do Grupo* : ${ingfoo[i].subject}\n‚Ä¢ *Id do Grupo* : ${ingfoo[i].id}\n‚Ä¢ *Criado* : ${moment(`${ingfoo[i].creation}` * 1000).tz('America/Sao_Paulo').format('DD/MM/YYYY HH:mm:ss')}\n‚Ä¢ *Total de Membros* : ${ingfoo[i].participants.length}\n\n`
}
destiny.sendMessage(from, {video: listvi, caption: teks1, gifPlayback: true, templateButtons: [{index: 1, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: `kk`}}]}, {quoted: selo})
break

case 'listabr':
if(!isGroup) return reply(mess.only.group)
if(!isGroupAdmins) return reply(mess.only.admin)
teks = 'ùóïùó•ùóîùó¶ùóúùóüùóòùóúùó•ùó¢ùó¶ ùó°ùó¢ ùóöùó•ùó®ùó£ùó¢: \n'
men = []
for(let mem of groupMembers) {
    if(mem.id.startsWith(55)) {
teks += `‚û§ @${mem.id.split('@')[0]}\n`
men.push(mem.id)
    }
}
if(teks.indexOf('‚û§') < 0) return reply('„Äé‚ùó„ÄèNenhum n√∫mero do Brasil foi encontrado no grupo.')
destiny.sendMessage(from, {text: teks, mentions: men})
break

case 'listafake':
if(!isGroup) return reply(mess.only.group)
if(!isGroupAdmins) return reply(`[‚ùå] VC N√ÉO √â ADMINISTRADOR DO GRUPO [‚ùå] `)
if(!isBotGroupAdmins) return reply(`[‚ùÑÔ∏è] O BOT PRECISA SER ADMINISTRADOR DO GRUPO [‚ùÑÔ∏è]`)
if(!isGroupAdmins) return reply(mess.only.admin)
teks = 'üè≥Ô∏è N√∫meros fakes no grupo: üè≥Ô∏è\n'
men = []
for(let mem of groupMembers) {
if(!mem.id.startsWith(55)) {
teks += `‚û§ @${mem.id.split('@')[0]}\n`
men.push(mem.id)}}
if(teks.indexOf('‚û§') < 0) return reply('*Nenhum numero Gringo foi encontrado*')
destiny.sendMessage(from, {text: teks, mentions: men})
break

/////// DESBANIR //////////


case 'spam':
luffy = args.join(' ')
luffy1 = luffy.split('/')[0] || 'Indefinido'
luffy2 = luffy.split('/')[1] || 'Indefinido'
if(!luffy.includes("/")) return reply(`Cade o /\nExemplo: ${prefix + command} 91985841872/motivo`)
membros = (groupId, membros1) => {
array = []
for (let i = 0; i < membros1.length; i++) {
array.push(membros1[i].id)
}
return array
}
var negoes = membros(from, groupMembers)
wew = await getBuffer('https://telegra.ph/file/1cc8e4042b739e0d0edd1.jpg')
spaw = `‚îå‚óà ‚îÅ‚îÅ‚îÅ‚â™ ‚∏ô ‚â´‚îÅ‚îÅ‚îÅ ‚óà‚îê\n  ¬§üìµùô∞ùöÉùô∞ùöÄùöÑùô¥ ùô≥ùô¥ ùöÇùôøùô∞ùôºüìµÔ∏è¬§\n\n ‚ö†Ô∏èùô≥ùô¥ùôΩùöÑùôΩùô≤ùô∏ùô¥ùôº ùô¥ùöÇùöÇùô¥ ùôΩùöÑùôºùô¥ùöÅùôæ‚ö†Ô∏è\n\nWa.me//+55${luffy1}\n\n‚û°Ô∏èùöÄùöÑùô∞ùôΩùöÉùô∞ùöÇ ùöÖùô¥ùöâùô¥ùöÇ ùöÖùô≤ ùöÄùöÑùô∏ùöÇùô¥ùöÅ‚¨ÖÔ∏è\n\nùöñùöòùöùùöíùöüùöò: ${luffy2}\n‚îî‚óà ‚îÅ‚îÅ‚îÅ‚â™ ‚∏ô ‚â´‚îÅ‚îÅ‚îÅ ‚óà‚îò`
destiny.sendMessage(from, {image: wew, caption: spaw, mentions: negoes}, {quoted: selo})
break

case 'suportes': {
if (!isGroup) return reply(enviar.msg.grupo)
let buttons = [
¬† {buttonId:`${prefix}menos1`, buttonText: {displayText: 'üìù ùó•ùóòùóßùóúùó•ùóîùó• ùó¶ùó®ùó£ùó¢ùó•ùóßùóò ùó†ùóòùóßùó¢ùóóùó¢ 1' }, type: 1},
¬† {buttonId:`${prefix}menos2`, buttonText: {displayText: 'üìù ùó•ùóòùóßùóúùó•ùóîùó• ùó¶ùó®ùó£ùó¢ùó•ùóßùóò ùó†ùóòùóßùó¢ùóóùó¢ 2' }, type: 1},
¬† {buttonId: `${prefix}bandesban`, buttonText: {displayText: 'üî• ùóïùóîùó°ùóúùó•/ùóóùóòùó¶ùóïùóîùó°ùóúùó• ùó™ùó£ùó£ üî•' }, type: 1}]
let buttonMessage = {
image: {url: `https://telegra.ph/file/9918c1fff47a578460d25.jpg`},
caption: "\n  ùóñùó¢ùó£ùóúùóò ùó¢ ùóßùó´ùóß ùóòùó¶ùóñùó•ùóúùóßùó¢ üìç",
buttons: buttons,
headerType: 1
}
sendMsg = await destiny.sendMessage(from, buttonMessage, {quoted: selo})}
break

case 'bandesban': {
if (!isGroup) return reply(enviar.msg.grupo)
let buttons = [
¬† {buttonId:`${prefix}mtdban`, buttonText: {displayText: 'üìù ùóßùó´ùóß ùóïùóîùó°ùóúùó• ùó™ùó£ùó£ ' }, type: 1},
¬† {buttonId:`${prefix}mtddesban`, buttonText: {displayText: 'üìù ùóßùó´ùóß ùóóùóòùó¶ùóïùóîùó°ùóúùó• ùó™ùó£ùó£ 1'}, type: 1},
¬† {buttonId: `${prefix}mtddesban2`, buttonText: {displayText: 'üìù ùóßùó´ùóß ùóóùóòùó¶ùóïùóîùó°ùóúùó• ùó™ùó£ùó£ 2' }, type: 1}]
let buttonMessage = {
image: {url: `https://telegra.ph/file/9918c1fff47a578460d25.jpg`},
caption: "\n  ùóñùó¢ùó£ùóúùóò  ùó¢ ùóßùó´ùóß ùóòùó¶ùóñùó•ùóúùóßùó¢ üìç",
buttons: buttons,
headerType: 1
}
sendMsg = await destiny.sendMessage(from, buttonMessage, {quoted: selo})}
break

case 'menos1':
destiny.sendMessage(from, {text: 'assunto\nN√£o recebo c√≥digo de verifica√ß√£o:', footer: ` `, templateButtons: [{index: 1, urlButton: {displayText: `Clique aqui para copiar algo`, url: 'https://www.whatsapp.com/otp/copy/Meu n√∫mero est√° no suporte algu√©m solicitou meu c√≥digo por engano meu n√∫mero √© usado para conversas com familiares que est√£o com convite por favor reinicie o meu c√≥digo de verifica√ß√£o via SMS!\nN√∫mero: +55 99 9999-9999'}}]}, {quoted: info})
break

case 'menos2':
destiny.sendMessage(from, {text: 'Assunto: N√£o consigo entrar no whatsapp!\nresposta:', footer: ` `, templateButtons: [{index: 1, urlButton: {displayText: `Clique aqui para copiar algo`, url: 'https://www.whatsapp.com/otp/copy/resposta: Eu nao consigo entrar no whatsapp , meu n√∫mero esta -1 , solicito que resetem minha verifica√ß√£o de n√∫mero!\nN√∫mero: +55 99 9999-9999'}}]}, {quoted: info})
break

case 'mtdban':
destiny.sendMessage(from, {text: 'Assunto: Usu√°rio violando os termos de uso do whatsapp usando vers√µes modificadas de whatsapps.', footer: ` `, templateButtons: [{index: 1, urlButton: {displayText: `Clique aqui para copiar algo`, url: 'https://www.whatsapp.com/otp/copy/resposta: Ol√°, hoj√© eu percebi que um homem estava usando whatsapp modificado, falei para ele que talvez a conta dele poderia ser banida mais ele nem ligou, pesquisei no Google e vi que whatsapp modificados d√£o ban, ent√£o pe√ßo que o suporte d√™ ban nesta conta por estar usando whatsapp modificado.\nnumero: +55 99899'}}]}, {quoted: info})
break

case 'mtddesban':
destiny.sendMessage(from, {text: 'Assunto: N√∫mero Banido\nresposta:', footer: ` `, templateButtons: [{index: 1, urlButton: {displayText: `Clique aqui para copiar algo`, url: 'https://www.whatsapp.com/otp/copy/resposta: Banido injustamente novamente +55 999999 se eu n√£o obter respostas estarei migrando para o telegram.'}}]}, {quoted: info})
break

case 'mtddesban2':
destiny.sendMessage(from, {text: 'Assunto: N√∫mero Banido\nresposta:', footer: ` `, templateButtons: [{index: 1, urlButton: {displayText: `Clique aqui para copiar algo`, url: 'https://www.whatsapp.com/otp/copy/resposta: Ola suporte do whatsapp , meu numero ,(+55 9999999) foi banido injustamente do whatsapp , estou solicitando o desbanimento imediato de meu n√∫mero'}}]}, {quoted: info})
break
////////////// CONFIRMA√áAO

case 'uzumak': {
uzuma = ["https://youtu.be/IKchrtaXmEo",
"https://youtu.be/YpQ606sHhfo",
"https://youtu.be/8JnPIuMdQyo",
"https://youtu.be/I6wX-d__2xY"]
logomenu = [
"https://telegra.ph/file/a99782b9aabeffbf4937d.jpg" ]
bundak = uzuma[Math.floor(Math.random() * uzuma.length)]
menulogo = logomenu[Math.floor(Math.random() * logomenu.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}rgclans`, buttonText: {displayText: '‚≠î OUTROS ‚≠î'}, type: 1},
{buttonId: `${prefix}uzumaki`, buttonText: {displayText: '‚≠î CONFIRMAR ‚≠î'}, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: infouzumaki(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)}
break

case 'uchih': {
uchi = ["https://youtu.be/y5MZIkQNikc",
"https://youtu.be/ZpHcpTJoxOg",
"https://youtu.be/RdX4vzObuPA",
"https://youtu.be/7eGdZe3wQdU"]
logomenu = [
"https://telegra.ph/file/7fd850240b990a57f321d.jpg" ]
bundak = uchi[Math.floor(Math.random() * uchi.length)]
menulogo = logomenu[Math.floor(Math.random() * logomenu.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}rgclans`, buttonText: {displayText: '‚≠î OUTROS ‚≠î'}, type: 1},
{buttonId: `${prefix}uchiha`, buttonText: {displayText: '‚≠î CONFIRMAR ‚≠î'}, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: infouchiha(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)}
break

case 'hyuug': {
hyuug = ["https://youtu.be/z0keZbUaOMU",
"https://youtu.be/YhZGzdaPz0Y",
"https://youtu.be/HXJBa-K-W8w",
"https://youtu.be/u8Xakc6syvQ"]
logomenu = [
"https://telegra.ph/file/7f6c77307089d077b3fa2.jpg" ]
bundak = hyuug[Math.floor(Math.random() * hyuug.length)]
menulogo = logomenu[Math.floor(Math.random() * logomenu.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}rgclans`, buttonText: {displayText: '‚≠î OUTROS ‚≠î'}, type: 1},
{buttonId: `${prefix}hyuuga`, buttonText: {displayText: '‚≠î CONFIRMAR ‚≠î'}, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: infohyuuga(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)}
break

case 'otsutsuk': {
otsut = ["https://youtu.be/W8Ll_aP0WSc",
"https://youtu.be/7bAE-DZsx6Q",
"https://youtu.be/Sjz-9W_w0IE",
"https://youtu.be/rdjQJ6NOduo"]
logomenu = [
"https://telegra.ph/file/cc952bd5b842c6985f60d.jpg" ]
bundak = otsut[Math.floor(Math.random() * otsut.length)]
menulogo = logomenu[Math.floor(Math.random() * logomenu.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}rgclans`, buttonText: {displayText: '‚≠î OUTROS ‚≠î'}, type: 1},
{buttonId: `${prefix}otsutsuki`, buttonText: {displayText: '‚≠î CONFIRMAR ‚≠î'}, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: infootsu(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)}
break

case 'akatsuk': {
akatsu = ["https://youtu.be/c1ZgCnPBvUI",
"https://youtu.be/2cUoHJvqMfw",
"https://youtu.be/QE-dsJ5zB_0",
"https://youtu.be/-TbM-7dgjTo"]
logomenu = [
"https://telegra.ph/file/fca1430cb82e66fa32f7e.jpg" ]
bundak = akatsu[Math.floor(Math.random() * akatsu.length)]
menulogo = logomenu[Math.floor(Math.random() * logomenu.length)]
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
logomenub = await getBuffer(menulogo)
let buttons = [
{buttonId: `${prefix}rgclans`, buttonText: {displayText: '‚≠î OUTROS ‚≠î'}, type: 1},
{buttonId: `${prefix}akatsuki`, buttonText: {displayText: '‚≠î CONFIRMAR ‚≠î'}, type: 2}
]
let buttonMessage = {
document: fs.readFileSync('./logos/destiny.pptx'), mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', fileName: `Ol√° ${pushname}`,
jpegThumbnail: logomenub,
fileLength: 99999999999999,
caption: infoakatsu(prefix),
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: logomenub,
sourceUrl: `${bundak}`,
mediaUrl: `${bundak}`,
}}}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)}
break

//==============Clans ü•ã

case 'rgclans':
 sections = [
    {
	title: `CLANS RPG`,
	rows: [
  	   {title: "akatsuki", rowId: `${prefix}akatsuk`},
	   {title: "otsutsuki", rowId: `${prefix}otsutsuk`},
	   {title: "uzumaki", rowId: `${prefix}uzumak`},
	   {title: "hyuuga", rowId: `${prefix}hyuug`},
	   {title: "uchiha", rowId: `${prefix}uchih`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer se cadastra?',
  footer: 'Selecione uma das guildas abaixo.',
  title: `Ol√° ${pushname}`,
  buttonText: "Clique",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'akatsuki':
case 'hyuuga':
case 'otsutsuki':
case 'uchiha':
case 'uzumaki':
if (clanId(sender) == undefined){
var i = dataclan.indexOf(command)
guildas[i].id.push(sender)
fs.writeFileSync(guildasdir, JSON.stringify(guildas, null, 2) + '\n')
reply('seu cadastro foi conclu√≠do')
} else {
reply('Vc esta cadastrado em: ' + clanId(sender))
}
break

case 'left':
if (clanId(sender) == undefined) return reply('Vc n√£o pertence a nenhum clan')
var i = clanPs(sender)
guildas[i].id.splice(sender)
fs.writeFileSync(guildasdir, JSON.stringify(guildas, null, 2) + '\n')
reply('Saindo do clan')
break

case 'clan':
if (!args.join(' ')) return reply('Cade o clan?')
texting = args.join(' ')
var i = dataclan.indexOf(texting)
if (guildas[i].id.length < 1) return reply ('N√£o a ningu√©m neste clan')
wew = guildas[i].id.toString()
wew1 = wew.replace(/@s.whatsapp.net/g, "")
jet = `@${wew1.replace(/,/g, "\n@")}`
tenks = `
Clan *${texting}*

Level = ${levelclanId(texting)}

Ataques = ${attacksclanId(texting)}

Quantidade de Membros = ${guildas[i].id.length}

${jet}`
destiny.sendMessage(from, {text: tenks, mentions: guildas[i].id})
break

case 'battle':
if (clanId(sender) == undefined) return reply('Vc n√£o pertence a nenhum clan')
if (!args.join(' ')) return reply('Batalhar com quem?')
bat = Math.floor(Math.random() * 100) + 1
clan1 = args.join(' ')
clan2 = clanId(sender)
if (clan1 == clan2) return reply ('N√£o pode batalhar com si mesmo')
var i = dataclan.indexOf(clan1)
if (guildas[i].id.length < 1) return reply ('N√£o a ningu√©m neste clan')
battle = [
  `https://telegra.ph/file/2e79a8c86cc1e201a6e8f.mp4`,
  `https://telegra.ph/file/d0aff5622eeee9fb2937c.mp4`,
  `https://telegra.ph/file/c275cc1c5d6e3cf6285f0.mp4`,
  `https://telegra.ph/file/6728fdf0ebabda60004aa.mp4`,
  `https://telegra.ph/file/5e28566a5ec5c8c768290.mp4`,
  `https://telegra.ph/file/654ed89b663f29539252b.mp4`,
  `https://telegra.ph/file/73610a8921f8a880f5e85.mp4`,
  `https://telegra.ph/file/c166578590f3dbd0c1585.mp4`]
reply(`${pushname} esta desafiando ${clan1}`)
await sleep(5000)
if (bat > 50){
txt = `vc ganhou`
clanLevel(clan2, 1000)
clanAttacks(clan2, 1)
}
if (bat <= 50){
txt = `vc perdeu`
clanLevel(clan1, 1000)
clanAttacks(clan1, 1)
}
ravideo = battle[Math.floor(Math.random() * battle.length)]
sendBvid(from, ravideo, txt, '', [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: ``}}], selo)
break

case 'resetclan':
a = [
{
clan: "akatsuki",
level: 0,
attacks: 0,
id: []
},
{
clan: "hyuuga",
level: 0,
attacks: 0,
id: []
},
{
clan: "otsutsuki",
level: 0,
attacks: 0,
id: []
},
{
clan: "uchiha",
level: 0,
attacks: 0,
id: []
},
{
clan: "uzumaki",
level: 0,
attacks: 0,
id: []
}
]
fs.writeFileSync(guildasdir, JSON.stringify(a, null, 2) + '\n')
break


case 'addautorm':
case 'addautoban':
case 'listanegra':  
if (!isGroupAdmins && !SoDono) return reply('Precisa ser Dono')
if (args.length < 1) return reply('Cade o n√∫mero?')
var ind = dbids.indexOf(from)
if(isAdeusCara) {
listng = q.replace(new RegExp("[()+-/ +/]", "gi"), "")  
var numind = adeuscara[ind].number.indexOf(listng)
if(numind >= 0) return reply('*Esse N√∫mero ja esta incluso*')
adeuscara[ind].number.push(listng)
} else {
listng = q.replace(new RegExp("[()+-/ +/]", "gi"), "")    
adeuscara.push({
groupId: from,
actived: false,
number: [listng]
})
}
fs.writeFileSync('./datab/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`*N√∫mero adicionado a lista de autoban*`)
break

case 'delremover':
case 'delautorm':  
case 'delautoban': 
case 'tirardalista':  
if (!isGroup) return reply(enviar.msg.adm)
if (!isGroupAdmins && !SoDono) return reply('Precisa ser Dono')
if (args.length < 1) return reply('Diga o numero sem espa√ßo, + ou tra√ßo')
if (isNaN(args[0])) return reply('Diga o numero sem espa√ßo, + ou tra√ßo')
var ind = dbids.indexOf(from)
if(!isAdeusCara) return reply('*Nenhum N√∫mero n√£o foi adicionado*')
var numind = adeuscara[ind].number.indexOf(args[0])
if(numind < 0) return reply('*Esse n√∫mero n√£o est√° incluso*')
adeuscara[ind].number.splice(numind, 1)
fs.writeFileSync('./datab/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`*N√∫mero removido a lista de autoban*`)
break

case 'banghost':
case 'banghosts':  
if(!SoDono && !isnit) return reply("COMANDO DESATIVADO POR QUEST√ïES DE SEGURAN√áA, PODE CAUSAR BANIMENTO NO N√öMERO DO BOT.")
if(!isGroup) return reply(enviar.msg.grupo)
if(groupIdscount.indexOf(from) >= 0) {
for(let obj of groupMembers) {
if(numbersIds.indexOf(obj.id) >=0) { 
var indnum = numbersIds.indexOf(obj.id)
if(countMessage[ind].numbers[indnum].messages <= args[0]) {
if(groupAdmins.includes(obj.id)) {
mentions(`@${obj.id} ta liberado da inspe√ß√£o por ser admin`, [obj.id], true)
} else {
destiny.groupParticipantsUpdate(from, [obj.id], 'remove')
}
}
} else {
if(groupAdmins.includes(obj.id)) {
mentions(`@${obj.id} ta liberado da inspe√ß√£o por ser admin`, [obj.id], true)
} else {
destiny.groupParticipantsUpdate(from, [obj.id], 'remove')
}
}
}
}
break

case 'correio':
txt = body.slice(10)
txtt = args.join(' ')
txt1 = txtt.split("/")[0];
txt2 = txtt.split("/")[1];
if(!txt) return reply('Cade o n√∫mero da pessoa?')
if(!txtt) return reply('Cade a mensagem do correio??')
if(txt.includes("-")) return reply('Tem que ser o n√∫mero junto sem +, e n√£o pode t√° separado da /')
if(txtt.includes("+")) return reply('Tem que ser o n√∫mero junto sem +, e n√£o pode t√° separado da /')
if(!txtt.includes("/")) return reply(`Exemplo: ${prefix}correio 559185841876/Oi Amor, sdds`)
corr = await getBuffer('https://telegra.ph/file/363d89595c923663ac2fb.jpg')
bla = 
`‚îè‚îÅ‚îÅ‚îÄ‚îÄ ‚Ä¢ ‚îÄ‚îÄ‚îÅ‚îÅ
‚îÉ‚îÇ _‚Ä¢¬∞‚Ä¢¬∞‚Ä¢¬∞‚Ä¢¬∞‚Ä¢¬∞‚Ä¢¬∞‚Ä¢·çù‚Éü‚úâÔ∏èñ•®_
‚îÉ‚îÇ *De:* ${pushname}
‚îÉ‚îÇ *Para:* ${txt1}
‚î£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ
‚î£‚Ä¢‚ù≤ Msg:\n_*${txt2}*_
‚îó‚îÅ‚îÅ‚îÄ‚îÄ ‚Ä¢ ‚îÄ‚îÄ‚îÅ‚îÅ`
destiny.sendMessage(`${txt1}@s.whatsapp.net`, {image: corr, caption: bla}, {quoted: selo})
await sleep(3000)
reply("Correio Enviado")
break

case 'nome-bot':
if (!SoDono  && !isnit && !info.key.fromMe) return reply(enviar.msg.donosmt)  
NomeDoBot = args.join(" ") 
setting.NomeDoBot = NomeDoBot
fs.writeFileSync('./dono/settings.json', JSON.stringify(setting, null, '\t'))
reply(`O nome do seu bot foi alterado com sucesso para : ${setting.NomeDoBot}`)
break

case 'nick-dono':
if (!SoDono  && !isnit && !info.key.fromMe) return reply(enviar.msg.donosmt)  
NickDono = args.join(" ")
setting.NickDono = NickDono
fs.writeFileSync('./dono/settings.json', JSON.stringify(setting, null, '\t'))
reply(`O Nick Do Dono foi configurado para : ${setting.NickDono}`)
break

case 'numero-dono':
if (!SoDono && !isnit && !info.key.fromMe) return reply(enviar.msg.donosmt)  
numerodono = args[0]
setting.numerodono = numerodono
fs.writeFileSync('./dono/settings.json', JSON.stringify(setting, null, '\t'))
reply(`O n√∫mero dono foi configurado com sucesso para : ${setting.numerodono}`)
break

case 'prefixo-bot': case 'setprefix':
if (args.length < 1) return
if (!SoDono  && !isnit && !info.key.fromMe) return reply(enviar.msg.donosmt)
prefix = args[0]
setting.prefix = prefix
fs.writeFileSync('./dono/settings.json', JSON.stringify(setting, null, '\t'))
reply(`O prefixo foi alterado com sucesso para: ${setting.prefix}`)
break

case 'fotomenu':
case 'fundomenu':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if(!isQuotedImage) return reply("Marque uma imagem")
reply('Voc√™ deve marcar uma imagem 2 vez com esse comando..')
if ((isMedia && !info.message.videoMessage || isQuotedImage || isQuotedVideo ) && args.length == 0) {
boij = isQuotedImage ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info
imagem = await downloadContentFromMessage(boij, 'image')
owgi = Buffer.from([])
for await(const send of imagem) { owgi = Buffer.concat( [ owgi, send ] ) }
res = await upload(owgi)
logoslink.logo = logo
logo = res
fs.writeFileSync('./logos/logos.json', JSON.stringify(logoslink, null, '\t'))
reply(`A foto do menu foi alterada com sucesso para: ${logo}`)
} else {
reply(`Mande uma imagem/v√≠deo com a legenda ${prefix + command}`)
}
break

case 'setprefixs':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
prefix = args[0]
setting.prefix = prefix
fs.writeFileSync('./dono/settings.json', JSON.stringify(setting, null, '\t'))
reply(`O prefixo foi alterado com sucesso para: ${prefix}`)
break

case 'nomegp':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
await destiny.groupUpdateSubject(from, `${body.slice(9)}`)
await destiny.sendMessage(from, {text: 'Sucesso, alterou o nome do grupo'}, {quoted: info})
break

case 'fotobot':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (!isQuotedImage) return reply(`Envie fotos com legendas ${prefix}fotobot ou tags de imagem que j√° foram enviadas`)
buff = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage, 'image')
await destiny.updateProfilePicture(botNumber, buff)
reply('Obrigado pelo novo perfilüòó')
break

case 'clonar':
if (!SoDono  && !isnit && !issupre && !ischyt) return reply('Voc√™ quem √© o propriet√°rio?')
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('Marque a pessoa que voc√™ quer clonar\n\n*EXEMPLO:* clone @')
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Tag cvk')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid[0]
let { jid, id, notify } = groupMembers.find(x => x.id === mentioned)
try {
pp = await destiny.profilePictureUrl(id)
buffer = await getBuffer(pp)
destiny.updateProfilePicture(botNumber, buffer)
mentions(`Foto do perfil atualizada com sucesso, usando a foto do perfil @${id.split('@')[0]}`, [id], true)
} catch (e) {
reply('Putz, deu erro, a pessoa deve estar sem foto üòî')
}
break

case 'leveling':
if (!isGroup) return reply('S√≥ em Grupo')
if (!isGroupAdmins) return reply('Voc√™ precisa ser adm')
if (args.length < 1) return reply('Ative pressione 1, Desativar pressione 0')
if (Number(args[0]) === 1) {
if (isLevelingOn) return reply('*O recurso de n√≠vel j√° estava ativo antes*')
_leveling.push(from)
fs.writeFileSync('./datab/usuarios/leveling.json', JSON.stringify(_leveling))
reply(enviar.levelon) 
} else if (Number(args[0]) === 0) {
if (!isLevelingOn) return reply(`O recurso de level j√° est√° Desativado neste grupo.`)
_leveling.splice(from, 1)
fs.writeFileSync('./datab/usuarios/leveling.json', JSON.stringify(_leveling))
reply(enviar.leveloff)
} else {
reply('„Äå* Adicionar par√¢metro 1 ou 0 ')
}
break

case 'ganharlevel':
if(!SoDono) return reply("Voc√™ n√£o √© dono para utilizar este comando...")
addLevelingLevel(sender, 10)
reply("Ol√° chefe, foi adicionado 10 Level para voc√™ üôÇ")
break

case 'ganharxp':
if(!SoDono) return reply("Voc√™ n√£o √© dono para utilizar este comando...")  
addLevelingXp(sender, 5000)
reply("Foi adicionado 5000 mil de XP para voc√™ üôÇ")
break

case 'level':
if (!isLevelingOn) return reply(`*O recurso de level est√° Desativado, para ativar consulte algum adm e mande ele digitar : ${prefix}leveling 1`)
if (!isGroup) return reply(enviar.msg.grupo)
const userLevel = getLevelingLevel(sender)
const userXp = getLevelingXp(sender)
if (userLevel === undefined && userXp === undefined) return reply(enviar.levelnol)
sem = sender.replace('@s.whatsapp.net','')
                resul = `     
            ‚ó™ *REGISTRO* ‚ó™                                                                  
            
  ‚îú‚îÄ ‚ùè *NICK* : ${pushname}
  ‚îú‚îÄ ‚ùè *N√öMERO* : ${sender.split("@")[0]}
  ‚îú‚îÄ ‚ùè *PATENTE* : ${patt}               
  ‚îú‚îÄ ‚ùè *XP* : ${userXp}
  ‚îî‚îÄ ‚ùè *LEVEL* : ${userLevel}`
await destiny.sendMessage(from, {text: resul}, {quoted: info})
.catch(async (err) => {
console.error(err)
await reply(`Error!\n${err}`)
})
break

case 'bcgp':
case 'bcgc':  
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('.......')
fgp = await groupMembers
var nomor = info.participant
if (isMedia && !info.message.videoMessage || isQuotedImage) {
encmedia = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage, 'image')
for (let _ of fgp) {
destiny.sendMessage(_.id, {image: buff}, {caption: `*„Äå TRANSMISS√ÉO „Äç*\n\nGrupo: ${groupName}\n N√∫mero: wa.me/${(sender.split('@')[0])}\nMensagem : ${body.slice(6)}`})
}
reply('')
} else {
for (let _ of fgp) {
sendMess(_.id, `*„Äå TRANSMISS√ÉO „Äç*\n\nGrupo : ${groupName}\n N√∫mero : wa.me/${(sender.split('@')[0])}\nMensagem : ${body.slice(6)}`)
}
reply('Grupo de transmiss√£o bem-sucedido')
} 
break

case 'dono1':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
dono1 = body.slice(8)
nescessario.dono1 = dono1
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`Agora contem um segundo dono(a) alterado com sucesso para: ${dono1}`)
break

case 'dono2':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
dono2 = body.slice(8)
nescessario.dono2 = dono2
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`Agora contem um segundo dono(a) alterado com sucesso para: ${dono2}`)
break

case 'dono3':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
dono3 = body.slice(8)
nescessario.dono3 = dono3
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`Agora contem um terceiro dono(a) alterado com sucesso para: ${dono3}`)
break

case 'dono4':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
dono4 = body.slice(8)
nescessario.dono4 = dono4
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`Agora contem um quarto dono(a) alterado com sucesso para: ${dono4}`)
break

case 'dono5':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
dono5 = body.slice(8)
nescessario.dono5 = dono5
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`Agora contem um quinto dono(a) alterado com sucesso para: ${dono5}`)
break

case 'dono6':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
dono6 = body.slice(8)
nescessario.dono6 = dono6
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`Agora contem um quinto dono(a) alterado com sucesso para: ${dono6}`)
break

case 'getquoted':
reply(JSON.stringify(info.message.extendedTextMessage.contextInfo, null, 3))
break

case 'donos':
p = `[ Lista de donos do bot ${setting.NomeDoBot} ] 

Dono Oficial do bot: ${setting.numerodono}

- [ 1 ] ${nescessario.dono1}\n- [ 2 ] ${nescessario.dono2}\n- [ 3 ] ${nescessario.dono3}\n- [ 4 ] ${nescessario.dono4}\n- [ 5 ] ${nescessario.dono5}\n- [ 6 ] ${nescessario.dono6} `
reply(p)
break

case 'online':   
case 'onlines':  //case by: ·¨äÕ°Õúùë©ùë∞ùë¨ùë≥ùíÅùë∞ùëµùëØùë∂.ùë¨ùëøùë¨·µí·∂†·∂ú
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono && !isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
let ido = args && /\d+\-\d+@g.us/.test(args[0]) ? args[0] : from
let online = [...Object.keys(store.presences[ido]), destiny.user.id]
destiny.sendMessage(from, {text: 'Pessoas online do gp:\n\n' + online.map(v => '‚Ä¢ @' + v.replace(/@.+/, '')).join`\n`}, {quoted: info})
break

case 'admins':
case 'listadmins':  
case 'listaadmins':   
if (!isGroup) return reply(enviar.msg.grupo)
ytb = `Lista de admins do grupo *${groupMetadata.subject}*\nTotal : ${groupAdmins.length}\n\n`
no = 0
for (let admon of groupAdmins) {
no += 1
ytb += `[${no.toString()}] @${admon.split('@')[0]}\n`
}
mentions(ytb, groupAdmins, true)
break

case 'criartabela': case 'criartbl': case 'criartab':
if(!isGroupAdmins || !SoDono) return reply("S√≥ adm ou dono pode utilizar este comando.") 
msgz = args.join(" ")

msgtmpol = moment.tz('America/Sao_Paulo').format('HH:mm:ss');

datinhaofc = moment.tz('America/Sao_Paulo').format('DD/MM/YY');

var blarpty = {
Horario: msgtmpol, 
Data: datinhaofc, 
Tabela: msgz
}

if(!fs.existsSync(`./func/tabela/tabela-${from}.json`)) {
fs.writeFileSync(`./func/tabela/tabela-${from}.json`,
JSON.stringify(blarpty, null, 2));
} else {
if (fs.existsSync("./func/tabela/tabela-" + from + ".json")) {
fs.unlinkSync("./func/tabela/tabela-" + from + ".json");
fs.writeFileSync(`./func/tabela/tabela-${from}.json`,
JSON.stringify(blarpty, null, 2));
}
}
reply(`Tabela do grupo foi criada com sucesso..`)
break

case 'tabelagp': case 'tabeladogp': case 'tabelinha': 
if(!fs.existsSync(`./func/tabela/tabela-${from}.json`)) {
reply(`Cade a tabela, cria ela com o comando\nExemplo : ${prefix}criartabela lindas do grupo : e etc ..`)
}
const tabelagpofc = JSON.parse(fs.readFileSync(`./func/tabela/tabela-${from}.json`)); 

blity = `- ‚è∞ Hor√°rio que criou a Tabela : ${tabelagpofc.Horario}\n\n- üóìÔ∏è Data que criou a Tabela : ${tabelagpofc.Data}\n\n - Tabela : ${tabelagpofc.Tabela}`

destiny.sendMessage(from, {text: blity}, {quoted: info})
break

case 'alugado': case 'tempodesair': case 'tempo-aluguel': case 'aluguel': 
if(!SoDono && !info.key.fromMe) return 
txt = args.join(" ")
if(!txt.includes("/")) return reply(`O formato da data √© assim : 03/04/22`)
msgz = args.join(" ").replace(" ", "")

datinhaofc = moment.tz('America/Sao_Paulo').format('DD/MM/YY');

var blarpty = {
Data_que_alugou: datinhaofc, 
Data_de_sair: msgz
}

if(!fs.existsSync(`./func/sairgp/sairgp-${from}.json`)) {
fs.writeFileSync(`./func/sairgp/sairgp-${from}.json`,
JSON.stringify(blarpty, null, 2));
} else {
if (fs.existsSync("./func/sairgp/sairgp-" + from + ".json")) {
fs.unlinkSync("./func/sairgp/sairgp-" + from + ".json");
fs.writeFileSync(`./func/sairgp/sairgp-${from}.json`,
JSON.stringify(blarpty, null, 2));
}
}
reply(`Tempo de quando vai expirar o aluguel do bot e irei sair na data exata..`)
break

case 'ausente': case 'off': case 'afk':
if(!SoDono) return reply("Comando especial para o dono.")
msgtmp = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
nmrdnofc = setting.numerodono.replace(new RegExp("[()+-/ +/]", "gi"), "")
msgz = args.join(" ")

var catmsgaus = {
Ausente_Desde: msgtmp, 
Motivo_Da_Aus√™ncia: msgz
}

if(!fs.existsSync(`./func/afk/afk-@${nmrdnofc}.json`)) {
fs.writeFileSync(`./func/afk/afk-@${nmrdnofc}.json`,
JSON.stringify(catmsgaus, null, 2));
} else {
if (fs.existsSync("./func/afk/afk-@" + nmrdnofc + ".json")) {
fs.unlinkSync("./func/afk/afk-@" + nmrdnofc + ".json");
fs.writeFileSync(`./func/afk/afk-@${nmrdnofc}.json`,
JSON.stringify(catmsgaus, null, 2));
}
}
reply(`Mensagem de aus√™ncia criada com sucesso...`)
break

case 'ativo': case 'on': case 'voltei':
if(!SoDono) return reply("Comando especial para o dono.")
nmrdnofc = setting.numerodono.replace(new RegExp("[()+-/ +/]", "gi"), "")
if (fs.existsSync("./func/afk/afk-@" + nmrdnofc + ".json")) {  
fs.unlinkSync("./func/afk/afk-@" + nmrdnofc + ".json");
reply("Bem vindo de volta, agora voc√™ est√° online üôÇ")
} else {
reply("Voc√™ n√£o registrou nenhuma mensagem de aus√™ncia...")
}
break

case 'modos':
  if(!isGroup) return reply(`[‚ùó] SOMENTE EM GRUPOS`)
if(!isGroupAdmins) return reply(`[‚ùó] VC N√ÉO E ADM!`)
if(!isBotGroupAdmins) return reply(`[‚ùó] O BOT PRECISA SER ADMIN`)
vidtst = `https://telegra.ph/file/e959bb3fb76f451cc5ef8.mp4`
sendBvid(from, vidtst, `·¨äÕ°Õú¬†Ol√° ${pushname} Voc√™ Deseja ser oque no Grupo: ${groupName}`, NomeDoBot, [{index: 2, quickReplyButton: {displayText: 'üìÇSER ADMüìÇ', id: `${prefix}seradm`}}, {index: 2, quickReplyButton: {displayText: '‚ùåSER MEMBRO‚ùå', id: `${prefix}sermembro`}}], info)
break

case 'seradm':
if (!SoDono) return reply (`somente o meu mestre...`)
horaluffy = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
dataluffy = moment.tz('America/Sao_Paulo').format('DD/MM/YY');
imgep = `https://telegra.ph/file/4f0406b722b9b5de6628f.jpg`
zk = `
‚îå‚óà ‚îÅ‚îÅ‚îÅ‚îÅ‚â™ ‚∏ô ‚â´‚îÅ‚îÅ‚îÅ‚îÅ ‚óà‚îê
‚îÇ Agora Meu Mestre √© 
‚îÇ Adm Neste Grupo
‚îÇ ‚Ä¢ Grupo: ${groupName}
‚îÇ ‚Ä¢ Data: ${dataluffy}
‚îÇ ‚Ä¢ Hora: ${horaluffy}
‚îî‚óà ‚îÅ‚îÅ‚îÅ‚îÅ‚â™ ‚∏ô ‚â´‚îÅ‚îÅ‚îÅ‚îÅ ‚óà‚îò`
destiny.groupParticipantsUpdate(from, [`${setting.numerodono}@s.whatsapp.net`], "promote")
await sleep (2000)
sendBimg(from, imgep, zk, NomeDoBot + ' ¬©',
[{buttonId:`kk`, buttonText: {displayText: `Ok ${NomeDoBot}`}, type: 1}], selo)
break

case 'sermembro': {
if (!isGroupAdmins) return reply (`Somente adm, vc ja √© membro comum kkk`)
horaluffy = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
dataluffy = moment.tz('America/Sao_Paulo').format('DD/MM/YY');
epd = `https://telegra.ph/file/396f06f642763a19396e9.jpg`
txt = `‚îå‚óà ‚îÅ‚îÅ‚îÅ‚îÅ‚â™ ‚∏ô ‚â´‚îÅ‚îÅ‚îÅ‚îÅ ‚óà‚îê
‚îÇ ‚ï≠O @${sender.split("@")[0]} 
‚îÇ ‚ï∞Agora √â Membro Comum
‚îÇ ‚Ä¢ Grupo: ${groupName}
‚îÇ ‚Ä¢ Data: ${dataluffy}
‚îÇ ‚Ä¢ Hora: ${horaluffy}
‚îî‚óà ‚îÅ‚îÅ‚îÅ‚îÅ‚â™ ‚∏ô ‚â´‚îÅ‚îÅ‚îÅ‚îÅ ‚óà‚îò`
destiny.groupParticipantsUpdate(from, [`@${sender.split("@")[0]}@s.whatsapp.net`], "demote")
await sleep (2000)
sendBimg(from, epd, txt, NomeDoBot + ' ¬©',
[{buttonId:`kk`, buttonText: {displayText: `Ok ${NomeDoBot}`}, type: 1}], selo)
}
break


case 'registro':
if(isRG) return reply("Voc√™ ja est√° registrado")
registro.push(sender)
fs.writeFileSync('./datab/usuarios/registro.json', JSON.stringify(registro, null, 2))
sendBtext(from, `Parab√©ns Pelo Registro, Agora Voc√™ Pode Usar E Usufruir Meus Comandos`, `Veja Meu Menu`, [{buttonId: `${prefix}menu`, buttonText: {displayText: `Menu`}, type: 1}], selo)
break

case 'addpremium':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return 
if (!budy.includes("@55")) {
mentioned = info.message.extendedTextMessage.contextInfo.participant 
bla = premium.includes(mentioned)
if(bla) return reply("*Este n√∫mero j√° est√° incluso..*")  
premium.push(`${mentioned}`)
fs.writeFileSync('./datab/usuarios/premium.json', JSON.stringify(premium))
destiny.sendMessage(from, {text: `üëë@${mentioned.split("@")[0]} foi adicionado √† lista de usu√°rios premium com sucessoüëë`}, {quoted: info})  
} else { 
mentioned = args.join(" ").replace("@", "") + "@s.whatsapp.net"
bla = premium.includes(mentioned)
if(bla) return reply("*Este n√∫mero j√° est√° incluso..*")  
premium.push(`${mentioned}`)
fs.writeFileSync('./datab/usuarios/premium.json', JSON.stringify(premium))
tedtp = args.join(" ").replace("@", "")
destiny.sendMessage(from, {text: `üëë@${tedtp} foi adicionado √† lista de usu√°rios premium com sucessoüëë`}, {quoted: info})
}
break 

case 'delpremium':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return  reply(enviar.msg.donosmt)
if (!budy.includes("@55")) {
num = info.message.extendedTextMessage.contextInfo.participant
bla = premium.includes(num)
if(!bla) return reply("*Este n√∫mero n√£o est√° incluso na lista premium..*")  
pesquisar = num
processo = premium.indexOf(pesquisar)
while(processo >= 0){
premium.splice(processo, 1)
processo = premium.indexOf(pesquisar)
}
fs.writeFileSync('./datab/usuarios/premium.json', JSON.stringify(premium))
destiny.sendMessage(from, {text: ` ${num.split("@")[0]} foi tirado da lista premium com sucesso..`}, {quoted: info})
} else {
mentioned = args.join(" ").replace("@", "") + "@s.whatsapp.net"
bla = premium.includes(mentioned)
if(!bla) return reply("*Este n√∫mero n√£o est√° incluso na lista premium..*")  
pesquisar = mentioned
processo = premium.indexOf(pesquisar)
while(processo >= 0){
premium.splice(processo, 1)
processo = premium.indexOf(pesquisar)
}
fs.writeFileSync('./datab/usuarios/premium.json', JSON.stringify(premium))
destiny.sendMessage(from, {text: ` ${bla.split("@")[0]} foi tirado da lista premium com sucesso..`}, {quoted: info})
}
break

case 'limpar':
if(!isGroup) return reply(enviar.msg.grupo)
if(!isGroupAdmins) return reply(enviar.msg.adm)
cleaned = await getBuffer('https://telegra.ph/file/c193f609caee19ff6ca4b.mp4')
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüóëÔ∏è\n‚ù≤‚ùó‚ù≥ *L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä* ‚úÖ`
destiny.sendMessage(from, {video: cleaned, caption: clear, gifPlayback: true, templateButtons: [{index: 2, quickReplyButton: {displayText: `Limpar Mais üóëÔ∏è`, id: `${prefix + command}`}}]}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
break

case 'clearchat':
case 'limparchat':  
case 'limparmsg':  
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
await destiny.chatModify({ clear: { message: { id: String, fromMe: true } } }, from, [])
reply("Chat limpo")
break

case 'addpalavra':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (args.length < 1) return reply( `Use assim : ${prefix + command} [palavr√£o]. exemplo ${prefix + command} puta`)
const bw = body.slice(12)
palavra.push(bw)
fs.writeFileSync('./datab/grupos/palavras.json', JSON.stringify(palavra))
reply('Palavr√£o adicionado com sucesso!')
await limitAdd(sender)
break

case 'delpalavra':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (args.length < 1) return reply( `Use assim : ${prefix + command} [palavr√£o]. exemplo ${prefix + command} puta`)
let dbw = body.slice(12)
palavra.splice(dbw)
fs.writeFileSync('./datab/grupos/palavras.json', JSON.stringify(palavra))
reply('Palavr√£o removido da lista com sucesso!')
await limitAdd(sender)
break

case 'listapalavr√£o': case 'listapalavra':
case 'listpalavra':
let lbw = `Esta √© a lista de palavr√£o\nTotal : ${palavra.length}\n`
for (let i of palavra) {
lbw += `‚û∏ ${i.replace(palavra)}\n`
}
await reply(lbw)
await limitAdd(sender)
break 

case 'legendabv':  
if(!isGroup) return reply('Este comando s√≥ deve ser utilizado em Grupo.')
if(!isGroupAdmins) return reply(`S√≥ ADM pode utilizar este comando.`)
if(args.length < 1) return reply('*Escreva a mensagem de boas-vindas*')
teks = body.slice(11)
if(isWelcomed) {
var ind = groupIdWelcomed.indexOf(from)
welcome_group[ind].msg = teks
fs.writeFileSync('./datab/grupos/welcomegp.json', JSON.stringify(welcome_group, null, 2) + '\n')
reply('*Mensagem de boas vindas alteradas com sucesso!*')
} else {
var json = {
id: from,
msg: teks
}
welcome_group.push(json)
fs.writeFileSync('./datab/grupos/welcomegp.json', JSON.stringify(welcome_group, null, 2) + '\n')
reply('*Mensagem de boas vindas criada com sucesso!*')
}
break

case 'prefixobv': {
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
destiny = ` `
daftarimg = await getBuffer(ppimg)
let buttons = [
{
buttonId: `${prefix}lista`, 
buttonText: {
displayText: 'INFO/WELCOME'
}, type: 1},
]
let buttonMessage = {
image: { url: ppimg},
caption: destiny,
footer: prefixokbv(prefix),
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply: {
title: ``,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: await getBuffer("https://telegra.ph/file/9a2c478d5e056189d7a50.jpg"),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`,
}}
}
await destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break





case 'legendasaiu':
if(!isGroup) return reply(`S√≥ em grupo pode utilizar este comando.`)
if(!isGroupAdmins) return reply(`S√≥ ADM pode utilizar este tipo de Comando.`)
if(args.length < 1) return reply('*Escreva a mensagem de sa√≠da*')
teks = body.slice(13)
if(isByed) {
var ind = groupIdBye.indexOf(from)
bye_group[ind].msg = teks
fs.writeFileSync('./datab/grupos/byegp.json', JSON.stringify(bye_group, null, 2) + '\n')
reply('*Mensagem de sa√≠da alteradas com sucesso!*')
} else {
var json = {
id: from,
msg: teks
}
bye_group.push(json)
fs.writeFileSync('./datab/grupos/byegp.json', JSON.stringify(bye_group, null, 2) + '\n')
reply('*Mensagem de sa√≠da criada com sucesso!*')
}
break

case 'legendabv2':  
if(!isGroup) return reply('Este comando s√≥ deve ser utilizado em Grupo.')
if(!isGroupAdmins) return reply(`S√≥ ADM pode utilizar este comando.`)
if(args.length < 1) return reply('*Escreva a mensagem de boas-vindas*')
teks = body.slice(12)
if(isWelcomed2) {
var ind = groupIdWelcomed2.indexOf(from)
welcome_group2[ind].msg = teks
fs.writeFileSync('./datab/grupos/welcomegp2.json', JSON.stringify(welcome_group2, null, 2) + '\n')
reply('*Mensagem de boas vindas2 alteradas com sucesso!*')
} else {
var json = {
id: from,
msg: teks
}
welcome_group2.push(json)
fs.writeFileSync('./datab/grupos/welcomegp2.json', JSON.stringify(welcome_group2, null, 2) + '\n')
reply('*Mensagem de boas vindas2 criada com sucesso!*')
}
break

case 'legendasaiu2':
if(!isGroup) return reply(`S√≥ em grupo pode utilizar este comando.`)
if(!isGroupAdmins) return reply(`S√≥ ADM pode utilizar este tipo de Comando.`)
if(args.length < 1) return reply('*Escreva a mensagem de sa√≠da*')
teks = body.slice(14)
if(isByed) {
var ind = groupIdBye.indexOf(from)
bye_group2[ind].msg = teks
fs.writeFileSync('./datab/grupos/byegp2.json', JSON.stringify(bye_group2, null, 2) + '\n')
reply('*Mensagem de sa√≠da2 alteradas com sucesso!*')
} else {
var json = {
id: from,
msg: teks
}
bye_group2.push(json)
fs.writeFileSync('./datab/grupos/byegp2.json', JSON.stringify(bye_group2, null, 2) + '\n')
reply('*Mensagem de sa√≠da2 criada com sucesso!*')
}
break

case 'deletar':  case 'apagar':  case 'delete':   case 'del':  case 'd':
if (!isGroup)return reply(enviar.msg.grupo)
if (!SoDono && !isGroupAdmins && !isPremium) return reply(enviar.msg.adm)
destiny.sendMessage(from, { delete: { remoteJid: from, fromMe: true, id: info.message.extendedTextMessage.contextInfo.stanzaId, participant: sender }})
.catch((err) => { 
console.log(err)
reply('A mensagem n√£o foi enviado pelo bot...')
})
break

case 'delmsg':
 if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque uma mensagem do alvo!')
var a = info.message.extendedTextMessage.contextInfo
var rafa = {
remoteJid: from,
fromMe: info.key.fromMe,
id: a.stanzaId,
participant: a.participant
}
destiny.sendMessage(from, { delete: rafa }).then(() => destiny.sendMessage(from, { delete: info.key }))
break

case 'fundobemvindo':
case 'fundobv':  
if (!SoDono  && !isnit && !info.key.fromMe) return reply(enviar.msg.donosmt)
if(!isQuotedImage) return reply("Marque uma imagem")
reply('Voc√™ deve marcar uma imagem com esse comando, se n√£o for de primeira, tente novamente, ok? ')
if ((isMedia && !info.message.videoMessage || isQuotedImage || isQuotedVideo ) && args.length == 0) {
boij = isQuotedImage || isQuotedVideo ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info
owgi = await getFileBuffer(boij, 'image')
res = await upload(owgi)
fundo1 = res
nescessario.fundo1 = fundo1
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`A imagem de bem vindo foi alterado com sucesso para: ${fundo1}`)
}
break

case 'fundosaiu':
if (!SoDono  && !isnit && !info.key.fromMe) return reply(enviar.msg.donosmt)
if(!isQuotedImage) return reply("Marque uma imagem")
reply('Voc√™ deve marcar uma imagem com esse comando, se n√£o for de primeira, tente novamente, ok? ')
if ((isMedia && !info.message.videoMessage || isQuotedImage || isQuotedVideo ) && args.length == 0) {
boij = isQuotedImage || isQuotedVideo ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info
owgi = await getFileBuffer(boij, 'image')
res = await upload(owgi)
fundo2 = res
nescessario.fundo2 = fundo2
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`A imagem de saiu foi alterado com sucesso para: ${fundo2}`)
}
break

case 'antiligar':
case 'antiligacao':  
case 'antiliga√ß√£o':  
try {
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAnticall) return reply('Ja esta ativo')
anticall.push('Ativado')
fs.writeFileSync('./datab/usuarios/anticall.json', JSON.stringify(anticall))
reply('Ativou com sucesso o recurso de antiliga√ß√£o no bot‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAnticall) return reply('Ja esta Desativado')  
fs.writeFileSync('./datab/usuarios/anticall.json', JSON.stringify([]))
reply('Desativou com sucesso o recurso de antiliga√ß√£o no bot‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
} catch {
reply('Falha ao ativar')
}
break

case 'antipvon':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe ) return reply('Apenas Meu Dono')
if (banChats) return await reply('j√° est√° ativo o modo antipv')
banChats = true
nescessario.banChats = banChats
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
await destiny.sendMessage(from, {text: "*Sucesso alterado para modo antipv, pv n√£o poder√° ser utilizado"})
break

case 'antipvoff':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return await reply('Apenas meu dono o owner')
if (!banChats) return await reply('Nao estava ativado ainda')
banChats = false
nescessario.banChats = banChats
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
await destiny.sendMessage(from, {text: "*Sucesso modo antipv desligado, pv liberado."})
break

case 'antipv':
if (!SoDono) return reply(`Apenas dono pode ativar/desativar essa fun√ß√£o..`)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAntiPv) return reply('Ja esta ativo')
antipv.push('Ativado')
fs.writeFileSync('./datab/usuarios/antipv.json', JSON.stringify(antipv))
reply('üåÄ Ativou com sucesso o recurso de Anti Privado üìù')
} else if (Number(args[0]) === 0) {
if (!isAntiPv) return reply('Ja esta Desativado')
pesquisar = 'Ativado'
processo = antipv.indexOf(pesquisar)
while(processo >= 0){
antipv.splice(processo, 1)
processo = antipv.indexOf(pesquisar)
}
fs.writeFileSync('./datab/usuarios/antipv.json', JSON.stringify(welkom))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso De ANTIPV‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'block':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return  reply(enviar.msg.donosmt)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return 
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
ban.push(`${mentioned}`)
fs.writeFileSync('./datab/usuarios/banned.json', JSON.stringify(ban))
susp = `üö´@${mentioned[0].split('@')[0]} foi banido e n√£o poder√° mais usar os comandos do botüö´`
mentions(`${susp}`, mentioned, true)   
break

case 'antispa':
if(!isGroup) return reply(enviar.msg.grupo)
if(!isGroupAdmins) return reply(enviar.msg.adm)
if(!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if(args[0] === 'on') {
Banspam.push(from)
fs.writeFileSync('./datab/grupos/antispam.json', JSON.stringify(Banspam))
if (Banspam.includes(from)) return reply('anti-spam ativado, caso algu√©m flode msg, ser√° removido imediatamente')
reply('ativo com sucesso')
} else if (args[0] === 'off') {
if (!Banspam.includes(from)) return reply('anti-spam desativado')
reply('anti-spam desativado')
Banspam.splice(from, 1)
fs.writeFileSync('./datab/grupos/antispam.json', JSON.stringify(Banspam))
} else {
reply('ON ou OFF')
}
break


case 'unblock':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return  reply(enviar.msg.donosmt)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return 
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
ban.splice(`${mentioned}`)
fs.writeFileSync('./datab/usuarios/banned.json', JSON.stringify(ban))
susp = `‚ùé@${mentioned[0].split('@')[0]} foi desbanido e poder√° novamente usar os comandos do bot‚ùé`
mentions(`${susp}`, mentioned, true)   
break

case 'blocklist': {
jrc = `‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ ‚Ä¢ ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚îÅ\n`
jrck = '[ü©∏] _*ESTA √â A LISTA DE N√öMEROS*_\n_*BLOQUEADOS*_'
for (let wtfk of ban) {
jrc += `‚îÉ ‚ï≠√ó Wa.me/${wtfk.split('@')[0]}\n`
jrc += `‚îÉ ‚ï∞√ó „Äå ${wtfk.split('@')[0]} „Äç\n‚îÉ        [‚Ä¢‚Ä¢‚Ä¢]\n`
}
jrc += `‚îÉ ‚Ä¢ Total : ${ban.length}\n`
jrc += `‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ ‚Ä¢ ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚îÅ`
let buttons = [
{buttonId: `${prefix}ping`, buttonText: {displayText: '[üìç] PING'}, type: 1},
{buttonId: `${prefix}lista`, buttonText: {displayText: '[üìç] LISTA MENU'}, type: 1}
]
let buttonMessage = {
image: { url: `https://telegra.ph/file/e7487280fff155573ea37.jpg` },
caption: jrck,
footer: jrc,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: `instagram\nSegue La üíØ`,
body: `${NomeDoBot}`,
showAdAttribution: true,
thumbnail: fs.readFileSync('./logos/logo2.jpg'),
mediaType:2,
mediaUrl: ``, 
sourceUrl: `https://www.instagram.com/maysurf__/`
}}
}
destiny.sendMessage(from, buttonMessage, { quoted: selo})}
break

case 'acess':
if (!SoDono && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
teks = body.slice(7)
exec(teks, (err, stdout) => {
if (err) return destiny.sendMessage(from, {text: `root@ALEATORY-BOT:~ ${err}`}, {quoted: info})
if (stdout) {
destiny.sendMessage(from, {text: stdout})
}
})
break

case 'bangp':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (isBanchat) return reply(`Este grupo ja est√° banido`)
bancht.push(from)
fs.writeFileSync('./datab/grupos/banchat.json', JSON.stringify(bancht))
reply(`Grupo banido com sucesso`)
break

case 'unbangp':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
let cur = bancht.indexOf(from)
bancht.splice(cur, 1)
fs.writeFileSync('./datab/grupos/banchat.json', JSON.stringify(bancht))
reply(`Grupo desbanido...`)
break

case 'limitec':
if(!SoDono  && !isnit && !ischyt) return reply(enviar.msg.donosmt)
if (args.length < 1) return
if (!setTimeout && !info.key.fromMe) return reply(enviar.msg.donosmt)
limitefl = args.join(" ")
limitefll.limitefl = limitefl
fs.writeFileSync('./datab/usuarios/flood.json', JSON.stringify(limitefll, null, '\t'))
reply(`${limitefl} foi adicionado como limite de antiflood `)
break

case 'execut':
if(!SoDono  && !isnit && !issupre && !ischyt) return
try{
return eval(`(async() => { ${args.join(' ')}})()`)
}catch (e) {
reply(`${e}`)
}
break

case 'exec':
if(!SoDono  && !isnit && !issupre && !ischyt) return
try{
paramsQuoted = info.message.extendedTextMessage.contextInfo.quotedMessage.conversation || info.message.extendedTextMessage.contextInfo.quotedMessage.extendedTextMessage.text;	
return eval(`${paramsQuoted}`)
console.log(`[EXEC]~> ${paramsQuoted}`)
}catch(e){
reply(e)
}
break

case 'ping': {
 r = (Date.now() / 1000) - info.messageTimestamp
			uptime = process.uptime()
hora1 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
imgping = await getBuffer('https://telegra.ph/file/803cc8b535cd75156c848.jpg')
let buttons = [
{buttonId: `${prefix}menu`, buttonText: {displayText: `[${EmojeG(emojos)}] MENU [${EmojeG(emojos)}]`}, type: 1}
]
text = ` `
let buttonMessage = {
image: imgping,
caption: text,
footer: `[ü•∑] PING DO BOT [ü•∑]

[üåü] Velocidade: ${String(r.toFixed(3))}
[üóì] Data: ${date}
[üï∞] Hora: ${hora1}
[üë§] Usu√°rio: ${pushname}
[üîã] Online: Servidor Youth
[‚è±] Tempo de atividade:\n\n${kyun(uptime)}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
thumbnail: fs.readFileSync('./logos/logo2.jpg'),
mediaType:2,
mediaUrl: ``, 
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, { quoted: selo })
}
break

///////// VOZES

case 'txtvoz':
if(!q) return reply("ùóñùóîùóóùóòÃÇ ùó¢ ùóßùóòùó´ùóßùó¢")
sections = [
¬†¬†¬† {
title: "LISTA DE VOZES",
rows: [
{title: `brasil`, rowId: `${prefix}gtts pt ${q}`, description: ""},
{title: `Africano`, rowId: `${prefix}gtts af ${q}`, description: ""},
	    {title: `Alb√¢nia`, rowId: `${prefix}gtts sq ${q}`, description: ""},
	    {title: `Arabia`, rowId: `${prefix}gtts ar ${q}`, description: ""},
	    {title: `Catalan`, rowId: `${prefix}gtts ca ${q}`, description: ""},
	    {title: `Croatian`, rowId: `${prefix}gtts hr ${q}`, description: ""},
	    {title: `Czech`, rowId: `${prefix}gtts cs ${q}`, description: ""},
	    {title: `Danish`, rowId: `${prefix}gtts da ${q}`, description: ""},
	    {title: `Dutch`, rowId: `${prefix}gtts nl ${q}`, description: ""},
	    {title: `English`, rowId: `${prefix}gtts en ${q}`, description: ""},
	    {title: `Finnish`, rowId: `${prefix}gtts fi ${q}`, description: ""},
	    {title: `French`, rowId: `${prefix}gtts fr ${q}`, description: ""},
	    {title: `German`, rowId: `${prefix}gtts de ${q}`, description: ""},
	    {title: `greek`, rowId: `${prefix}gtts el ${q}`, description: ""},
	    {title: `Hindi`, rowId: `${prefix}gtts hi ${q}`, description: ""},
	    {title: `Hungarian`, rowId: `${prefix}gtts hu ${q}`, description: ""},
	    {title: `Icelandic`, rowId: `${prefix}gtts is ${q}`, description: ""},
	    {title: `Indonesian`, rowId: `${prefix}gtts id ${q}`, description: ""},
	    {title: `Italia`, rowId: `${prefix}gtts it ${q}`, description: ""},
	    {title: `Japanese`, rowId: `${prefix}gtts ja ${q}`, description: ""},
	    {title: `Korean`, rowId: `${prefix}gtts ko ${q}`, description: ""},
	    {title: `Latin`, rowId: `${prefix}gtts la ${q}`, description: ""},
	    {title: `Latvian`, rowId: `${prefix}gtts lv ${q}`, description: ""},
	    {title: `Norwegian`, rowId: `${prefix}gtts no ${q}`, description: ""},
	    {title: `Polish`, rowId: `${prefix}gtts pl ${q}`, description: ""},
	    {title: `Romanian`, rowId: `${prefix}gtts ro ${q}`, description: ""},
	    {title: `Ressian`, rowId: `${prefix}gtts ru ${q}`, description: ""},
	    {title: `Serbian`, rowId: `${prefix}gtts sr ${q}`, description: ""},
	    {title: `Slovak`, rowId: `${prefix}gtts sk ${q}`, description: ""},
	    {title: `Spanish`, rowId: `${prefix}gtts es ${q}`, description: ""},
	    {title: `Swahili`, rowId: `${prefix}gtts sw ${q}`, description: ""},
	    {title: `Swedish`, rowId: `${prefix}gtts sv ${q}`, description: ""},
	    {title: `Tamil`, rowId: `${prefix}gtts ta ${q}`, description: ""},
	    {title: `Thai`, rowId: `${prefix}gtts th ${q}`, description: ""},
	    {title: `turkish`, rowId: `${prefix}gtts tr ${q}`, description: ""},
	    {title: `Vietnamese`, rowId: `${prefix}gtts vi ${q}`, description: ""},]
}]
listMessage2 = {
text: `[${EmojeG(emojos)}] G.T.T.S [${EmojeG(emojos)}]`,
  footer: `[üîä] Ol√° escolha as vozes que est√£o dispon√≠veis na lista, escolha uma l√≠ngua de determinada de um pa√≠s pra que ela possa reproduzir.`,
  title: " ",
  buttonText: 'Aperte Aqui',
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2)
break

case 'gtts':
if (args.length < 1) return destiny.sendMessage(from,{text: `Cade o texto?, digite algo Exemplo:\n${prefix}gtts PT Oi`}, {quoted: selo})
const gtts = require('./armor/funcoes/gtts')(args[0])
if (args.length < 2) return destiny.sendMessage(from, {text: 'Falta colocar o c√≥digo do idioma!'}, {quoted: selo})
dtt = body.slice(8)
ranm = getRandom('.mp3')
rano = getRandom('.ogg')
if(dtt.length > 200) return reply('Para reduzir spam o m√°ximo de letras permitidas s√£o 200!')
gtts.save(ranm, dtt, function() {
exec(`ffmpeg -i ${ranm} -ar 48000 -vn -c:a libopus ${rano}`, (err) => {
fs.unlinkSync(ranm)
buffer = fs.readFileSync(rano)
destiny.sendMessage(from, {audio: buffer, ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/audio.jpg"),
mediaType:2,
mediaUrl: `https://youtu.be/4fIiOvdcu10`,
sourceUrl: `https://youtu.be/4fIiOvdcu10`
}}}, {quoted:selo})
fs.unlinkSync(rano)
})
})
break

case 'ibere':
reply('[üîä] Aguarde um momento...')
if(args.length < 1) return reply('Cad√™ o texto de deseje que fale')
teks = body.slice(7)
uber.getAudioUrl('pub_mgqgxwvhxsukcqqawy', 'pk_d4cdd6d0-5ab7-4067-b9e2-8cdfdae6ec9f', 'ibere', teks).then(async res => {
buff = await getBuffer(res)
destiny.sendMessage(from, {audio: buff, mimetype: 'audio/mpeg'}, { quoted: selo })
})
break

case 'eminem':
reply('[üîä] Aguarde um momento...')
if(args.length < 1) return reply('Cad√™ o texto de deseje que fale')
teks = body.slice(7)
uber.getAudioUrl('pub_mgqgxwvhxsukcqqawy', 'pk_d4cdd6d0-5ab7-4067-b9e2-8cdfdae6ec9f', 'eminem', teks).then(async res => {
buff = await getBuffer(res)
destiny.sendMessage(from, {audio: buff, mimetype: 'audio/mpeg'}, { quoted: selo })
})
break

case 'chapolin':
reply('[üîä] N√£o contavam com minha ast√∫cia? aguarde um momento...')
if(args.length < 1) return reply('Cad√™ o texto de deseje que fale')
teks = body.slice(7)
uber.getAudioUrl('pub_mgqgxwvhxsukcqqawy', 'pk_d4cdd6d0-5ab7-4067-b9e2-8cdfdae6ec9f', 'chapolin-br', teks).then(async res => {
buff = await getBuffer(res)
destiny.sendMessage(from, {audio: buff, mimetype: 'audio/mpeg'}, { quoted: selo })
})
break

case 'negobam':
reply('[üîä] Aguarde um momento...')
if(args.length < 1) return reply('Cad√™ o texto de deseje que fale')
teks = body.slice(7)
uber.getAudioUrl('pub_mgqgxwvhxsukcqqawy', 'pk_d4cdd6d0-5ab7-4067-b9e2-8cdfdae6ec9f', 'negobam', teks).then(async res => {
buff = await getBuffer(res)
destiny.sendMessage(from, {audio: buff, mimetype: 'audio/mpeg'}, { quoted: selo })
})
break

case 'faustao':
reply('[üîä] Ooo lokinhoo meuuu!! ksksksk j√° t√¥ fazendo....')
if(args.length < 1) return reply('Cad√™ o texto de deseje que fale')
teks = body.slice(7)
uber.getAudioUrl('pub_mgqgxwvhxsukcqqawy', 'pk_d4cdd6d0-5ab7-4067-b9e2-8cdfdae6ec9f', 'faustao', teks).then(async res => {
buff = await getBuffer(res)
destiny.sendMessage(from, {audio: buff, uber,  mimetype: 'audio/mpeg'}, { quoted: selo })
})
break


///////

case 'tagme':
members_id = []  
const tagme = `@${sender.split("@")[0]} ‚úîÔ∏è`
members_id.push(sender.split("@s.whatsapp.net"))
await mentions(tagme, members_id, true)
break

case 'blockcmd':
if(!SoDono  && !isnit) return reply(enviar.msg.donosmt)
tp = args.join(" ")
if(tp.includes("blockcmd blockcmd") || (tp.includes("blockcmd  blockcmd"))) return reply(`T√° louco maluco?, Quer banir o comando de bloquear comando?`)
if(getComandoBlock(from).includes(args[0]))return reply('Este comando j√° est√° blockeado')
addComandos(from, args[0])
reply(`O comando ${args[0]} Foi blockeado`)
break

case 'unblockcmd':
if(!SoDono  && !isnit) return reply(enviar.msg.donosmt)
tp = args.join(" ")
if(tp.includes("blockcmd unblockcmd") || (tp.includes("blockcmd  unblockcmd"))) return reply(`T√° louco maluco?, Quer banir o comando de desbloquear comando?`)  
if(!getComandoBlock(from).includes(args[0]))return reply('Este comando j√° est√°  desbloqueado')
deleteComandos(from, args[0])
reply(`O comando ${args[0]} Foi desblockeado`)
break

case 'listacomandos':
tkks = '‚ï≠‚îÄ*„Äå *COMANDOS BLOCK* „Äç\n'
for (let V of getComandoBlock(from)) {
tkks += `‚îÇ+  ${V}\n`
}
tkks += `‚îÇ+ Total : ${getComandoBlock(from).length}\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ*„Äå *${NomeDoBot}* „Äç*‚îÄ‚îÄ‚îÄ‚îÄ`
await destiny.sendMessage(from, tkks.trim(), extendedText, {quoted: info})
break

case 'avaliar':
botaoavaliar = [
{title: "avalia√ß√£o",
rows: [
{title: "‚òÖ‚òÜ‚òÜ‚òÜ‚òÜ", rowId: `${prefix}avpessimo uma merda`},
{title: "‚òÖ‚òÖ‚òÜ‚òÜ‚òÜ", rowId: `${prefix}avruimm legal man`},
{title: "‚òÖ‚òÖ‚òÖ‚òÜ‚òÜ", rowId: `${prefix}avbom  at√© que da pra usar`},
{title: "‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ", rowId: `${prefix}avmuitobom  amei muito`},
{title: "‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ", rowId: `${prefix}avperfeito  perfeito maravilhoso`}]
}]
sendlistA(from, " ", "Seu Feedback √â Muito Importante Para Nois obgd\nPara Avaliar Clique Na Op√ß√£o Abaixo:", "*AVALIA√á√ÉO ZEBRS - BOT*", "AVALIAR", botaoavaliar)
break

case 'avpessimo':
reply (`obrigado(a) pela avalia√ß√£oüòî`)
if (args.length <= 1) return reply(`Exemplo: ${prefix}avalie "Bot muito bom, parab√©ns. "`)
if (args.length >= 400) return destiny.sendMessage(from, {text: 'M√°ximo 400 caracteres'}, {quoted: info})
var nomor = info.participant
tdptls = `De: wa.me/${sender.split("@s.whatsapp.net")[0]}

*nota:* ‚òÖ‚òÜ‚òÜ‚òÜ‚òÜüòî
`
await destiny.sendMessage(`${setting.numerodono}@s.whatsapp.net`, {text: tdptls }, {quoted: info})
break

case 'avruimm':
reply (`obrigado(a) pela avalia√ß√£o`)
if (args.length <= 1) return reply(`Exemplo: ${prefix}avalie "Bot muito bom, parab√©ns. "`)
if (args.length >= 400) return destiny.sendMessage(from, {text: 'M√°ximo 400 caracteres'}, {quoted: info})
var nomor = info.participant
tdptls = `De: wa.me/${sender.split("@s.whatsapp.net")[0]}

*nota:* ‚òÖ‚òÖ‚òÜ‚òÜ‚òÜüôÇ
`
await destiny.sendMessage(`${setting.numerodono}@s.whatsapp.net`, {text: tdptls }, {quoted: info})
break

case 'avbom':
reply (`obrigado(a) pela avalia√ß√£oü•∞`)
if (args.length <= 1) return reply(`Exemplo: ${prefix}avalie "Bot muito bom, parab√©ns. "`)
if (args.length >= 400) return destiny.sendMessage(from, {text: 'M√°ximo 400 caracteres'}, {quoted: info})
var nomor = info.participant
tdptls = `De: wa.me/${sender.split("@s.whatsapp.net")[0]}

*nota:* ‚òÖ‚òÖ‚òÖ‚òÜ‚òÜü•∞
`
await destiny.sendMessage(`${setting.numerodono}@s.whatsapp.net`, {text: tdptls }, {quoted: info})
break

case 'avmuitobom':
reply (`obrigado(a) pela avalia√ß√£o`)
if (args.length <= 1) return reply(`Exemplo: ${prefix}avalie "Bot muito bom, parab√©ns. "`)
if (args.length >= 400) return destiny.sendMessage(from, {text: 'M√°ximo 400 caracteres'}, {quoted: info})
var nomor = info.participant
tdptls = `De: wa.me/${sender.split("@s.whatsapp.net")[0]}

*nota:* ‚òÖ‚òÖ‚òÖ‚òÖ‚òÜüòç
`
await destiny.sendMessage(`${setting.numerodono}@s.whatsapp.net`, {text: tdptls }, {quoted: info})
break

case 'avperfeito':
reply (`obrigado(a( pela √≥tima avalia√ß√£oüòä`)
if (args.length <= 1) return reply(`Exemplo: ${prefix}avalie "Bot muito bom, parab√©ns. "`)
if (args.length >= 400) return destiny.sendMessage(from, {text: 'M√°ximo 400 caracteres'}, {quoted: info})
var nomor = info.participant
tdptls = `De: wa.me/${sender.split("@s.whatsapp.net")[0]}

*nota:* ‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ‚ò∫
`
await destiny.sendMessage(`${setting.numerodono}@s.whatsapp.net`, {text: tdptls }, {quoted: info})
break

case 'bug':
const bug = body.slice(5)
if (args.length <= 1) return reply(`Exemplo: ${prefix}bug "ocorreu um erro no comando sticker"`)
if (args.length >= 800) return destiny.sendMessage(from, {text: 'M√°ximo 800 caracteres'}, {quoted: info})
var nomor = info.participant
teks1 = `[ Problema ]\nDe: wa.me/${sender.split("@s.whatsapp.net")[0]}\nErro ou bug: ${bug}`
var options = {
text: teks1,
contextInfo: {
mentionedJid: [sender]
},
}
await destiny.sendMessage(`${setting.numerodono}@s.whatsapp.net`, {text: options}, {quoted: info})
reply("mensagem enviada ao meu dono, se enviar muitas mensagens repetida por zoeira, voc√™ sera banido de utilizar os comandos do bot.")
break

case 'sugest√£o':
case 'sugestao':
const sugestao = body.slice(10)
if (args.length <= 1) return reply(`Exemplo: ${prefix}sugestao "Opa, crie um comando tal, que ele funcione de tal maneira, isso ser√° muito bom, n√£o s√≥ pra mim, mas pra v√°rios fazer isso.."`)
if (args.length >= 800) return destiny.sendMessage(from, {text: 'M√°ximo 800 caracteres'}, {quoted: info})
var nomor = info.participant
sug = `[ Sugest√µes ]\nDe: wa.me/${sender.split("@s.whatsapp.net")[0]}\n: ${sugestao}`
await destiny.sendMessage(`${setting.numerodono}@s.whatsapp.net`, {text: sug}, {quoted: info})
reply("mensagem enviada ao meu dono, obrigado pela sugest√£o, tentar ouvir o m√°ximo poss√≠vel de sugest√µes.")
break

//========(BAIXAR/PESQUISAS)========\\

//======(BAIXAR/PESQUISAS)======\\

case 'pinterest': case 'pin':{
if (!q) throw `Exemplo : ${prefix + command}`
let { pinterest } = require('./lib/scraper')
anu = await pinterest(q)
result = anu[Math.floor(Math.random() * anu.length)]               
let buttons = [                   
{buttonId: `${prefix}pinterest ${q}`, buttonText: {displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'}, type: 1}
]
let buttonMessage = {
image: { url: result },
caption: `Resultados sobre : ${q}\n\nLink: 
${result}\n\n*Clique em pr√≥ximo para continuar*`,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4
}
destiny.sendMessage(from, buttonMessage, { quoted: selo })
}
break

case 'anime': {
if(!q) return reply(`Qual anime voc√™ quer pesquisar?\nExemplo ${prefix}manga naruto`)
reply("aguarde um minuto...")						
const { Anime } = require("@shineiichijo/marika")
const client = new Anime();
let anime = await client.searchAnime(q)
let result = anime.data[0];
console.log(result)
let Saikyo = `‚≠î Titulo: ${result.title}\n`;
Saikyo += `‚≠î Formato: ${result.type}\n`;
Saikyo += `‚≠î Estado: ${result.status.toUpperCase().replace(/\_/g, " ")}*\n`;
Saikyo += `‚≠î Total episodio: ${result.episodes}\n`;
Saikyo += `‚≠î Dura√ß√£o: ${result.duration}\n`;
Saikyo += `‚≠î G√™neros:\n`;
for (let i = 0; i < result.genres.length; i++) {
Saikyo += `${result.genres[i].name}\n`;
}
Saikyo += `‚≠î Residia em : ${result.source.toUpperCase()}*\n`;
Saikyo += `‚≠î *estudar:\n`;
for (let i = 0; i < result.studios.length; i++) {
Saikyo += `${result.studios[i].name}\n`;
}
Saikyo += `‚≠î Voc√™ produz:\n`;
for (let i = 0; i < result.producers.length; i++) {
Saikyo += `${result.producers[i].name}\n`;
}
Saikyo += `‚≠î Treinou o : ${result.aired.from}\n`;
Saikyo += `‚≠î Ele terminou em: ${result.aired.to}\n`;
Saikyo += `‚≠î Popularidade: ${result.popularity}\n`;
Saikyo += `‚≠î Favoritos: ${result.favorites}\n`;
Saikyo += `‚≠î Avalia√ß√£o: ${result.rating}\n`;
Saikyo += `‚≠î Variar: ${result.rank}\n`;
if (result.trailer.url !== null)
Saikyo += `‚≠î Trailer: 
${result.trailer.url}
\n`;
Saikyo += `‚≠î Descri√ß√£o:
${result.url}\n\n`;
if (result.background !== null)

Saikyo += `‚≠îüìçFIMüìç
`
let buttonMessage = {
image:{url:result.images.jpg.large_image_url},
caption: Saikyo,
footer: `${NomeDoBot}`,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: '',
sourceUrl: `https://www.instagram.com/maysurf__/`,
mediaUrl: ``
}}
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case "reddit":
    case 'sr': {
        if (!q) {
            reply('Forne√ßa um termo de pesquisa!')
            return;
        }
        const sr = q
        try {
            const {
                data
            } = await axios.get(`https://meme-api.herokuapp.com/gimme/${sr}`);
            const xz = `Titulo : ${data.title} 

Postenlace : ${data.postLink}     

Subreddit: ${data.subreddit}

Spoiler: ${data.spoiler}
`
            
            await destiny.sendMessage(from, {
                image: {
                    url: data.url
                },
                caption: xz
            }, {
                quoted: selo
            });
        } catch (err) {
            await reply('Nenhum resultado encontrado!')
            console.log(err)
        }
    }
    break

case 'gimme': {
reply('aguarde cadela')
let za = await axios(`https://meme-api.herokuapp.com/gimme/boobs`)
let json = za.data
let url = json.url
Saikyo = `Pesquisa: Gimme`
let buttons = [
{buttonId: `${prefix}gimme`, buttonText: {displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'}, type: 2},
]
let buttonMessage = {
image: { url: url },
caption: Saikyo,
footer: `Clique no bot√£o abaixo para escolher`,
buttons: buttons,
headerType: 4,
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break

case 'wallpaper': {
if (!q) return reply(`Insira o t√≠tulo da consulta`)
let { wallpaper } = require('./lib/scraper.js')
anu = await wallpaper(q)
result = anu[Math.floor(Math.random() * anu.length)]
reply("Processando dados...") 
let buttons = [
{
buttonId: `${prefix}wallpaper ${q}`, 
buttonText: {
displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'
}, type: 1},
]
Saikyo = `
‚≠î T√≠tulo : ${q}
‚≠î Categoria: ${result.type}
‚≠î Detalhe: ${result.source}
‚≠î Media Url: ${result.image[2] || result.image[1] || result.image[0]}`
let buttonMessage = {
image: { url: result.image[0] },
caption: Saikyo,
footer: ``,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
thumbnail:'',
mediaType:2,
mediaUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`, 
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, { quoted: selo })
}
break
            
case 'wikimedia': {
if (!q) return reply(`Insira o t√≠tulo da consulta`)
let { wikimedia } = require('./lib/scraper.js')
anu = await wikimedia(q)
result = anu[Math.floor(Math.random() * anu.length)]
reply("Processando dados...") 
let buttons = [
{
buttonId: `${prefix}wikimedia ${q}`, 
buttonText: {
displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'
}, type: 1},
]
Saikyo = `
‚≠î T√≠tulo: ${q}
‚≠î Fonte: 1${result.source}
‚≠î Media Url: ${result.image}`
let buttonMessage = {
image: { url: result.image },
caption: Saikyo,
footer: ``,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
thumbnail: '',
mediaType:2,
mediaUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`, 
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, { quoted: selo })
}
break

case'goyabu':
if(!q) return reply("cade o nome do anime? ver se escreve certo blz")
var request = await axios('https://goyabu.com/?s=' + args.join(" ").replace(/ /g, "+"));
var $ = cheerio.load(request.data);
var g = $('div.episodes-container').find('div.anime-episode').length;
var n = g 
if (n == '0') reply("Anime N√£o Encontrado Verifique Se Voc√™ Pesquiou Exatamente O Nome")
var sections = [{ title: `${NomeDoBot}`, rows: [] }];
for (let i = 0; i < n; i++) {
sections[0].rows.push({
title: $('div.episodes-container').find('div.anime-episode').eq(i).find('h3').text(),
rowId: prefix + 'yabu_1 ' + $('div.episodes-container').find('div.anime-episode').eq(i).find('a').attr('href')
});
};
await destiny.sendMessage(from, {text: n + " Resultados", title: `${NomeDoBot}\nPesquisado por: ` + args.join(" "), buttonText: "SELECIONAR", sections });
break

case'yabu_1':
var request = await axios(args.join(" "));
var $ = cheerio.load(request.data);
var n = $('div.anime-info-right').find('div').eq(5).text().split(':')[1].trim().concat('\n', $('div.anime-info-right').find('div').eq(1).text().split(':')[1].trim(), '\n', $('div.anime-info-right').find('div').eq(4).text().split(':')[1].trim(), '\n\n', $('div.anime-description').text().trim());
var g = $('div.row').find('a').length;
var sections = [{ title: `${NomeDoBot}`, rows: [] }];
for (let i = 0; i < g; i++) {
sections[0].rows.push({
title: $('div.row').find('a').eq(i).find('div').eq(1).text(),
rowId: prefix + 'yabu_2 ' + $('div.row').find('a').eq(i).attr('href')
});
};
await destiny.sendMessage(from, { text: n, title: $('h1').text(), buttonText: $('h1').text(), sections });
break

case'yabu_2':
var request = await axios(args.join(" "));
var $ = cheerio.load(request.data);
var g = 'https://kanra.dev' + $('html').html().split('https://kanra.dev')[1].split("'")[0];
var p = await axios('https://tinyurl.com/api-create.php?url=' + g);
var n = $('h1').text() + ':\nLink: ' + p.data;
reply(n);
break


case 'gerarlink':  
case 'imgpralink':    
try {
if (isQuotedImage) {
reply(enviar.espere)
boij = isQuotedImage ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info
owgi = await getFileBuffer(boij, 'image')
res = await upload(owgi)
reply(res)
} else {
reply(`Mande uma imagem com a legenda ${prefix + command}`)
}
} catch {
reply('Ocorreu algum Error, desculpe üòî')
}
break

case 'videourl':
case 'videopralink':
try {
if ((isQuotedVideo) && args.length == 0) {
reply(enviar.espere)
boij = isQuotedVideo ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.videoMessage : info
owgi = await getFileBuffer(boij, 'video')
res = await upload(owgi)
reply(res)
} else {
reply(`Mande v√≠deo com a legenda ${prefix + command}`)
}
} catch {
reply('Ocorreu algum Error, desculpe üòî/ O limite do tamanho de v√≠deo que gero o link, √© 30 segundos.')
}
break


case 'komi': {
const {kmi} = require('./node_modules/API/animes.js')
  apikomi = kmi[Math.floor(Math.random() * kmi.length)]
  wew = await getBuffer(`${apikomi}`)
  mag = 'KOMI-SAN ‚ù£Ô∏è'
let buttons = [
{
buttonId: `${prefix + command}`, 
buttonText: {
displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'
}, type: 1},
]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage, {quoted:selo})
}
break

case 'zero-two':
case 'zero': {
const {zero} = require('./node_modules/API/animes.js')
apizero = zero[Math.floor(Math.random() * zero.length)]
wew = await getBuffer(`${apizero}`)
mag = 'ZERO-TWOüíû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage,{quoted:selo})
}
break


case 'nagatoro': {
  const {nagatoro} = require('./node_modules/API/animes.js')
  apinagatoro = nagatoro[Math.floor(Math.random() * nagatoro.length)]
  wew = await getBuffer(`${apinagatoro}`)
  mag = 'NAGATORO-SAN'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage,{quoted:selo})
}
break

case 'suzuya': {
  const {suzuya} = require('./node_modules/API/animes.js')
  apisuzuya = suzuya[Math.floor(Math.random() * suzuya.length)]
  wew = await getBuffer(`${apisuzuya}`)
  mag = 'Juuzou Suzuya'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage,{quoted:selo})
}
break

case 'kaguya-sama':
case 'kaguya':{
  const {kaguya} = require('./node_modules/API/animes.js')
  apikaguya = kaguya[Math.floor(Math.random() * kaguya.length)]
  wew = await getBuffer(`${apikaguya}`)
  mag = 'ùê§ùêöùê†ùêÆùê≤ùêö-ùê¨ùêöùê¶ùêö‚ù§'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage, {quoted:selo})
}
break

case 'tanjiro': {
  const {tanjiro} = require('./node_modules/API/animes.js')
  apitanjiro = tanjiro[Math.floor(Math.random() * tanjiro.length)]
  wew = await getBuffer(`${apitanjiro}`)
  mag = 'ùêìùêöùêßùê£ùê¢ùê´ùê® ùêûùê¨ùê©ùêöùêùùêöùêúùê°ùê¢ùê¶'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage, {quoted:selo})
}
break

case 'neko': {
  const {neko} = require('./node_modules/API/animes.js')
  apineko = neko[Math.floor(Math.random() * neko.length)]
  wew = await getBuffer(`${apineko}`)
  mag = 'ùêçùêûùê§ùê®ùê¨ ùêàùêúùê®ùêßùê¨'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage, {quoted:selo})
}
break

case 'itsuki': {
  const {itsuki} = require('./node_modules/API/animes.js')
  apiitsuki = itsuki[Math.floor(Math.random() * itsuki.length)]
  wew = await getBuffer(`${apiitsuki}`)
  mag = 'ùê¢ùê≠ùê¨ùêÆùê§ùê¢-ùê¢ùêúùê®ùêßùê¨‚ù§'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage,{quoted:selo})
}
break

case 'chizuru': {
  const {chizuru} = require('./node_modules/API/animes.js')
  apichizuru = chizuru[Math.floor(Math.random() * chizuru.length)]
  wew = await getBuffer(`${apichizuru}`)
  mag = 'ùêåùê¢ùê≥ùêÆùê°ùêöùê´ùêö ùêúùê°ùê¢ùê≥ùêÆùê´ùêÆ'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage, {quoted:selo})
}
break
  
case 'hinata': {
  const {hinata} = require('./node_modules/API/animes.js')
  apihinata = hinata[Math.floor(Math.random() * hinata.length)]
  wew = await getBuffer(`${apihinata}`)
  mag = 'ùêáùê¢ùêßùêöùê≠ùêö ùêáùê≤ùêÆùêÆùê†ùêö'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage, {quoted:selo})
}
break

case 'sakura': {
  const {sakura} = require('./node_modules/API/animes.js')
  apisakura = sakura[Math.floor(Math.random() * sakura.length)]
  wew = await getBuffer(`${apisakura}`)
    mag = 'ùêíùêöùê§ùêÆùê´ùêö ùêáùêöùê´ùêÆùêßùê®'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage, {quoted:selo})
}
break

case 'sakurajima': {
  const {sakurajima} = require('./node_modules/API/animes.js')
  apisakurajima = sakurajima[Math.floor(Math.random() * sakurajima.length)]
  wew = await getBuffer(`${apisakurajima}`)
  mag = 'ùêåùêöùê¢ ùêíùêöùê§ùêÆùê´ùêöùê£ùê¢ùê¶ùêö'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage, {quoted:selo})
}
break

case 'waifus': {
  const {Waifu} = require('./node_modules/API/animes.js')
  apiWaifu = Waifu[Math.floor(Math.random() * Waifu.length)]
  wew = await getBuffer(`${apiWaifu}`)
  mag = 'ùêñùêöùê¢ùêüùêÆ'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage,{quoted:selo})
}
break


case 'zoro': {
  const {zoro} = require('./node_modules/API/animes.js')
  apizoro = zoro[Math.floor(Math.random() * zoro.length)]
  wew = await getBuffer(`${apizoro}`)
  mag = 'ùêëùê®ùê´ùê®ùêßùê®ùêö ùêôùê®ùê´ùê®'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage,{quoted:selo})
}
break

case 'asuna': {
  const {asuna} = require('./node_modules/API/animes.js')
  apiasuna = asuna[Math.floor(Math.random() * asuna.length)]
  wew = await getBuffer(`${apiasuna}`)
  mag = 'ùêÄùê¨ùêÆùêßùêö ùêòùêÆùêÆùê§ùê¢'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage,{quoted:selo})
}
break

case 'akame': {
  const {akame} = require('./node_modules/API/animes.js')
  apiakame = akame[Math.floor(Math.random() * akame.length)]
  wew = await getBuffer(`${apiakame}`)
    mag = 'ùêÄùê§ùêöùê¶ùêû ùê†ùêö ùêäùê¢ùê•ùê•!'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage,{quoted:selo})
}
break

case 'megumin': {
  const {megumin} = require('./node_modules/API/animes.js')
  apimegumin = megumin[Math.floor(Math.random() * megumin.length)]
  wew = await getBuffer(`${apimegumin}`)
      mag = 'ùêåùêûùê†ùêÆùê¶ùê¢ùêß'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage, {quoted:selo})
}
break

case 'naruto': {
  const {naruto} = require('./node_modules/API/animes.js')
  apinaruto = naruto[Math.floor(Math.random() * naruto.length)]
  wew = await getBuffer(`${apinaruto}`)
  mag = 'ùêçùêöùê´ùêÆùê≠ùê® ùêîùê≥ùêÆùê¶ùêöùê§ùê¢'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage,{quoted:selo})
}
break

case 'nezuko': {
  const {nezuko} = require('./node_modules/API/animes.js')
  apinezuko = nezuko[Math.floor(Math.random() * nezuko.length)]
  wew = await getBuffer(`${apinezuko}`)
  mag = 'ùêçùêûùê≥ùêÆùê§ùê® ùêäùêöùê¶ùêöùêùùê®'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage, {quoted:selo})
}
break

case 'akira': {
  const {akira} = require('./node_modules/API/Animes2.js')
  apiakira = akira[Math.floor(Math.random() * akira.length)]
  wew = await getBuffer(`${apiakira}`)
  mag = 'Akira'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage,{quoted:selo})
}
break

case 'akiyama': {
  const {akiyama} = require('./node_modules/API/Animes2.js')
  apiakiyama = akiyama[Math.floor(Math.random() * akiyama.length)]
  wew = await getBuffer(`${apiakiyama}`)
  mag = 'Akiyama'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from, buttonMessage,{quoted:selo})
}
break

case 'tomoya': {
  const {ana} = require('./node_modules/API/Animes2.js')
  apiana = ana[Math.floor(Math.random() * ana.length)]
  wew = await getBuffer(`${apiana}`)
  mag = 'Tomoya Matsumaga'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'ayuzawa': {
  const {ayuzawa} = require('./node_modules/API/Animes2.js')
  apiayuzawa = ayuzawa[Math.floor(Math.random() * ayuzawa.length)]
  wew = await getBuffer(`${apiayuzawa}`)
  mag = 'Ayuzawa'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'boruto': {
  const {boruto} = require('./node_modules/API/Animes2.js')
  apiboruto = boruto[Math.floor(Math.random() * boruto.length)]
  wew = await getBuffer(`${apiboruto}`)
  mag = 'Boruto: Naruto Next Generations'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'chiho': {
  const {chiho} = require('./node_modules/API/Animes2.js')
  apichiho = chiho[Math.floor(Math.random() * chiho.length)]
  wew = await getBuffer(`${apichiho}`)
  mag = 'Chiho Sasaki'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'chitoge': {
  const {chitoge} = require('./node_modules/API/Animes2.js')
  apichitoge = chitoge[Math.floor(Math.random() * chitoge.length)]
  wew = await getBuffer(`${apichitoge}`)
  mag = 'Chitoge Kirisaki'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'deidara': {
  const {deidara} = require('./node_modules/API/Animes2.js')
  apideidara = deidara[Math.floor(Math.random() * deidara.length)]
  wew = await getBuffer(`${apideidara}`)
  mag = 'Deidara'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'elaina': {
  const {elaina} = require('./node_modules/API/Animes2.js')
  apielaina = elaina[Math.floor(Math.random() * elaina.length)]
  wew = await getBuffer(`${apielaina}`)
  mag = 'Wandering Witch: The Journey of Elaina'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'emilia': {
  const {emilia} = require('./node_modules/API/Animes2.js')
  apiemilia = emilia[Math.floor(Math.random() * emilia.length)]
  wew = await getBuffer(`${apiemilia}`)
  mag = 'Emilia'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'erza': {
  const {erza} = require('./node_modules/API/Animes2.js')
  apierza = erza[Math.floor(Math.random() * erza.length)]
  wew = await getBuffer(`${apierza}`)
  mag = 'Erza Scarlet'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'gremory': {
  const {gremory} = require('./node_modules/API/Animes2.js')
  apigremory = gremory[Math.floor(Math.random() * gremory.length)]
  wew = await getBuffer(`${apigremory}`)
  mag = 'Gremory'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'hestia': {
  const {hestia} = require('./node_modules/API/Animes2.js')
  apihestia = hestia[Math.floor(Math.random() * hestia.length)]
  wew = await getBuffer(`${apihestia}`)
  mag = 'Hestia'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'inori': {
  const {inori} = require('./node_modules/API/Animes2.js')
  apiinori = inori[Math.floor(Math.random() * inori.length)]
  wew = await getBuffer(`${apiinori}`)
  mag = 'Inori Yuzuriha'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'isuzu': {
  const {isuzu} = require('./node_modules/API/Animes2.js')
  apiisuzu = isuzu[Math.floor(Math.random() * isuzu.length)]
  wew = await getBuffer(`${apiisuzu}`)
  mag = 'Isuzu'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'itachi': {
  const {itachi} = require('./node_modules/API/Animes2.js')
  apiitachi = itachi[Math.floor(Math.random() * itachi.length)]
  wew = await getBuffer(`${apiitachi}`)
  mag = 'Itachi Uchiha'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'itori': {
  const {itori} = require('./node_modules/API/Animes2.js')
  apiitori = itori[Math.floor(Math.random() * itori.length)]
  wew = await getBuffer(`${apiitori}`)
  mag = 'Itori'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'kaga': {
  const {kaga} = require('./node_modules/API/Animes2.js')
  apikaga = kaga[Math.floor(Math.random() * kaga.length)]
  wew = await getBuffer(`${apikaga}`)
  mag = 'Kouko Kaga'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'kagura': {
  const {kagura} = require('./node_modules/API/Animes2.js')
  apikagura = kagura[Math.floor(Math.random() * kagura.length)]
  wew = await getBuffer(`${apikagura}`)
  mag = 'Kagura'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'kakashi': {
  const {kakashi} = require('./node_modules/API/Animes2.js')
  apikakashi = kakashi[Math.floor(Math.random() * kakashi.length)]
  wew = await getBuffer(`${apikakashi}`)
  mag = 'Kakashi Hatake'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'kaori': {
  const {kaori} = require('./node_modules/API/Animes2.js')
  apikaori = kaori[Math.floor(Math.random() * kaori.length)]
  wew = await getBuffer(`${apikaori}`)
  mag = 'Kaori'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'kaneki': {
  const {kaneki} = require('./node_modules/API/Animes2.js')
  apikaneki = kaneki[Math.floor(Math.random() * kaneki.length)]
  wew = await getBuffer(`${apikaneki}`)
  mag = 'Ken Kaneki'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'kotori': {
  const {kotori} = require('./node_modules/API/Animes2.js')
  apikotori = kotori[Math.floor(Math.random() * kotori.length)]
  wew = await getBuffer(`${apikotori}`)
  mag = 'Kotori'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'kurumi': {
  const {kurumi} = require('./node_modules/API/Animes2.js')
  apikurumi = kurumi[Math.floor(Math.random() * kurumi.length)]
  wew = await getBuffer(`${apikurumi}`)
  mag = 'Kurumi Tokisaki'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'madara': {
  const {madara} = require('./node_modules/API/Animes2.js')
  apimadara = madara[Math.floor(Math.random() * madara.length)]
  wew = await getBuffer(`${apimadara}`)
  mag = 'Madara Uchiha'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'mikasa': {
  const {mikasa} = require('./node_modules/API/Animes2.js')
  apimikasa = mikasa[Math.floor(Math.random() * mikasa.length)]
  wew = await getBuffer(`${apimikasa}`)
  mag = 'Mikasa'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'minato': {
  const {minato} = require('./node_modules/API/Animes2.js')
  apiminato = minato[Math.floor(Math.random() * minato.length)]
  wew = await getBuffer(`${apiminato}`)
  mag = 'Minato Namikaze'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'sagiri': {
  const {sagiri} = require('./node_modules/API/Animes2.js')
  apisagiri = sagiri[Math.floor(Math.random() * sagiri.length)]
  wew = await getBuffer(`${apisagiri}`)
  mag = 'Izumi Sagiri'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'sasuke': {
  const {sasuke} = require('./node_modules/API/Animes2.js')
  apisasuke = sasuke[Math.floor(Math.random() * sasuke.length)]
  wew = await getBuffer(`${apisasuke}`)
  mag = 'Sasuke Uchiha'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'shina': {
  const {shina} = require('./node_modules/API/Animes2.js')
  apishina = shina[Math.floor(Math.random() * shina.length)]
  wew = await getBuffer(`${apishina}`)
  mag = 'Shina'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'tejina': {
  const {tejina} = require('./node_modules/API/Animes2.js')
  apitejina = tejina[Math.floor(Math.random() * tejina.length)]
  wew = await getBuffer(`${apitejina}`)
  mag = 'Tejina-senpai'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'toukachan': {
  const {toukachan} = require('./node_modules/API/Animes2.js')
  apitoukachan = toukachan[Math.floor(Math.random() * toukachan.length)]
  wew = await getBuffer(`${apitoukachan}`)
  mag = 'Touka-Chan'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'tsunade': {
  const {tsunade} = require('./node_modules/API/Animes2.js')
  apitsunade = tsunade[Math.floor(Math.random() * tsunade.length)]
  wew = await getBuffer(`${apitsunade}`)
  mag = 'Tsunade Senju'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'waifu': {
  const {waifu} = require('./node_modules/API/Animes2.js')
  apiwaifu = waifu[Math.floor(Math.random() * waifu.length)]
  wew = await getBuffer(`${apiwaifu}`)
  mag = 'Waifu'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'yotsuba': {
  const {yotsuba} = require('./node_modules/API/Animes2.js')
  apiyotsuba = yotsuba[Math.floor(Math.random() * yotsuba.length)]
  wew = await getBuffer(`${apiyotsuba}`)
  mag = 'Yotsuba'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'yumeko': {
  const {yumeko} = require('./node_modules/API/Animes2.js')
  apiyumeko = yumeko[Math.floor(Math.random() * yumeko.length)]
  wew = await getBuffer(`${apiyumeko}`)
  mag = 'Yumeko Jabami'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

///////////////////FiM//////////////////


////////////////ACESSO/////////////////

case 'aesthetic': {
  const {aesthetic} = require('./node_modules/API/acesso.js')
  apiaesthetic = aesthetic[Math.floor(Math.random() * aesthetic.length)]
  wew = await getBuffer(`${apiaesthetic}`)
  mag = '‚òï‚òïü´ñ'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'cosplay': {
  const {cosplay} = require('./node_modules/API/acesso.js')
  apicosplay = cosplay[Math.floor(Math.random() * cosplay.length)]
  wew = await getBuffer(`${apicosplay}`)
  mag = 'Cosplay'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'cosplayloli': {
  const {cosplayloli} = require('./node_modules/API/acesso.js')
  apicosplayloli = cosplayloli[Math.floor(Math.random() * cosplayloli.length)]
  wew = await getBuffer(`${apicosplayloli}`)
  mag = 'Cosplay Loli'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'cosplaysagiri': {
  const {cosplaysagiri} = require('./node_modules/API/acesso.js')
  apicosplaysagiri = cosplaysagiri[Math.floor(Math.random() * cosplaysagiri.length)]
  wew = await getBuffer(`${apicosplaysagiri}`)
  mag = 'Cosplay Sagiri'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'gamewallp': {
  const {gamewallp} = require('./node_modules/API/acesso.js')
  apigamewallp = gamewallp[Math.floor(Math.random() * gamewallp.length)]
  wew = await getBuffer(`${apigamewallp}`)
  mag = 'Wallpaper Game'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'gato': {
  const {gato} = require('./node_modules/API/acesso.js')
  apigato = gato[Math.floor(Math.random() * gato.length)]
  wew = await getBuffer(`${apigato}`)
  mag = 'Gato'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'wallpaper2': {
  const {wallpaper2} = require('./node_modules/API/acesso.js')
  apiwallpaper2 = wallpaper2[Math.floor(Math.random() * wallpaper2.length)]
  wew = await getBuffer(`${apiwallpaper2}`)
  mag = 'Wallpaper'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

///////////////fim////////////////

///////////////hentai///////////

case 'loli': {
 if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`) 
  const {loli} = require('./node_modules/API/hentai.js')
  apiloli = loli[Math.floor(Math.random() * loli.length)]
  wew = await getBuffer(`${apiloli}`)
  mag = 'Loli? cuidado meu companheiro üïµÔ∏è'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'trap':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {trap} = require('./node_modules/API/hentai.js')
  apitrap = trap[Math.floor(Math.random() * trap.length)]
  wew = await getBuffer(`${apitrap}`)
  mag = 'üò®üò®'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'hentai':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {hentai} = require('./node_modules/API/hentai.js')
  apihentai = hentai[Math.floor(Math.random() * hentai.length)]
  wew = await getBuffer(`${apihentai}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'nekos':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {neko} = require('./node_modules/API/hentai.js')
  apineko = neko[Math.floor(Math.random() * neko.length)]
  wew = await getBuffer(`${apineko}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'ahegao':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {ahegao} = require('./node_modules/API/hentai.js')
  apiahegao = ahegao[Math.floor(Math.random() * ahegao.length)]
  wew = await getBuffer(`${apiahegao}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'ass':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {ass} = require('./node_modules/API/hentai.js')
  apiass = ass[Math.floor(Math.random() * ass.length)]
  wew = await getBuffer(`${apiass}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'bdsm':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {bdsm} = require('./node_modules/API/hentai.js')
  apibdsm = bdsm[Math.floor(Math.random() * bdsm.length)]
  wew = await getBuffer(`${apibdsm}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'blowjob':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {blowjob} = require('./node_modules/API/hentai.js')
  apiblowjob = blowjob[Math.floor(Math.random() * blowjob.length)]
  wew = await getBuffer(`${apiblowjob}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break

case 'cum':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {cum} = require('./node_modules/API/hentai.js')
  apicum = cum[Math.floor(Math.random() * cum.length)]
  wew = await getBuffer(`${apicum}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break



case 'ero':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {ero} = require('./node_modules/API/hentai.js')
  apiero = ero[Math.floor(Math.random() * ero.length)]
  wew = await getBuffer(`${apiero}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break


case 'femdom':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {femdom} = require('./node_modules/API/hentai.js')
  apifemdom = femdom[Math.floor(Math.random() * femdom.length)]
  wew = await getBuffer(`${apifemdom}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break


case 'ganbganb':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {ganbganb} = require('./node_modules/API/hentai.js')
  apiganbganb = ganbganb[Math.floor(Math.random() * ganbganb.length)]
  wew = await getBuffer(`${apiganbganb}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break


case 'glasses':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {glasses} = require('./node_modules/API/hentai.js')
  apiglasses = glasses[Math.floor(Math.random() * glasses.length)]
  wew = await getBuffer(`${apiglasses}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break


case 'hentai2':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {hentai2} = require('./node_modules/API/hentai.js')
  apihentai2 = hentai2[Math.floor(Math.random() * hentai2.length)]
  wew = await getBuffer(`${apihentai2}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break


case 'kasedaiki':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {kasedaiki} = require('./node_modules/API/hentai.js')
  apikasedaiki = Kaori[Math.floor(Math.random() * kasedaiki.length)]
  wew = await getBuffer(`${apikasedaiki}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break


case 'masturbation':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {masturbarion} = require('./node_modules/API/hentai.js')
  apimasturbation = masturbation[Math.floor(Math.random() * masturbation.length)]
  wew = await getBuffer(`${apimasturbation}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break


case 'neko2':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {neko2} = require('./node_modules/API/hentai.js')
  apineko2 = neko2[Math.floor(Math.random() * neko2.length)]
  wew = await getBuffer(`${apineko2}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break


case 'panties':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {panties} = require('./node_modules/API/hentai.js')
  apipanties = panties[Math.floor(Math.random() * panties.length)]
  wew = await getBuffer(`${apipanties}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break


case 'yuri':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {yuri} = require('./node_modules/API/hentai.js')
  apiyuri = yuri[Math.floor(Math.random() * yuri.length)]
  wew = await getBuffer(`${apiyuri}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break


case 'zettai':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
  const {zettai} = require('./node_modules/API/hentai.js')
  apizettai = zettai[Math.floor(Math.random() * zettai.length)]
  wew = await getBuffer(`${apizettai}`)
  mag = 'üîûüîûSexy'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:selo})
}
break
 //////// FiM DOS ANIME E HENTAI/////////
 
 ///////////MIDIA////////////////
 
 case 'aline':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 65) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/AlineFaria/%20${numb}.jpg`}
    mag = 'üîûAlineFariaüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'alifox':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 59) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/AlineFox/%20${numb}.jpg`}
   mag = 'üîûAlineFoxüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'alycai':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 28) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/AlyciaRibeiro/%20${numb}.jpg`}
   mag = 'üîûAlyciaRibeiroüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'amichan':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 29) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/Amiichan/%20${numb}.jpg`}
   mag = 'üîûAmiichanüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'aninha':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 30) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/AninhaLopes/%20${numb}.jpg`}
   mag = 'üîûAninhaLopesüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'baby':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 36) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/BabyMatoso/%20${numb}.jpg`}
   mag = 'üîûBabyMatosoüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'belle':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 31) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/BelleDelphine/%20${numb}.jpg`}
   mag = 'üîûBelleDelphineüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'brenda':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 25) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/BrendaTrindade/%20${numb}.jpg`}
   mag = 'üîûBrendaTrindadeüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'cami':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 30) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/CamiBrito/%20${numb}.jpg`}
   mag = 'üîûCamiBritoüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'clowniac':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 29) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/Cclowniac/%20${numb}.jpg`}
   mag = 'üîûCclowniacüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'galvao':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 32) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/FehGalvao/%20${numb}.jpg`}
   mag = 'üîûFehGalvaoüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'giovanna':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 34) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/GiovannaCampomar/%20${numb}.jpg`}
   mag = 'üîûGiovannaCampomarüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'isadora':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 30) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/ISADORA%20MARTINEZ/%20${numb}.jpg`}
   mag = 'üîûISADORA MARTINEZüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'isa':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 21) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/IsaWaifu/%20${numb}.jpg`}
   mag = 'üîûIsaWaifuüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'lay':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 25) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/LayNuniz/%20${numb}.jpg`}
   mag = 'üîûLayNunizüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'leticia':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 28) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/LeticiaShirayuki/%20${numb}.jpeg`}
   mag = 'üîûLeticiaShirayukiüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'marina':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 27) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/MarinaMui/%20${numb}.jpg`}
   mag = 'üîûMarinaMuiüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'maru':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 40) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/MaruKarv/%20${numb}.jpg`}
   mag = 'üîûMaruKarvüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'princesa':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 32) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/McPrincesa/%20${numb}.jpg`}
   mag = 'üîûMcPrincesaüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'meadinha':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 33) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/Me1adinha/%20${numb}.jpg`}
   mag = 'üîûMe1adinhaüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'nath':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 23) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/NathBister%C3%A7o/%20${numb}.jpg`}
   mag = 'üîûNathBisterüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'nega':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 21) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/NegaBarbie/%20${numb}.jpg`}
   mag = 'üîûNegaBarbieüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'polonesa':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 28) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/PolonesaDoHype/%20${numb}.jpg`}
   mag = 'üîûPolonesaDoHypeüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'pornofot':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 44) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/PornoFoto/%20${numb}.jpg`}
   mag = 'üîûPornoFotoüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'rute':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 30) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/RuteRocha/%20${numb}.jpg`}
   mag = 'üîûRuteRochaüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'vita':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 30) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/VitaCelestine/%20${numb}.jpg`}
   mag = 'üîûVitaCelestineüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'carnie':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 29) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/carniello/%20${numb}.jpg`}
   mag = 'üîûcarnielloüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'egril':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 36) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/egril/%20${numb}.jpg`}
   mag = 'üîûegrilüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'neter':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 30) + 1
   wew = {url: `https://raw.githubusercontent.com/Herojoii/midiiporno/main/packs/netersg/%20${numb}.jpg`}
   mag = 'üîûnetersgüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
image: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break
//////////FIm PORNK/////

/////////PORNO VIDEO////////

case 'amador':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 41) + 1
   wew = {url: `https://github.com/Herojoii/midiiporno/raw/main/packs/AmadorVideo/${numb}.mp4`}
   mag = 'üîûAmadorVideoüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
video: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break


case 'onlyfans':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 47) + 1
   wew = {url: `https://github.com/Herojoii/midiiporno/raw/main/packs/OnlyfansVideo/%20${numb}.mp4`}
   mag = 'üîûOnlyfansVideoüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
video: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'porno':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 37) + 1
   wew = {url: `https://github.com/Herojoii/midiiporno/raw/main/packs/PornoVideo/${numb}.mp4`}
   mag = 'üîûPornoVideoüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
video: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break


case 'egrill':{
  if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
   numb = Math.floor(Math.random() * 14) + 1
   wew = {url: `https://github.com/Herojoii/midiiporno/raw/main/packs/EgrilVideo/%20${numb}.mp4`}
   mag = 'üîûEgrilVideoüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
video: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break
////////FIM PORNO//////////

////////////MIDIA///////////



case 'classica':
 numb = Math.floor(Math.random() * 29) + 1
wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/Cl%C3%A1ssica/${numb}.mp3`}
destiny.sendMessage(from, {audio: wew, mimetype: 'audio/mp4'})
buttons2 = [
¬† {buttonId: `${prefix + command}`, buttonText: {displayText: 'ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "pressione bot√£o h√° baixo para proxima m√∫sica ",
¬†¬†¬† footer: `${NomeDoBot}`,
¬†¬†¬† buttons: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg = destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break

case 'editsr':{
   numb = Math.floor(Math.random() * 24) + 1
   wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/EditSr/${numb}.mp4`}
   mag = 'Edit'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
video: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'editdc':{
   numb = Math.floor(Math.random() * 31) + 1
   wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/Editdanca/${numb}.mp4`}
   mag = 'Edit Dan√ßa'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
video: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break


case 'lillpe':
 numb = Math.floor(Math.random() * 23) + 1
wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/Lillpeep/${numb}.mp3`}
destiny.sendMessage(from, {audio: wew, mimetype: 'audio/mp4'})
buttons2 = [
¬† {buttonId: `${prefix + command}`, buttonText: {displayText: 'ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "pressione bot√£o h√° baixo para proxima m√∫sica ",
¬†¬†¬† footer: `${NomeDoBot}`,
¬†¬†¬† buttons: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg = destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break

case 'lofi':
 numb = Math.floor(Math.random() * 35) + 1
wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/Lofi/${numb}.mp3`}
destiny.sendMessage(from, {audio: wew, mimetype: 'audio/mp4'})
buttons2 = [
¬† {buttonId: `${prefix + command}`, buttonText: {displayText: 'ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "pressione bot√£o h√° baixo para proxima m√∫sica ",
¬†¬†¬† footer: `${NomeDoBot}`,
¬†¬†¬† buttons: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg = destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break

case 'musicasad':
 numb = Math.floor(Math.random() * 15)
wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/Musicsad/${numb}.mp3`}
destiny.sendMessage(from, {audio: wew, mimetype: 'audio/mp4'})
buttons2 = [
¬† {buttonId: `${prefix + command}`, buttonText: {displayText: 'ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "pressione bot√£o h√° baixo para proxima m√∫sica ",
¬†¬†¬† footer: `${NomeDoBot}`,
¬†¬†¬† buttons: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg = destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break

case 'remixgo':
 numb = Math.floor(Math.random() * 23)
wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/RemixGO/${numb}.mp3`}
destiny.sendMessage(from, {audio: wew, mimetype: 'audio/mp4'})
buttons2 = [
¬† {buttonId: `${prefix + command}`, buttonText: {displayText: 'ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "pressione bot√£o h√° baixo para proxima m√∫sica ",
¬†¬†¬† footer: `${NomeDoBot}`,
¬†¬†¬† buttons: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg = destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break

case 'remixbr':
 numb = Math.floor(Math.random() * 27)
wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/Remixbr/${numb}.mp3`}
destiny.sendMessage(from, {audio: wew, mimetype: 'audio/mp4'})
buttons2 = [
¬† {buttonId: `${prefix + command}`, buttonText: {displayText: 'ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "pressione bot√£o h√° baixo para proxima m√∫sica ",
¬†¬†¬† footer: `${NomeDoBot}`,
¬†¬†¬† buttons: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg = destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break

case 'rock':
 numb = Math.floor(Math.random() * 35)
wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/Rock/${numb}.mp3`}
destiny.sendMessage(from, {audio: wew, mimetype: 'audio/mp4'})
buttons2 = [
¬† {buttonId: `${prefix + command}`, buttonText: {displayText: 'ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "pressione bot√£o h√° baixo para proxima m√∫sica ",
¬†¬†¬† footer: `${NomeDoBot}`,
¬†¬†¬† buttons: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg = destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break

case 'rock':
 numb = Math.floor(Math.random() * 35)
wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/Rock/${numb}.mp3`}
destiny.sendMessage(from, {audio: wew, mimetype: 'audio/mp4'})
buttons2 = [
¬† {buttonId: `${prefix + command}`, buttonText: {displayText: 'ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "pressione bot√£o h√° baixo para proxima m√∫sica ",
¬†¬†¬† footer: `${NomeDoBot}`,
¬†¬†¬† buttons: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg = destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break

case 'samba':
 numb = Math.floor(Math.random() * 21)
wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/Samba/${numb}.mp3`}
destiny.sendMessage(from, {audio: wew, mimetype: 'audio/mp4'})
buttons2 = [
¬† {buttonId: `${prefix + command}`, buttonText: {displayText: 'ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "pressione bot√£o h√° baixo para proxima m√∫sica ",
¬†¬†¬† footer: `${NomeDoBot}`,
¬†¬†¬† buttons: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg = destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break

case 'shitpost':{
   numb = Math.floor(Math.random() * 107)
   wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/Shitpost/${numb}.mp4`}
   mag = 'Shit de criaüç∑'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
video: wew,
caption: mag,
footer: `${NomeDoBot}\n Podem ser atualizado com frequ√™ncia.`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'sad':{
   numb = Math.floor(Math.random() * 31)
   wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/Status%20sad/${numb}.mp4`}
   mag = 'Status Sad'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
video: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'tiktocsxy':{
   numb = Math.floor(Math.random() * 10)
   wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/Tiktoksexy/${numb}.mp4`}
   mag = 'üîû Tiktok Sexyüîû'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
video: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break

case 'trapbr':
 numb = Math.floor(Math.random() * 27)
wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/TrapBR/${numb}.mp3`}
destiny.sendMessage(from, {audio: wew, mimetype: 'audio/mp4'})
buttons2 = [
¬† {buttonId: `${prefix + command}`, buttonText: {displayText: 'ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "pressione bot√£o h√° baixo para proxima m√∫sica ",
¬†¬†¬† footer: `${NomeDoBot}`,
¬†¬†¬† buttons: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg = destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break

case 'trapgo':
 numb = Math.floor(Math.random() * 27)
wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/TrapGO/${numb}.mp3`}
destiny.sendMessage(from, {audio: wew, mimetype: 'audio/mp4'})
buttons2 = [
¬† {buttonId: `${prefix + command}`, buttonText: {displayText: 'ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "pressione bot√£o h√° baixo para proxima m√∫sica ",
¬†¬†¬† footer: `${NomeDoBot}`,
¬†¬†¬† buttons: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg = destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break

case 'xxtentacion':
 numb = Math.floor(Math.random() * 30)
wew = {url: `https://github.com/Herojoii/Midiaa/raw/main/Xxtentacion/${numb}.mp3`}
destiny.sendMessage(from, {audio: wew, mimetype: 'audio/mp4'})
buttons2 = [
¬† {buttonId: `${prefix + command}`, buttonText: {displayText: 'ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "pressione bot√£o h√° baixo para proxima m√∫sica ",
¬†¬†¬† footer: `${NomeDoBot}`,
¬†¬†¬† buttons: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg = destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break
//////FiM/////////

/////////Edits/////////

case 'akame-edit':{
   numb = Math.floor(Math.random() * 24)
   wew = {url: `https://github.com/Fohof300/edit1/raw/main/Akame%20edit/%20${numb}.mp4`}
   mag = 'ùêÄùê§ùêöùê¶ùêû ùê†ùêö ùêäùê¢ùê•ùê•'
let buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '‚è§ÕüÕûÕüÕû‚ùëÍ¶ΩÍ¶∑ùêèùêëùêéùêóùêàùêåùêé‚∏ô'}, type: 1},]
let buttonMessage = {
video: wew,
caption: mag,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
}
await destiny.sendMessage(from,buttonMessage, {quoted:info})
}
break




case 'printsite':
case 'print':
txt = args.join(" ")
if(txt.length < 8) return reply(`Digite qual site voc√™ deseja tirar o print, por Exemplo: ${prefix}printsite Google.com`)
reply(enviar.espere)
printp = await fetchJson(`https://aleatoryapi.herokuapp.com/api/ssweb?url=${txt}&apikey=${keyale}`)
printimg = await getBuffer(printp.link)
destiny.sendMessage(from, {image: printimg}, {quoted: info}).catch(e => {
reply('ERROR')
})
break

case 'ytsearch':
try {
psq = args.join(' ')
if(psq.length < 2) return reply(`O que voc√™ deseja encontrar?, diga o nome do v√≠deo ou da m√∫sica, e irei informar os links que correspondem.`)
blar = await fetchJson(`https://aleatoryapi.herokuapp.com/api/ytsrc?q=${psq}&apikey=${keyale}`)
pla = '==============\n\n'
for (let x of blar.resultado) {
pla += `Titulo: ${x.title}\n`
pla += `Link: ${x.url}`
pla += '\n\n=============\n\n'
}
reply(pla.trim())
} catch {
reply('Error!!')
}
break

case 'igdl':
case 'instadw': 
try {  
link = args.join(' ')
if (!link) return reply('Ops, insira o link de um video/foto do instagram.')
post = await fetchJson(`https://aleatoryapi.herokuapp.com/api/instagram?url=${link}&apikey=${keyale}`)
s_video = await getBuffer(post.resultado[0].downloadUrl)
destiny.sendMessage(from, {video: s_video}, {quoted: info})
} catch {
reply('O v√≠deo deve ser privado, ou √© imagem, s√≥ pode video.')
}
break

case 'twitter':
link = args.join(' ')
if (!link) return reply('Ops, insira o link de um video do twitter')
reply(enviar.espere)
post = await fetchJson(`https://aleatoryapi.herokuapp.com/api/twitter?link=${link}&apikey=${keyale}`)
descc = post.resultado.desc
video_hd = await getBuffer(post.resultado.HD)
destiny.sendMessage(from, {video: video_hd, caption: descc}, {quoted: info}).catch(e => {
reply('Error!!')
})
break



case 'ytmp4':
qd = args.join(" ")
if(qd.length < 7) return reply('Voc√™ deve pegar o link do YouTube gerado pelo ytsearch ou do pr√≥prio YouTube mesmo, e usar com esse comando, e ele enviar√° seu video / m√∫sica de video')
reply(enviar.espere)
res = await fetchJson(`https://aleatoryapi.herokuapp.com/api/ytsrc?q=${qd}&apikey=${keyale}`)

blaimg = await getBuffer(res.resultado[0].image)

bla = `Titulo: ${res.resultado[0].title}\nVisualiza√ß√µes: ${res.resultado[0].views}\nTempo: ${res.resultado[0].duration.timestamp}\nCanal: ${res.resultado[0].author.name}\n`

destiny.sendMessage(from, {image: blaimg, caption: bla}, {quoted: info})
bla = await fetchJson(`https://aleatoryapi.herokuapp.com/api/ytmp4-2?q=${q}&apikey=${keyale}`)
blabla = await getBuffer(bla[0].link)
destiny.sendMessage(from, {video: blabla, mimetype: 'video/mp4'}, {quoted: info}).catch(e => {
reply('ERROR')
})
break

case 'ytmp3':
qd = args.join(" ")
if(qd.length < 7) return reply('Voc√™ deve pegar o link do YouTube gerado pelo ytsearch ou do pr√≥prio YouTube mesmo, e usar com esse comando, e ele enviar√° seu √°udio / m√∫sica')
reply(enviar.espere)
res = await fetchJson(`https://aleatoryapi.herokuapp.com/api/ytsrc?q=${qd}&apikey=${keyale}`)

blaimg = await getBuffer(res.resultado[0].image)

bla = `Titulo: ${res.resultado[0].title}\nVisualiza√ß√µes: ${res.resultado[0].views}\nTempo: ${res.resultado[0].duration.timestamp}\nCanal: ${res.resultado[0].author.name}\n`

destiny.sendMessage(from, {image: blaimg, caption: bla}, {quoted: info})
bla = await fetchJson(`https://aleatoryapi.herokuapp.com/api/ytmp3-2?q=${q}&apikey=${keyale}`)
audbla = await getBuffer(bla[0].link)
destiny.sendMessage(from, {audio: audbla, mimetype: 'audio/mp4'}, {quoted: info}).catch(e => {
reply('ERROR!!')
})
break
case 'testando1':
bla = await fetchJson(`http://aleatoryapi.herokuapp.com/api/youtubedl?url=https://youtu.be/ffaYsbjmaMs&apikey=key-expr`)
blabla = await getBuffer(bla.medias[0].url) 
destiny.sendMessage(from, {audio: blabla, mimetype: 'audio/mp4'}).catch(e => {
reply('ERROR!!')
})
break

case 'tiktok':
 sections = [
    {
	title: `TIKTOK PLAY`,
	rows: [
  	   {title: "[üîä] AUDIO", rowId: `${prefix}tiktokaudio ${args.join(' ')}`},
	   {title: "[üé•] VIDEO", rowId: `${prefix}tiktokv√≠deo ${args.join(' ')}`},
	]
    },
]
  listMessage2 = {
  text: 'ola escolha uma das op√ß√µes abaixo..',
  footer: 'Selecione um formato abaixo.',
  title: `Ol√° ${pushname}`,
  buttonText: "Clique",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'instagram':
 sections = [
    {
	title: `INSTA PLAY`,
	rows: [
  	   {title: "[‚ñ∂Ô∏è] AUDIO", rowId: `${prefix}instaaudio ${args.join(' ')}`},
	   {title: "[üìÅ] VIDEO", rowId: `${prefix}instavideo ${args.join(' ')}`},
	]
    },
]
  listMessage2 = {
  text: 'ola caso queira baixar.',
  footer: 'Selecione um formato abaixo.',
  title: `Ol√° ${pushname}`,
  buttonText: "Clique",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'facebook':
 sections = [
    {
	title: `FACE PLAY`,
	rows: [
  	   {title: "[üîä] AUDIO", rowId: `${prefix}faceaudio ${args.join(' ')}`},
	   {title: "[üé•] VIDEO", rowId: `${prefix}facev√≠deo ${args.join(' ')}`},
	]
    },
]
  listMessage2 = {
  text: 'ola escolha um dos formatos abaixo.',
  footer: 'Selecione de acordo com sua necessidade.',
  title: `Ol√° ${pushname}`,
  buttonText: "Clique",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'facev√≠deo':
case 'instavideo':
case 'tiktokv√≠deo':
try {
reply(enviar.espere)
var {savefrom} = require('./armor/js/savefrom.js')
wew = await savefrom(q)
jet = {url: wew.url[0].url}
destiny.sendMessage(from, {video: jet, mimetype: "video/mp4"}, {quoted: info})
} catch {
reply('N√£o foi poss√≠vel baixar este v√≠deo üòî')
}
break

case 'faceaudio':
case 'tiktokaudio':
case 'instaudio':
try {
reply('fazendo download do seu comando‚ÄºÔ∏è') 
var {savefrom} = require('./lib/savefrom.js')
wew = await savefrom(q)
jet = {url: wew.url[0].url}
await destiny.sendMessage(from, {audio: jet, mimetype: 'audio/mpeg', contextInfo: {externalAdReply : {title: `${NomeDoBot}`, renderLargerThumbnail:false, showAdAttribution: true, body: "ESPERO QUE GOSTE DO BOT", mediaUrl: `${q}`, mediaType: 2, thumbnail: fs.readFileSync('./logos/logo2.jpg') }}}, {quoted: selo})
} catch {
reply('N√£o foi poss√≠vel baixar este √°udio üòî')
}
break

case 'bc': case 'bcgroup': case 'transmitir': case 'transmiss√£o': {
if (!SoDono && !isCmdy && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (!q) return reply( `Texto onde?\n\nExemplo : ${prefix + command} BOA VISTA `)
let getGroups = await destiny.groupFetchAllParticipating()
let groups = Object.entries(getGroups).slice(0).map(entry => entry[1])
let anu = groups.map(v => v.id)
for (let i of anu) {
await sleep(1500)
let txt = `„Äå TRANSMISS√ÉO DO BOT „Äç\n\n ${q}`
destiny.sendMessage(i, txt, destiny.user.name,  btn)
}
reply(`Enviando com sucesso `)
}
break

case 'playstore':
if(!q) return reply('Digite um nome de um app que deseja pesquisar.')
let play = await hx.playstore(q);
let stor = "‚ùâ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùâ\n"
for (let i of play) {
stor += `\n*„Äå _PLAY STORE_ „Äç*\n
- üìÑ *Nome* : ${i.name}
- üåÄ *Link* : ${i.link}\n
- ü§µüèª *desenvolvedor* : ${i.developer}
- üì§ *Desenvolvedor link* : ${i.link_dev}\n‚ùâ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùâ`
}
reply(stor)
break

case 'igstalk':
if(args.length < 1) return reply('Cad√™ o nome?')
usur = args.join(" ")
teste = await fetchJson(`https://pencarikode.xyz/stalk/instagram?username=${usur}&apikey=pais`)
teste = teste.result.user
corno = `Nome : ${teste.username}\n`
corno += `PK : ${teste.pk}\n`
testebf = await getBuffer(`${teste.profile_pic_url}`)
await destiny.sendMessage(from, {image: testebf, caption: `${corno}`}, {quoted:info})
break

case 'celular':
if (!q) return reply(`Qual celular voc√™ est√° procurando?`)
teks = args.join(' ')
anu = await fetchJson(`https://api-yogipw.herokuapp.com/api/search/gsmarena?query=${q}`)
const busca_celular = 
`
üìù Titulo: ${anu.judul}
‚ùó√öltima atualiza√ß√£o: ${anu.rilis}
üì± Tamanho do celular: ${anu.ukuran}
‚ö° Tipo: ${anu.type}
üóÉÔ∏è Armazenamento: ${anu.storage}
üì¥ Tela: ${anu.display}
üì≥ Polegada: ${anu.inchi}
üî∞ Resolu√ß√£o da c√¢mera: ${anu.pixel}
üì≤ Resolu√ß√£o do video: ${anu.videoPixel}
üí≠ Ram do celular: ${anu.ram}
üë§ Hardware do celular: ${anu.chipset}
‚ö†Ô∏è Bateria: ${anu.batrai}
üîã Tipo da bateria: ${anu.merek_batre}`
 wew = fs.readFileSync('./logos/logo2.jpg')
await destiny.sendMessage(from, {image: wew, thumbnail:null, caption: `${busca_celular}`}, {quoted: info})
break

case 'gimage':
blar = Math.floor(Math.random() * 5)
bla = await fetchJson(`http://aleatoryapi.herokuapp.com/api/gimage?txt=${q}&apikey=${keyale}`)
blabla = await getBuffer(bla.resultado.result[`${blar}`].url) 
destiny.sendMessage(from, {image: blabla}).catch(e => {
reply("ERROR, n√£o foi encontrado, tente novamente...")
})
break

case 'xvideo':
  if (!q) return reply('Deseja pesquisa qual tipo de sexo?')
var { data } = await axios("https://www.xvideos.com/?k=" + args.join(" ").replace(/ /g, "+") + "&sort=random", { method: "get", headers: { "user-agent":  'Googlebot' } });
var $ = cheerio.load(data);
var g = $('p.title').length;
var n = g > 0 ? g : reply('erro');
var sections = [{ title: "cu", rows: [] }];
for (let i = 0; i < n; i++) {
sections[0].rows.push({
title: $('p.title').eq(i).find('a').attr('title'),
rowId: prefix + "xvdl " + "https://www.xvideos.com" + $('p.title').eq(i).find('a').attr('href')
})
};
await destiny.sendMessage(from, { text: n + (n >= 2 ? " videos" : " video"), title: "Resultados para: " + args.join(" "), buttonText: "SELECIONAR", sections });
break

case 'xvdl': {(async () => {
if (!isGroup) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
if(!args.join(" ").includes('xvideos')) return reply("CAD√ä O LINK?")
  reply(enviar.espere)
var {data} = await axios(args.join(" "), {
method: "get", headers: {
"user-agent": 'Googlebot'
}})
var $ = cheerio.load(data)
var a = $('title').text().replace(" - XVIDEOS.COM", "")
var imguff = $('html').html().split("html5player.setThumbUrl('")[1].split("');")[0]
var low = $('html').html().split("html5player.setVideoUrlLow('")[1].split("');")[0]
var high = $('html').html().split("html5player.setVideoUrlHigh('")[1].split("');")[0]
var u = a.slice(0, 50) + '...\n' + $('div.video-metadata').find('ul').find('li').find('a').find('span.name').eq(0).text() + '\n' + $('h2.page-title').find('span.duration').text() + '\n' + $('div#v-views').find('strong').eq(0).text() + ' Views : ' + $('div.good').find('span').text() + ' üëç'
sendBimg(from, `${imguff}`, `${u}`, `${NomeDoBot}`, [
{buttonId: `${prefix}xvdllow ${low}`, buttonText: {displayText: `üî• ùêÅùêÄùêàùêóùêÄ ùêêùêîùêÄùêãùêàùêÉùêÄùêÉùêÑ üî•`}, type: 1}, {buttonId: `${prefix}xvdllow ${high}`, buttonText: {displayText: `üî• ùêåùêÑÃÅùêÉùêàùêÄ ùêêùêîùêÄùêãùêàùêÉùêÄùêÉùêÑ üî•`}, type: 1}], info)
})().catch((err) => reply(String("teste" ? err: "erro")))
}
break

case 'xvdllow':
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18`)
reply('irei enviar no seu privado...')
anu = await getBuffer(`${q}`)
destiny.sendMessage(sender, {video: anu, mimetype: 'video/mp4'}, {quoted: info})
break




//================Play do YouTube 

case 'play':
try {
var aramas = await yts(args.join(' '))
} catch {
reply('Erro, pesquisa n√£o encontrada')
}
var objs = []
for (let x of aramas.all) {
let data = {
rowId: `${prefix}song `+ x.title,
title: x.title,
description: `Dura√ß√£o: ${x.timestamp}`
}
objs.push(data)
}
var sections = [
{
title: " ",
rows: objs
}
]
var msc = {
text: `üîé *Pesquisa:* ${q}`,
footer: '_lista completa de coisas relacionadas a sua pesquisa, escolha uma das opcoes abaixo pra mim termina de executar o download.',
title: "pesquisa concluida",
buttonText: "CLIQUE",
sections
}
destiny.sendMessage(from, msc, {quoted: selo})
break

case 'videolist':
 sections = [
    {
	title: `VIDEO PLAY`,
	rows: [
  	   {title: "[üé¨] 360p", rowId: `${prefix}360p ${args.join(' ')}`},
	   {title: "[üé¨] 480p", rowId: `${prefix}480p ${args.join(' ')}`},
	   {title: "[üé¨] 720p", rowId: `${prefix}720p ${args.join(' ')}`},
	   {title: "[üé¨] 1080p", rowId: `${prefix}1080p ${args.join(' ')}`},
	]
    },
]
  listMessage2 = {
  text: 'ola escolha a qualidade do v√≠deos.',
  footer: 'Selecione uma das qualidades.',
  title: `Ol√° ${pushname}`,
  buttonText: "Clique",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'audiolist':
 sections = [
    {
	title: `AUDIO PLAY`,
	rows: [
  	   {title: "[üîä] MP3", rowId: `${prefix}audioplay ${args.join(' ')}`},
	   {title: "[üîä] audio", rowId: `${prefix}audioplay2 ${args.join(' ')}`},
	]
    },
]
  listMessage2 = {
  text: 'ola escolha um dos plays abaixo..',
  footer: 'Selecione um dos plays abaixo..',
  title: `Ol√° ${pushname}`,
  buttonText: "Clique",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'song': {
if(!q) return reply(`- Exemplo: ${prefix}play nome da m√∫sica\na m√∫sica ser√° baixada, s√≥ basta escolher √°udio ou v√≠deo ou document√°rio, se n√£o baixar, o YouTube privou de n√£o baixarem, ou algo do tipo..`)
res = await yts(q)
if(res.all[0].timestamp.length >= 7) return reply("Desculpe, este video ou audio √© muito grande, n√£o poderei realizar este pedido, pe√ßa outra m√∫sica abaixo de uma hora.")
reply(enviar.espere)
bla = `
„Äé @${NomeDoBot} „Äè
‚îè‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùÆñ£ò‚ùØ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îì
‚îÇ‚¨° 
‚îÇ‚¨° Titulo: ${res.all[0].title}
‚îÇ‚¨° Dura√ß√£o: ${res.all[0].timestamp}
‚îÇ‚¨° visualiza√ß√£o: ${res.all[0].views}
‚îÇ‚¨° canal: ${res.all[0].author.name}
‚îÇ‚¨° Link: 
‚îÇ‚¨° ${res.all[0].url}
‚îÇ‚¨° 
‚îó‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùÆñ£ò‚ùØ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îõ`
let buttons = [
{buttonId: `${prefix}audiolist ${res.all[0].url}`, buttonText: {displayText: '[ üîä ] Audio'}, type: 1},
{buttonId: `${prefix}videolist ${res.all[0].url}`, buttonText: {displayText: '[ üéûÔ∏è ] Video'}, type: 1},
{buttonId: `${prefix}playauxi ${res.all[0].url}`, buttonText: {displayText: '[ üìÇ ] Doc'}, type: 1}
]
let buttonMessage = {
image: { url: res.all[0].image },
caption: bla,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/audio.jpg"),
mediaType:2,
mediaUrl: ``,
sourceUrl: res.all[0].url
}}
}
destiny.sendMessage(from, buttonMessage, { quoted: selo })
}
break

case 'playauxi':
res = await yts(q)
bla = `‚ï≠‚ïº‚ïæ‚ïº‚ïæ„Äé ‚Ñôùïùùïíùï™ ùïêùï†ùï¶ùï•ùï¶ùïìùïñ „Äè‚ïº‚ïæ‚ïº‚ïæ‚ïÆ
‚îÇ
‚îÉ‚ö†Ô∏è Titulo : ${res.all[0].title}
‚îÇ‚è∞ Dura√ß√£o :  ${res.all[0].timestamp}
‚îÉüë• visu : ${res.all[0].views}
‚îÉüë§ canal :${res.all[0].author.name}
‚ï∞‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚òÖ·≠ÑÍ¶ø·≠ÑÍ¶ø`
sendBimgT(from, `${res.all[0].image}`, bla, `${NomeDoBot}`, [{index: 1, urlButton: {displayText: 'suporte „Äéüë§„Äè', url: `https://wa.me/${setting.numerodono}`}}, {index: 2, urlButton: {displayText: 'Download„Äéüîó„Äè', url: `http://deturl.com/${res.all[0].url}`}}, {index: 2, quickReplyButton: {displayText: 'Doc Video „Äéüé¨„Äè', id: `${prefix}videoplaydoc ${q}`}},
{index: 3, quickReplyButton: {displayText: 'Doc Audio„Äéüéµ„Äè', id: `${prefix}audioplaydoc ${q}`}}], selo)
break 

case 'audioplay':
try {
sendBtext(from, enviar.espere, `@~ usu√°rio: ${pushname}\n@~ Grupo: ${groupName}\n@~ cmd: ${prefix + command}`, [{buttonId: `nd`, buttonText: {displayText: `Obg ${NomeDoBot}`}, type: 1}], info)
res = await yts(q)
ytdl = require('ytdl-core')
wew = getRandom('.mp3')
bx = await ytdl(res.all[0].url, { quality: '249' }).pipe(fs.createWriteStream(wew))
bx.on("finish", function () {
destiny.sendMessage(from, { audio: fs.readFileSync(wew), mimetype:"audio/mp4", caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body: `${NomeDoBot}`,
renderLargerThumbnail: true,
showAdAttribution: true,
mediaType:2,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
sourceUrl: ``,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted: info}).then(() => fs.unlinkSync(wew) )
})
} catch {
reply('N√£o foi poss√≠vel baixar este √°udio üòî')
}
break

case 'audioplay2':
try {
sendBtext(from, enviar.espere, `@~ usu√°rio: ${pushname}\n@~ Grupo: ${groupName}\n@~ cmd: ${prefix + command}`, [{buttonId: `nd`, buttonText: {displayText: `Obg ${NomeDoBot}`}, type: 1}], info)
res = await yts(q)
ytdl = require('ytdl-core')
wew = getRandom('.mp3')
bx = await ytdl(res.all[0].url, { quality: '249' }).pipe(fs.createWriteStream(wew))
bx.on("finish", function () {
destiny.sendMessage(from, { audio: fs.readFileSync(wew), mimetype: "audio/mp4", ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
image: `${res.all[0].image}`,
title:``,
body: `${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: fs.readFileSync("./logos/audio.jpg"),
sourceUrl: `${res.all[0].url}`,
mediaUrl: `${res.all[0].image}`,
}}}, {quoted: info}).then(() => fs.unlinkSync(wew) )
})
} catch {
reply('N√£o foi poss√≠vel baixar este √°udio üòî')
}
break

case '360p':
case '480p':
case '720p':
case '1080p':
ytdl = require('ytdl-core')
if (command === '360p'){
rafa = getRandom('.mp4')
bx = await ytdl(args.join(' '), { quality: '18' }).pipe(fs.createWriteStream(rafa))
bx.on("finish", function () {
destiny.sendMessage(from, {video: fs.readFileSync(rafa)}, {quoted: info}).then(() => fs.unlinkSync(rafa) )
})
return
}
var { formats } = await ytdl.getInfo(args.join(' '))
var a = []
for (let i of formats) {
i.hasVideo ? a.push(i.itag) : ""
}
if (command === '480p'){
var b = a.indexOf(135) >= 0 ? '135' : a.indexOf(244) >= 0 ? '244' : a.indexOf(333) >= 0 ? '333' : a.indexOf(397) >= 0 ? '397' : a.indexOf(697) >= 0 ? '697' : 'undefined'
}
if (command === '720p'){
var b = a.indexOf(136) >= 0 ? '136' : a.indexOf(247) >= 0 ? '247' : a.indexOf(298) >= 0 ? '298' : a.indexOf(302) >= 0 ? '302' : a.indexOf(334) >= 0 ? '334' : a.indexOf(398) >= 0 ? '398' : a.indexOf(698) >= 0 ? '698' : 'undefined'
}
if (command === '1080p'){
var b = a.indexOf(137) >= 0 ? '137' : a.indexOf(248) >= 0 ? '248' : a.indexOf(299) >= 0 ? '299' : a.indexOf(303) >= 0 ? '303' : a.indexOf(335) >= 0 ? '335' : a.indexOf(399) >= 0 ? '399' : a.indexOf(699) >= 0 ? '699' : 'undefined'
}
if (b === 'undefined') return reply(`V√≠deo em ${command} n√£o encontrado`)
jet = getRandom('.mp4')
wew = getRandom('.m4a')
bx = await ytdl(args.join(' '), { quality: '140' }).pipe(fs.createWriteStream(wew))
cx = await ytdl(args.join(' '), { quality: b }).pipe(fs.createWriteStream(jet))
bx && cx.on("finish", function () {
rafa = getRandom('.mp4')
exec(`ffmpeg -i ${jet} -i ${wew} -c copy ${rafa}`, (err) => {
fs.unlinkSync(jet)
fs.unlinkSync(wew)
destiny.sendMessage(from, {video: fs.readFileSync(rafa)}, {quoted: info}).then(() => fs.unlinkSync(rafa))
})
})
break

case 'audioplaydoc':
try {
sendBtext(from, enviar.espere, `@~ usu√°rio: ${pushname}\n@~ Grupo: ${groupName}\n@~ cmd: ${prefix + command}`, [{buttonId: `nd`, buttonText: {displayText: `Obg ${NomeDoBot}`}, type: 1}], info)
res = await yts(q)
ytdl = require('ytdl-core')
wew = getRandom('.mp3')
bx = await ytdl(res.all[0].url, { quality: '249' }).pipe(fs.createWriteStream(wew))
bx.on("finish", function () {
destiny.sendMessage(from, { document: fs.readFileSync(wew), mimetype: "audio/mp4", fileName: `${res.all[0].title}` }, {quoted: info}).then(() => fs.unlinkSync(wew) )
})
} catch {
reply('N√£o foi poss√≠vel baixar este √°udio üòî')
}
break

case 'videoplaydoc':
try {
sendBtext(from, enviar.espere, `@~ usu√°rio: ${pushname}\n@~ Grupo: ${groupName}\n@~ cmd: ${prefix + command}`, [{buttonId: `nd`, buttonText: {displayText: `Obg ${NomeDoBot}`}, type: 1}], info)
res = await yts(q)
ytdl = require('ytdl-core')
rafa = getRandom('.mp4')
bx = await ytdl(res.all[0].url, { quality: '18' }).pipe(fs.createWriteStream(rafa))
bx.on("finish", function () {
destiny.sendMessage(from, { document: fs.readFileSync(rafa), mimetype: "video/mp4", fileName: `${res.all[0].title}` }, {quoted: info}).then(() => fs.unlinkSync(rafa) )
})
} catch {
reply('N√£o foi poss√≠vel baixar este v√≠deo üòî')
}
break

case 'letra':
if (args.length < 1) return reply(`e o nome da m√∫sica? Exemplo: ${prefixobot + command} the perfect girl`)
teks = body.slice(7)
res = await lirikLagu(teks)
reply(`
Nome: ${teks}

Letras: ${res[0].result}
`)
break

//======(CASE-BEM-VINDO/E ETC..)======\\

//======(CASE-BEM-VINDO/E ETC..)======\\

case 'bemvindo':
case 'welcome':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isWelkom) return reply('Ja esta ativo')
welkom.push(from)
fs.writeFileSync('./datab/grupos/welkom.json', JSON.stringify(welkom))
reply('üåÄ Ativou com sucesso o recurso de bem vindo neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isWelkom) return reply('Ja esta Desativado')
pesquisar = from
processo = welkom.indexOf(pesquisar)
while(processo >= 0){
welkom.splice(processo, 1)
processo = welkom.indexOf(pesquisar)
}
fs.writeFileSync('./datab/grupos/welkom.json', JSON.stringify(welkom))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de bemvindo neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

//================================\\



//=============(ANTS)==============\\

case 'antictt':
case 'anticontato':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAntiCtt) return reply('Ja esta ativo')
antictt.push(from)
fs.writeFileSync('./datab/ants/antictt.json', JSON.stringify(antictt))
reply('üåÄ Ativou com sucesso o recurso de anticontato neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isAntiCtt) return reply('Ja esta Desativado')
pesquisar = from
processo = antictt.indexOf(pesquisar)
while(processo >= 0){
antictt.splice(processo, 1)
processo = antictt.indexOf(pesquisar)
}
fs.writeFileSync('./datab/ants/antictt.json', JSON.stringify(antictt))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de anticontato neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'anticatalogo':
case 'anticatalg':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAnticatalogo) return reply('Ja esta ativo')
anticatalogo.push(from)
fs.writeFileSync('./datab/ants/anticatalogo.json', JSON.stringify(anticatalogo))
reply('üåÄ Ativou com sucesso o recurso de anticatalogo neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isAnticatalogo) return reply('Ja esta Desativado')
pesquisar = from
processo = anticatalogo.indexOf(pesquisar)
while(processo >= 0){
anticatalogo.splice(processo, 1)
processo = anticatalogo.indexOf(pesquisar)
}
fs.writeFileSync('./datab/ants/anticatalogo.json', JSON.stringify(anticatalogo))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de anticatalogo neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antifake':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAntifake) return reply('Ja esta ativo')
antifake.push(from)
fs.writeFileSync('./datab/ants/antifake.json', JSON.stringify(antifake))
reply('üåÄ Ativou com sucesso o recurso de antifake neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isAntifake) return reply('Ja esta Desativado')
pesquisar = from
processo = antifake.indexOf(pesquisar)
while(processo >= 0){
antifake.splice(processo, 1)
processo = antifake.indexOf(pesquisar)
}
fs.writeFileSync('./datab/ants/antifake.json', JSON.stringify(antifake))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de antifake neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antiloc':
if (!isGroup) return reply(` SOMENTE EM GRUPOS`)
if (!isGroupAdmins) return reply(`PRECISA SER ADMIN`)
if (!isBotGroupAdmins) return reply(` O BOT PRECISA SER ADMIN`)
try {														 
if (args.length < 1) return reply('1 pra ativar, 0 pra desligar')
if (Number(args[0]) === 1) {
if(Antiloc) return reply('J√° est√° Ativo.')
antiloc.push(from)
fs.writeFileSync('./datab/ants/antiloc.json', JSON.stringify(antiloc))
reply('Ativou com sucesso o recurso de anti loc neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if(!Antiloc) return reply('J√° est√° Desativado.')
antiloc.splice(from, 1)
fs.writeFileSync('./datab/ants/antiloc.json', JSON.stringify(antiloc))
reply('Desativou com sucesso o recurso de anti loc neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
} catch {
reply('Deu erro, tente novamente :/')
}
break

case 'antidocumento':
if (!isGroup) return reply(` SOMENTE EM GRUPOS`)
if (!isGroupAdmins) return reply(`PRECISA SER ADMIN`)
if (!isBotGroupAdmins) return reply(` O BOT PRECISA SER ADMIN`)
try {														 
if (args.length < 1) return reply('1 pra ativar, 0 pra desligar')
if (Number(args[0]) === 1) {
antidoc.push(from)
fs.writeFileSync('./datab/ants/antidoc.json', JSON.stringify(antidoc))
reply('Ativou com sucesso o recurso de anti documento neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
antidoc.splice(from, 1)
fs.writeFileSync('./datab/ants/antidoc.json', JSON.stringify(antidoc))
reply('Desativou com sucesso o recurso de antidocumento neste grupo‚úîÔ∏è')
 } else {
reply('1 para ativar, 0 para desativar')
}
} catch {
reply('Deu erro, tente novamente :/')
}
break

case 'antiimg':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiImg) return reply('J√° Esta ativo')
antiimg.push(from)
fs.writeFileSync('./datab/ants/antiimg.json', JSON.stringify(antiimg))
reply('Ativou com sucesso o recurso de anti imagem neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiImg) return reply('Ja esta Desativado.')
antiimg.splice(from, 1)
fs.writeFileSync('./datab/ants/antiimg.json', JSON.stringify(antiimg))
reply('Desativou com sucesso o recurso de anti imagem neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antisticker':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiSticker) return reply('J√° Esta ativo')
antisticker.push(from)
fs.writeFileSync('./datab/ants/antisticker.json', JSON.stringify(antisticker))
reply('Ativou com sucesso o recurso de anti sticker neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiSticker) return reply('Ja esta Desativado.')
antisticker.splice(from, 1)
fs.writeFileSync('./datab/ants/antisticker.json', JSON.stringify(antisticker))
reply('Desativou com sucesso o recurso de anti sticker neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antinotas':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiNotas) return reply('J√° Esta ativo')
antinotas.push(from)
fs.writeFileSync('./datab/ants/antinotas.json', JSON.stringify(antinotas))
reply('Ativou com sucesso o recurso de anti notas neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiNotas) return reply('Ja esta Desativado.')
antinotas.splice(from, 1)
fs.writeFileSync('./datab/ants/antinotas.json', JSON.stringify(antinotas))
reply('Desativou com sucesso o recurso de anti notas neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antivideo':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiVid) return reply('Ja esta ativo')
antivid.push(from)
fs.writeFileSync('./datab/ants/antivideo.json', JSON.stringify(antivid))
reply('Ativou com sucesso o recurso de anti video neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiVid) return reply('Ja esta Desativado')
antivid.splice(from, 1)
fs.writeFileSync('./datab/ants/antivideo.json', JSON.stringify(antivid))
reply('Desativou com sucesso o recurso de anti video neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antiaudio':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiAudio) return reply('Ja esta ativo')
antiaudio.push(from)
fs.writeFileSync('./datab/ants/antiaudio.json', JSON.stringify(antiaudio))
reply('Ativou com sucesso o recurso de anti audio neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiAudio) return reply('Ja esta Desativado')  
antiaudio.splice(from, 1)
fs.writeFileSync('./datab/ants/antiaudio.json', JSON.stringify(antiaudio))
reply('Desativou com sucesso o recurso de anti audio neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'limitecaracteres':
case 'limiteflood':  
if (!isGroup) return reply(enviar.msg.adm)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar. info.Badmin)
if (args.length < 1) return reply(`Digite ${prefix + command} 1 para ativar`)
if (Number(args[0]) === 1) {
if (isAntiFlood) return reply(`üåÄ O recurso limite de caracteres at√© ${limitefl} j√° est√° ativo no grupo üåÄ`)
antiflood.push(from)
fs.writeFileSync('./datab/usuarios/antiflood.json', JSON.stringify(antiflood))
reply(`‚úîÔ∏è O recurso limite de caracteres ${limitefl} foi ativado nesse grupoüìù`)
} else if (Number(args[0]) === 0) {
 if (!isAntiFlood) return reply('‚úîÔ∏è O recurso limite de caracteres n√£o est√° ativado no grupo üìù')
let position = false
Object.keys(antiflood).forEach((i) => {
if (antiflood[i] === from) {
position = i
}
})
if (position !== false) {
antiflood.splice(position, 1)
fs.writeFileSync('./datab/usuarios/antiflood.json', JSON.stringify(antiflood))
}
reply('O recurso limite de caracteres foi desativado nesse grupo ‚úîÔ∏è')
} else {
reply(`Digite ${prefix + command} 1 para ativar, 0 para desativar o recurso`)
}
break

case 'resetarttt':
case 'rvttt':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
daily.splice([])
fs.writeFileSync('./datab/usuarios/diario.json', JSON.stringify(daily))
reply('‚ÄºÔ∏èO jogo da velha TTT foi resetado com sucesso..‚úîÔ∏è')
reply(`${prefix}reiniciar`)
break

case 'reiniciar':
if(!SoDono) return
rp = (Date.now() / 1000) - info.messageTimestamp
blar = process.uptime()
reply(process.exit())
reply(`Reiniciei em ${String(rp.toFixed(3))}m\n\nTempo Ativo : ${kyun(blar)}`)
break

case 'antipalavr√£o':
case 'antipalavrao':  
if (!isGroup) return reply(`[‚ùó] SOMENTE EM GRUPOS`)
if (!isGroupAdmins) return reply(`[‚ùó] O PRECISA SER ADMIN`)
if (!isBotGroupAdmins) return reply(`[‚ùó] O BOT PRECISA SER ADMIN`)
if (args.length < 1) return reply(`[‚ùó] 1 / 0, Exemplo ${prefix + command} 1`)
if (Number(args[0]) === 1) {
if (isPalavrao) return reply('*J√° esta ativado...*')
palavrao.push(from)
fs.writeFileSync('./datab/grupos/palavrao.json', JSON.stringify(palavrao))
reply(`[‚ùó] anti palavr√£o ativado`)
} else if (Number(args[0]) === 0) {
if (!isPalavrao) return reply('*J√° esta Desativado...*')  
palavrao.splice(from, 1)
fs.writeFileSync('./datab/grupos/palavrao.json', JSON.stringify(palavrao))
reply(`[‚ùó] anti palavr√£o desativado...`)
} else {
reply(`[‚ùó] 1 / 0, Exemplo ${prefix + command} 0`)
}
await limitAdd(sender)
break

case 'antilinkhard':
case 'antilink':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAntiLinkHard) return reply('Ja esta ativo')
antilinkhard.push(from)
fs.writeFileSync('./datab/ants/antilinkhard.json', JSON.stringify(antilinkhard))
reply('üåÄ Ativou com sucesso o recurso de antilink hardcore neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isAntiLinkHard) return reply('Ja esta Desativado')
pesquisar = from
processo = antilinkhard.indexOf(pesquisar)
while(processo >= 0){
antilinkhard.splice(processo, 1)
processo = antilinkhard.indexOf(pesquisar)
}
fs.writeFileSync('./datab/ants/antilinkhard.json', JSON.stringify(antilinkhard))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de antilink harcore neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'autofigu': case 'autosticker':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAutofigu) return reply('Ja esta ativo')
autofigu.push(from)
fs.writeFileSync('./datab/grupos/autofigu.json', JSON.stringify(autofigu))
reply('üåÄ Ativou com sucesso o recurso de auto figurinhas neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isAutofigu) return reply('Ja esta Desativado')
pesquisar = from
processo = autofigu.indexOf(pesquisar)
while(processo >= 0){
autofigu.splice(processo, 1)
processo = autofigu.indexOf(pesquisar)
}
fs.writeFileSync('./datab/grupos/autofigu.json', JSON.stringify(autofigu))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de auto figurinhas neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antilinkgp':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAntilinkgp) return reply('Ja esta ativo')
antilinkgp.push(from)
fs.writeFileSync('./datab/ants/antilinkgp.json', JSON.stringify(antilinkgp))
reply('üåÄ Ativou com sucesso o recurso de antilinkgp üìù')
} else if (Number(args[0]) === 0) {
if (!isAntilinkgp) return reply('Ja esta Desativado')
pesquisar = from
processo = antilinkgp.indexOf(pesquisar)
while(processo >= 0){
antilinkgp.splice(processo, 1)
processo = antilinkgp.indexOf(pesquisar)
}
fs.writeFileSync('./datab/ants/antilinkgp.json', JSON.stringify(antilinkgp))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de antilink de grupo ‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'bemvindo2':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply(`Digite da forma correta:\nComando: ${prefix + command} 1 para ativar `)
if (Number(args[0]) === 1) {
reply(`Devo Lembrar que voc√™ deve determinar a legenda desse grupo, ap√≥s ativar essa fun√ß√£o, a legenda funciona por grupo, se deseja saber mais informa√ß√µes sobre, digite ${prefix}infobemvindo`)  
if (isWelkom2) return reply('‚ùéO recurso j√° est√° ativado no grupo‚ùé')
welkom2.push(from)
fs.writeFileSync('./datab/usuarios/vacilo.json', JSON.stringify(welkom2))
reply('‚úÖO recurso foi ativado‚úÖ')
} else if (Number(args[0]) === 0) {
if (!isWelkom2) return reply('‚ùéO recurso n√£o est√° ativado no grupo‚ùé')
let position = false
Object.keys(welkom2).forEach((i) => {
if (welkom2[i] === from) {
position = i
}
})
if (position !== false) {
welkom2.splice(position, 1)
fs.writeFileSync('./datab/usuarios/vacilo.json', JSON.stringify(welkom2))
}
reply('‚ùåO recurso foi desativado‚ùå')
} else {
reply(`Digite da forma correta:\nComando: ${prefix + command} 1, para ativar e 0 para desativar`)
}
break

//=====================Dinheiro üí∞üí∞üí∞

case 'carteira':
if (MoneyId === undefined){
rafa = {id: sender, nome: pushname, dinheiro: 0}
dinheiro.push(rafa)
fs.writeFileSync('./datab/jsons/dinheiro/dinheiro.json', JSON.stringify(dinheiro, null, 2))
}
userg = getMoney(sender)
blk = await getBuffer('https://telegra.ph/file/8233607db2c482dc14a53.jpg')
wew = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤üìÇ‚ù≥ Transfer√™ncia: Nubanküí≥
‚î£‚ù≤üí∞‚ù≥ Dinheiro: ${userg}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤üë•‚ù≥ Grupo: ${groupName}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero: ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {image:blk, caption: wew, footer: " ", templateButtons: [{index: 2, quickReplyButton: {displayText: 'üõíVoltar a Lojaüõí', id: `${prefix}loja`}},
{index: 2, quickReplyButton: {displayText: 'üí∞Ganhar mais Moneyüí∞', id: `${prefix}minerar`}}, 
{index: 3, quickReplyButton: {displayText: 'üí§Finalizarüí§', id: `nada`}}]}, {quoted: info})
break

case 'pix':
texto = args.join(' ')
if (isNaN(texto) || !texto) return reply(`Cade o valor, exemplo: ${prefix + command} 700`)
dinheiro.sort((a, b) => (a.dinheiro < b.dinheiro) ? 1 : -1)
var objs = []
for (let x of dinheiro){
var data = {
rowId: `${prefix}transferir ${x.id}#${texto}`,
title: x.nome,
description: `Saldo: ${x.dinheiro}`
}
objs.push(data)
}
  listMessage2 = {
  text: 'Ola voc√™ deseja transferir algum valor pra algu√©m? escolha pra quem voc√™ quer doar essa quantia, caso outra pessoa utilize essa lista, ser√° descontada do valor do indiv√≠duo',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections: [{
	title: `TRANSFER√äNCIA`,
	rows: objs
}]
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'transferir':
if (MoneyId === undefined) return reply(`Use primeiro o comando ${prefix}carteira`)
texto = args.join(' ')
texto1 = texto.split("#")[0]
texto2 = parseInt(texto.split("#")[1])
if(!texto.includes("#")) return
if (getMoneyId(texto1) == undefined) return reply('Chave Pix n√£o encontrada')
wew = {url: 'https://telegra.ph/file/ae390c9663c6ac74c4eb3.jpg'}
rafa = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
          _‚ö†Ô∏éùô≥ùô¥ùöÇùöÉùô∏ùôΩùôæ‚ö†Ô∏é_
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤ ùôΩùöòùöñùöé: @${texto1.split('@')[0]} ‚ù≥
‚î£‚ù≤ IùöóùöúùöùùöíùöùùöûùöíùöåÃßùöäÃÉùöò: ${NomeDoBot} ‚ù≥
‚î£‚ù≤ ùô∞ùöêùöéÃÇùöóùöåùöíùöä: NuBank üÜî ‚ù≥
‚î£‚ù≤ ùô≤ùöòùöóùöùùöä: Particular üè¶ ‚ù≥
‚î£‚ù≤ ùöÉùöõùöäùöóùöúùöèùöéùöõùöéÃÇùöóùöåùöíùöä: Pix ‚ù≥
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
          _‚ö†Ô∏éùôæùöÅùô∏ùô∂ùô¥ùôº‚ö†Ô∏é_
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢ÃÉ
‚î£‚ù≤ ùôΩùöòùöñùöé: ${pushname} ‚ù≥
‚î£‚ù≤ ùöÖùöäùöïùöòùöõ: ${texto2} ‚ù≥
‚î£‚ù≤ ùôΩùöûùöñùöéùöõùöò: ${sender.split('@')[0]} ‚ù≥
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
if (texto2 <= userId){
money(sender, -texto2)
money(texto1, texto2)
destiny.sendMessage(from, {image:wew, caption: rafa, templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
} else {
reply('Falha na Transa√ß√£o')
}
break

case 'roubar':
if (MoneyId === undefined) return reply(`Use primeiro o comando ${prefix}carteira`)
if(!args.join(' ').includes("@")) return reply(`Use assim exemplo: ${prefix}roubar @nero`)
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
teks = `${mentioned[0].split('@')[0]}@s.whatsapp.net`
consu = getMoneyId(teks)
if (consu === undefined) return reply('Usuario n√£o registrado üòî')
if (isRoubar) return reply("Roubo em andamento, aguarde ‚è≥")
roubar.push(sender)
fs.writeFileSync('./datab/jsons/dinheiro/roubar.json', JSON.stringify(roubar, null, 2))
wew = await getBuffer('https://telegra.ph/file/0525a56df1a5442b94eef.jpg')
top = await getBuffer('https://telegra.ph/file/43ddb6676fdc09a45e216.jpg')
menc = [`${mentioned[0].split('@')[0]}@s.whatsapp.net`]
destiny.sendMessage(from, {image:wew, caption: `O ${pushname}, acaba de roubar o @${mentioned[0].split('@')[0]}, o prazo para ele voltar, √© de 3 minutos ‚è≥`, mentions: menc, templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
await sleep(180000)
userg = getMoney(teks)
ncash = Math.floor(Math.random() * userg)
money(teks, -ncash)
money(sender, ncash)
userg = getMoney(sender)
rafa = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤üéØ‚ù≥ ${pushname} terminou o roubo
‚î£‚ù≤üí∞‚ù≥ Recompensa: ${ncash}
‚î£‚ù≤üíµ‚ù≥ Saldo: ${userg}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero:  ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {image:top, caption: rafa, templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
processo = roubar.indexOf(sender)
roubar.splice(processo, 1)
fs.writeFileSync('./datab/jsons/dinheiro/roubar.json',JSON.stringify(roubar, null, 2))
break

case 'minerar':
if (MoneyId === undefined) return reply(`Use primeiro o comando ${prefix}carteira`)
sections = [{
title: 'üõí',
rows: [
{title: "Picareta de Madeira ‚õèÔ∏è", rowId: `${prefix}pic madeira`, description: "Custo R$ 0,00"},
{title: "Picareta de Pedra ‚õèÔ∏è", rowId: `${prefix}pic pedra`, description: "Custo R$ 1000,00"},
{title: "Picareta de Ouro ‚õèÔ∏è", rowId: `${prefix}pic ouro`, description: "Custo R$ 2000,00"},
{title: "Picareta de Ferro ‚õèÔ∏è", rowId: `${prefix}pic ferro`, description: "Custo R$ 4000,00"},
{title: "Picareta de Diamante ‚õèÔ∏è", rowId: `${prefix}pic diamante`, description: "Custo R$ 8000,00"},
{title: "Picareta de Netherite ‚õèÔ∏è", rowId: `${prefix}pic netherite`, description: "Custo R$ 16000,00"}
]}]
listMessage2 = {
  text: `Agora Voc√™ Vai Escolher Uma Picareta Para Poder Minerar`,
  footer: `${NomeDoBot}`,
  title: "‚õèÔ∏è ESCOLHA SUA PICARETA ‚õèÔ∏è",
  buttonText: `Aperte Aqui`,
  sections}
destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'pic':
if(MoneyId === undefined) return reply(`Use primeiro o comando ${prefix}carteira`)
imgtop = await getBuffer('https://telegra.ph/file/93a03ed7e6f5e58d2b73c.jpg')
audioxp = await getBuffer('https://telegra.ph/file/b6f84e61025e6feb017f5.mp4')
if (q === 'madeira'){
if (isMinerar) return reply("Minera√ß√£o em andamento, aguarde ‚è≥")
minerar.push(sender)
fs.writeFileSync('./datab/jsons/dinheiro/minerar.json', JSON.stringify(minerar, null, 2))
wew = await getBuffer('https://telegra.ph/file/18211fadb4b503e7b6a18.jpg')
destiny.sendMessage(from, {image: wew, caption: `O ${pushname}, acabou de entrar em uma jornada, aguarde um instante ‚è≥`, footer: "", templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
await sleep(180000)
destiny.sendMessage(from, {audio: audioxp, mimetype: 'audio/mp4', ptt:true}, {quoted:info})
await sleep(2000)
ncash = Math.floor(Math.random() * 501)
money(sender, ncash)
userg = getMoney(sender)
top = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤‚õèÔ∏è‚ù≥ ${pushname} voltou da mina
‚î£‚ù≤üí∞‚ù≥ Recompensa: ${ncash}
‚î£‚ù≤üíµ‚ù≥ Saldo: ${userg}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero: ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {image: imgtop, caption: top, footer: "", templateButtons: [{index: 2, quickReplyButton: {displayText: '‚õèÔ∏è Minerar Novamente ‚õèÔ∏è', id: `${prefix}pic madeira`}}]}, {quoted: info})
processo = minerar.indexOf(sender)
minerar.splice(processo, 1)
fs.writeFileSync('./datab/jsons/dinheiro/minerar.json',JSON.stringify(minerar, null, 2))
}
if (q === 'pedra'){
if (userId === 1000 || userId > 1000){
money(sender, -1000)
if (isMinerar) return reply("Minera√ß√£o em andamento, aguarde ‚è≥")
minerar.push(sender)
fs.writeFileSync('./datab/jsons/dinheiro/minerar.json', JSON.stringify(minerar, null, 2))
wew = await getBuffer('https://telegra.ph/file/5dce1650c1b1ee45eb670.jpg')
destiny.sendMessage(from, {image: wew, caption: `O ${pushname}, acabou de entrar em uma jornada, aguarde um instante ‚è≥`, footer: "", templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
await sleep(150000)
destiny.sendMessage(from, {audio: audioxp, mimetype: 'audio/mp4', ptt:true}, {quoted:info})
await sleep(2000)
ncash = Math.floor(Math.random() * (2000 - 1000 + 1)) + 1000
money(sender, ncash)
userg = getMoney(sender)
top = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤‚õèÔ∏è‚ù≥ ${pushname} voltou da mina
‚î£‚ù≤üí∞‚ù≥ Recompensa: ${ncash}
‚î£‚ù≤üíµ‚ù≥ Saldo: ${userg}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero: ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {image: imgtop, caption: top, footer: "", templateButtons: [{index: 2, quickReplyButton: {displayText: '‚õèÔ∏è Minerar Novamente ‚õèÔ∏è', id: `${prefix}pic pedra`}}]}, {quoted: info})
processo = minerar.indexOf(sender)
minerar.splice(processo, 1)
fs.writeFileSync('./datab/jsons/dinheiro/minerar.json',JSON.stringify(minerar, null, 2))
} else {
reply("Saldo insuficiente üòî")
}}
if (q === 'ouro'){
if (userId === 2000 || userId > 2000){
money(sender, -2000)
if (isMinerar) return reply("Minera√ß√£o em andamento, aguarde ‚è≥")
minerar.push(sender)
fs.writeFileSync('./datab/jsons/dinheiro/minerar.json', JSON.stringify(minerar, null, 2))
wew = await getBuffer('https://telegra.ph/file/6381539c440b599722f4d.jpg')
destiny.sendMessage(from, {image: wew, caption: `O ${pushname}, acabou de entrar em uma jornada, aguarde um instante ‚è≥`, footer: "", templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
await sleep(120000)
destiny.sendMessage(from, {audio: audioxp, mimetype: 'audio/mp4', ptt:true}, {quoted:info})
await sleep(2000)
ncash = Math.floor(Math.random() * (4000 - 2000 + 1)) + 2000
money(sender, ncash)
userg = getMoney(sender)
top = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤‚õèÔ∏è‚ù≥ ${pushname} voltou da mina
‚î£‚ù≤üí∞‚ù≥ Recompensa: ${ncash}
‚î£‚ù≤üíµ‚ù≥ Saldo: ${userg}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero: ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {image: imgtop, caption: top, footer: "", templateButtons: [{index: 2, quickReplyButton: {displayText: '‚õèÔ∏è Minerar Novamente ‚õèÔ∏è', id: `${prefix}pic ouro`}}]}, {quoted: info})
processo = minerar.indexOf(sender)
minerar.splice(processo, 1)
fs.writeFileSync('./datab/jsons/dinheiro/minerar.json',JSON.stringify(minerar, null, 2))
} else {
reply("Saldo insuficiente üòî")
}}
if (q === 'ferro'){
if (userId === 4000 || userId > 4000){
money(sender, -4000)
if (isMinerar) return reply("Minera√ß√£o em andamento, aguarde ‚è≥")
minerar.push(sender)
fs.writeFileSync('./datab/jsons/dinheiro/minerar.json', JSON.stringify(minerar, null, 2))
wew = await getBuffer('https://telegra.ph/file/c7c476eaadc68c41138f8.jpg')
destiny.sendMessage(from, {image: wew, caption: `O ${pushname}, acabou de entrar em uma jornada, aguarde um instante ‚è≥`, footer: "", templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
await sleep(90000)
destiny.sendMessage(from, {audio: audioxp, mimetype: 'audio/mp4', ptt:true}, {quoted:info})
await sleep(2000)
ncash = Math.floor(Math.random() * (8000 - 4000 + 1)) + 4000
money(sender, ncash)
userg = getMoney(sender)
top = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤‚õèÔ∏è‚ù≥ ${pushname} voltou da mina
‚î£‚ù≤üí∞‚ù≥ Recompensa: ${ncash}
‚î£‚ù≤üíµ‚ù≥ Saldo: ${userg}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero: ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {image: imgtop, caption: top, footer: "", templateButtons: [{index: 2, quickReplyButton: {displayText: '‚õèÔ∏è Minerar Novamente ‚õèÔ∏è', id: `${prefix}pic ferro`}}]}, {quoted: info})
processo = minerar.indexOf(sender)
minerar.splice(processo, 1)
fs.writeFileSync('./datab/dinheiro/minerar.json',JSON.stringify(minerar, null, 2))
} else {
reply("Saldo insuficiente üòî")
}}
if (q === 'diamante'){
if (userId === 8000 || userId > 8000){
money(sender, -8000)
if (isMinerar) return reply("Minera√ß√£o em andamento, aguarde ‚è≥")
minerar.push(sender)
fs.writeFileSync('./datab/jsons/dinheiro/minerar.json', JSON.stringify(minerar, null, 2))
wew = await getBuffer('https://telegra.ph/file/feefd5fc4f401968b4154.jpg')
destiny.sendMessage(from, {image: wew, caption: `O ${pushname}, acabou de entrar em uma jornada, aguarde um instante ‚è≥`, footer: "", templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
await sleep(60000)
destiny.sendMessage(from, {audio: audioxp, mimetype: 'audio/mp4', ptt:true}, {quoted:info})
await sleep(2000)
ncash = Math.floor(Math.random() * (16000 - 8000 + 1)) + 8000
money(sender, ncash)
userg = getMoney(sender)
top = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤‚õèÔ∏è‚ù≥ ${pushname} voltou da mina
‚î£‚ù≤üí∞‚ù≥ Recompensa: ${ncash}
‚î£‚ù≤üíµ‚ù≥ Saldo: ${userg}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero: ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {image: imgtop, caption: top, footer: "", templateButtons: [{index: 2, quickReplyButton: {displayText: '‚õèÔ∏è Minerar Novamente ‚õèÔ∏è', id: `${prefix}pic diamante`}}]}, {quoted: info})
processo = minerar.indexOf(sender)
minerar.splice(processo, 1)
fs.writeFileSync('./datab/jsons/dinheiro/minerar.json',JSON.stringify(minerar, null, 2))
} else {
reply("Saldo insuficiente üòî")
}}
if (q === 'netherite'){
if (userId === 16000 || userId > 16000){
money(sender, -16000)
if (isMinerar) return reply("Minera√ß√£o em andamento, aguarde ‚è≥")
minerar.push(sender)
fs.writeFileSync('./datab/jsons/dinheiro/minerar.json', JSON.stringify(minerar, null, 2))
wew = await getBuffer('https://telegra.ph/file/82a8d8b9f079efb24ba0f.jpg')
destiny.sendMessage(from, {image: wew, caption: `O ${pushname}, acabou de entrar em uma jornada, aguarde um instante ‚è≥`, footer: "", templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
await sleep(2000)
destiny.sendMessage(from, {audio: audioxp, mimetype: 'audio/mp4', ptt:true}, {quoted:info})
await sleep(2000)
ncash = Math.floor(Math.random() * (32000 - 16000 + 1)) + 16000
money(sender, ncash)
userg = getMoney(sender)
top = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤‚õèÔ∏è‚ù≥ ${pushname} voltou da mina
‚î£‚ù≤üí∞‚ù≥ Recompensa: ${ncash}
‚î£‚ù≤üíµ‚ù≥ Saldo: ${userg}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero: ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {image: imgtop, caption: top, footer: "", templateButtons: [{index: 2, quickReplyButton: {displayText: '‚õèÔ∏è Minerar Novamente ‚õèÔ∏è', id: `${prefix}pic netherite`}}]}, {quoted: info})
processo = minerar.indexOf(sender)
minerar.splice(processo, 1)
fs.writeFileSync('./datab/jsons/dinheiro/minerar.json',JSON.stringify(minerar, null, 2))
} else {
reply("Saldo insuficiente üòî")
}}
break

case 'resetgame':
if (isGroupAdmins || SoDono){
fs.writeFileSync('./datab/jsons/dinheiro/minerar.json',JSON.stringify([ ], null, 2))
fs.writeFileSync('./datab/jsons/dinheiro/roubar.json',JSON.stringify([ ], null, 2))
reply("Os Jogos foram resetados üéÆ")
} else {
reply("Somente admin e o dono, podem usar este comando")
}
break


//////////////////////////////

//========(Sticker-Stickers)=========\\

case 'emoji':
case 'semoji':
if(!q) return reply(`Exemplo: ${prefix}emoji ‚òπÔ∏è/whatsapp`)
emot = q.split('/')[0]
jemot = q.split('/')[1]
if(jemot == 'apple'){
idemot = 0
}
else if(jemot == 'google'){
idemot = 1
}
else if(jemot == 'samsung'){
idemot = 2
}
else if(jemot == 'microsoft'){
idemot = 3
}
else if(jemot == 'whatsapp'){
idemot = 4
}
else if(jemot == 'twitter'){
idemot = 5
}
else if(jemot == 'facebook'){
idemot = 6
}
else if(jemot == 'joypixels'){
idemot = 7
}
else if(jemot == 'openmoji'){
idemot = 8
}
else if(jemot == 'emojidex'){
idemot = 9
}
else if(jemot == 'lg'){
idemot = 10
}
else if(jemot == 'htc'){
idemot = 11
}
else if(!jemot){
idemot = 4
}
else{
return reply(`Exemplo: ${prefix}emoji ‚òπÔ∏è/whatsapp`)
}
reply(enviar.espere)
if(idemot == undefined) return
emoji.get(emot)
.then(emoji => {
console.log(emoji.images[idemot]);
sendStickerFromUrl(from, emoji.images[idemot].url, info)
}).catch(e => {
reply("EMOJI N√ÉO ENCONTRADO, TENTE OUTRO EMOJI..")
})
break

case 'sc':
case 'c':  
case 'csticker':  
case 'cstiker':  
case 'stcirculo':
case 'circlesticker':  
if ((isMedia && info.message.imageMessage || isQuotedImage) && args.length == 0) {
const encmedia = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'image')
fs.writeFileSync(rane, buffimg)
media = rane
getpunt = getRandom('.png')
inpunt = getRandom('.webp')
exec(`convert ${media} -resize 512x512^ -gravity center -extent 512x512 ${getpunt} && magick ${getpunt} -quality 50 -define webp:lossless=true ${inpunt}`, async (error) => {
fs.unlinkSync(getpunt)
fs.unlinkSync(media)
if (error) return reply("Error!")
await destiny.sendMessage(from, {sticker: fs.readFileSync(inpunt)}, {quoted: info})
fs.unlinkSync(inpunt)
})
} else {
reply("Apenas image!")
}
break

case 'fstiker': 
case 'fsticker':
case 'f':
await limitAdd(sender)
if ((isMedia && !info.message.videoMessage || isQuotedImage) && args.length == 0) {
const encmedia = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'image')
fs.writeFileSync(rane, buffimg)
const media = rane
ran = getRandom('.webp')
await ffmpeg(`./${media}`)
.input(media)
.on('start', function (cmd) {
console.log(`Started : ${cmd}`)
})
.on('error', function (err) {
console.log(`Error : ${err}`)
fs.unlinkSync(media)
reply(enviar.stikga)
})
.on('end', function () {
console.log('Finish')
buffer = fs.readFileSync(ran)
destiny.sendMessage(from, {sticker: buffer}, {quoted: info})
fs.unlinkSync(media)
fs.unlinkSync(ran)
})
.addOutputOptions([`-vcodec`,`libwebp`,`-vf`,`scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-1:-1:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse`])
.toFormat('webp')
.save(ran)
} else if ((isMedia && info.message.videoMessage.seconds < 10 || isQuotedVideo && info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage.seconds < 10) && args.length == 0) {
const encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
const media = rane
ran = getRandom('.webp')
reply(enviar.espere) 
await ffmpeg(`./${media}`)
.inputFormat(media.split('.')[1])
.on('start', function (cmd) {
console.log(`Started : ${cmd}`)
})
.on('error', function (err) {
console.log(`Error : ${err}`)
fs.unlinkSync(media)
tipe = media.endsWith('.mp4') ? 'video' : 'gif'
reply(enviar.stikga)
})
.on('end', function () {
console.log('Finish')
buffer = fs.readFileSync(ran)
destiny.sendMessage(from, {sticker: buffer}, {quoted: info})
fs.unlinkSync(media)
fs.unlinkSync(ran)
})
.addOutputOptions([`-vcodec`,`libwebp`,`-vf`,`scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-1:-1:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse`])
.toFormat('webp')
.save(ran)
} else {
reply(`Enviar imagem / v√≠deo / gif com legenda \n${prefix}sticker (dura√ß√£o do adesivo de v√≠deo de 1 a 9 segundos)`)
}
break 

case 'emoji-mix':
case 'emojimix':
try {
textoo = args.join(' ')
textoo1 = textoo.split('+')[0]
textoo2 = textoo.split('+')[1]
bau = require('./armor/funcoes/emoji.js')
sitee = bau.Semoji(textoo1, textoo2)
bala = await getBuffer(sitee)
fs.writeFileSync('./imagem.webp', bala)
site = fs.readFileSync('./imagem.webp')
bass64 = `data:image/jpeg;base64,${site.toString('base64')}`
mantap = await convertSticker(bass64, `Aleatory - MD`, `Aleatory`)
imageBuffer = new Buffer.from(mantap, 'base64');
destiny.sendMessage(from, {sticker: imageBuffer}, {quoted: info})
fs.unlinkSync('./imagem.webp')
} catch {
try {
textoo = args.join(' ')
textoo1 = textoo.split('+')[0]
textoo2 = textoo.split('+')[1]
bau = require('./armor/funcoes/emoji.js')
sitee = bau.Semoji(textoo1, textoo2)
bala = await getBuffer(sitee)
fs.writeFileSync('./imagem.webp', bala)
site = fs.readFileSync('./imagem.webp')
bass64 = `data:image/jpeg;base64,${site.toString('base64')}`
mantap = await convertSticker(bass64, `Aleatory - MD`, `Aleatory`)
imageBuffer = new Buffer.from(mantap, 'base64');
destiny.sendMessage(from, {sticker: imageBuffer}, {quoted: info})
fs.unlinkSync('./imagem.webp')  
} catch {
reply('*Ops n√£o foi possivel fazer esse mix de emoji...*')
}
}
break

case 'figfundo':
case 'figvideo':
case 'figusemfundo': 
case 'sfundo':  
if(!isQuotedImage) return reply(`Marque uma imagem`)
if ((isMedia && !info.message.videoMessage || isQuotedImage) && args.length == 0) {
rafa = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
reply(enviar.espere)
buff = await getFileBuffer(rafa, 'image')
bas64 = `data:image/jpeg;base64,${buff.toString('base64')}`
anu = args.join(' ').split('|')
satu = anu[0] !== '' ? anu[0] : `${pushname}`
sd = `üìçCriado por‚Üì        ${NomeDoBot}`
dua = typeof anu[1] !== 'undefined' ? anu[1] : `${sd}`
var mantap = await convertSticker(bas64, `${dua}`, `${satu}`)
var sti = new Buffer.from(mantap, 'base64');
destiny.sendMessage(from, {sticker: sti}, {quoted: info})
} else {
return reply(`So imagem mn -_-`)
}
break


case 'vlink': 
case 'verlink': {
if(!q) return reply("Cade o link da image?")
if(q.includes('.jpg')){
kk = await getBuffer(`${q}`)
let buttonMessage = {
image: kk,
footer: ``,
headerType: 4,
contextInfo:{externalAdReply:{
title: `Ver Image de Link`,
body: `${NomeDoBot} ¬©`,
showAdAttribution: true,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
sourceUrl: ``,
mediaUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, {quoted:selo})
} else {
kkkk = await getBuffer(`${q}`)
let buttonMessagek = {
video: kkkk,
mimetype: 'video/mp4',
footer: ``,
headerType: 4,
contextInfo:{externalAdReply:{
title: `Ver V√≠deo de Link`,
body: `${NomeDoBot} ¬©`,
showAdAttribution: true,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
sourceUrl: ``,
mediaUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessagek, {quoted:selo})
}
}
break

case 'st':
case 'st':
case 'sticker':
case 's': {
try {
if ((isMedia && !info.message.videoMessage || isQuotedImage) && args.length == 0) {
const encmedia = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
tesst = await getBuffer('https://telegra.ph/file/635289dc66a9ccb424735.jpg')
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'image')
fs.writeFileSync(rane, buffimg)
const media = rane
rano = getRandom('.webp')
sendBtext(from, enviar.espere, `@~ usu√°rio: ${pushname}\n@~ Grupo: ${groupName}\n@~ cmd: ${prefix + command}`, [{buttonId: `nd`, buttonText: {displayText: `Obg ${NomeDoBot}`}, type: 1}], info)
await ffmpeg(`./${media}`)
.input(media)
.on('start', function (cmd) {
console.log(`Started : ${cmd}`)
})
.on('error', function (err) {
console.log(`Error : ${err}`)
exec(`webpmux -set exif ${addMetadata('bot','ale')} ${rano} -o ${rano}`, async (error) => {
fs.unlinkSync(media)
reply(enviar.stick)
})
})
exec(`ffmpeg -i ${media} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 800:800 ${rano}`, (err) => {
fs.unlinkSync(media)
buffer = fs.readFileSync(rano)
fs.unlinkSync(rano)
})
let buttonMessage = {
sticker: buffer,
caption: '',
footer: ``,
headerType: 4,
contextInfo:{externalAdReply: {
title: ``,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: tesst,
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`,
}}
}
destiny.sendMessage(from, buttonMessage, {quoted:selo})
} else if ((isMedia && info.message.videoMessage.seconds < 11 || isQuotedVideo && info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage.seconds < 11) && args.length == 0) {
const encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
tesst = await getBuffer('https://telegra.ph/file/635289dc66a9ccb424735.jpg')
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
const media = rane
rano = getRandom('.webp')
await ffmpeg(`./${media}`)
.inputFormat(media.split('.')[1])
.on('start', function (cmd) {
console.log(`Started : ${cmd}`)
})
.on('error', function (err) {
console.log(`Error : ${err}`)
exec(`webpmux -set exif ${addMetadata('bot', 'ale')} ${rano} -o ${rano}`, async (error) => {
fs.unlinkSync(media)
tipe = media.endsWith('.mp4') ? 'video' : 'gif'
reply(`Falha na convers√£o de ${tipe} para sticker`)
})
})
exec(`ffmpeg -i ${media} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 200:200 ${rano}`, (err) => {
fs.unlinkSync(media)
buffer = fs.readFileSync(rano)
let buttonMessage = {
sticker: buffer,
caption: '',
footer: ``,
headerType: 4,
contextInfo:{externalAdReply: {
title: ``,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: tesst,
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`,
}}
}
destiny.sendMessage(from, buttonMessage, {quoted:selo})
fs.unlinkSync(rano)
})
} else {
reply(`Voc√™ precisa enviar ou marcar uma imagem ou v√≠deo com no m√°ximo 10 segundos`)
}
} catch {
reply('Ocorreu algum Error, desculpe üòî')
}
}
break

case 'lojinha':
if (!isGroup) return reply(enviar.msg.grupo)
destiny.sendMessage(from, { product: { productImage: fs.readFileSync('./logos/logo2.jpg'), description: "youth dev's", title: "DESTINY-BOT", productImageCount: 1, productId: "4939046979532720", currencyCode: "USD", priceAmount1000: "100" }, "businessOwnerJid": "559185841876@s.whatsapp.net" });
break

case 'toimg':
if (!isQuotedSticker) return reply('‚ùå adesivo de resposta um ‚ùå')
reply(enviar.espere)
buff = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage, 'sticker')
destiny.sendMessage(from, {image: buff}, {quoted: info}).catch(e => {
console.log(e);
reply('ERROR!!')
})
break



case 'metadinha': {
sendBtext(from, enviar.espere, `@~ usu√°rio: ${pushname}\n@~ Grupo: ${groupName}\n@~ cmd: ${prefix + command}`, [{buttonId: `nd`, buttonText: {displayText: `Obg ${NomeDoBot}`}, type: 1}], info)
                let anu = await fetchJson('https://raw.githubusercontent.com/iamriz7/kopel_/main/kopel.json')
                let random = anu[Math.floor(Math.random() * anu.length)]
                destiny.sendMessage(from, { image: { url: random.male }, caption: `homem` }, { quoted: selo })
                destiny.sendMessage(from, { image: { url: random.female }, caption: `mulher` }, { quoted: selo })
            }
	    break



//////////AKINATO////////

case 'akinator':
case 'akinato':
if (q === "reset"){
if (isGroupAdmins || SoDono){
jogo.now = true
}
}
let startAki = async () => {
global.aki = new Aki({ region })
await aki.start()
}
if (jogo.now) {
await startAki()
jogo.now = false
jogo.jogador = sender
} else return reply("Alguem est√° jogando")
sections = [
{
title: " ",
rows: [
{ title: "Sim", rowId: prefix + 'resp 0' },
{ title: "N√£o", rowId: prefix + 'resp 1' },
{ title: "N√£o Sei", rowId: prefix + 'resp 2' },
{ title: "Provavelmente Sim", rowId: prefix + 'resp 3' },
{ title: "Provavelmente N√£o", rowId: prefix + 'resp 4' },
]
}
]
destiny.sendMessage(from, { 
text: aki.question + "\nEscolha uma op√ß√£o.\nProgresso: " + aki.progress + '%',
title: "Quest√£o",
buttonText: "SELECIONAR",
sections
})
break

case 'resp':
if (jogo.jogador !== sender) return destiny.sendMessage(from, { text: 'N√£o √© voc√™ que est√° jogando.' }, { quoted: info })
await aki.step(args)
if (aki.progress >= 90 || aki.currentStep >= 90) {
await aki.win()
jogo.now = true
let buttons = [{ buttonId: prefix + 'fimaki', buttonText: { displayText: 'SIM' }, type: 1 }, { buttonId: prefix + 'fimaki' + ' nao', buttonText: { displayText: 'N√ÉO' }, type: 1 }]
destiny.sendMessage(from, { image: { url: aki.answers[0].absolute_picture_path },
caption: aki.answers[0].name + ": " + aki.answers[0].description + '\nPor acaso este √© o seu personagem?',
buttons: buttons,
headerType: 4
})
} else {
sections = [
{
title: " ",
rows: [
{ title: "Sim", rowId: prefix + 'resp 0' },
{ title: "N√£o", rowId: prefix + 'resp 1' },
{ title: "N√£o Sei", rowId: prefix + 'resp 2' },
{ title: "Provavelmente Sim", rowId: prefix + 'resp 3' },
{ title: "Provavelmente N√£o", rowId: prefix + 'resp 4' },
]
}
]
destiny.sendMessage(from, { 
text: aki.question + "\nEscolha uma op√ß√£o.\nProgresso: " + aki.progress.toFixed(0) + '%',
title: "Quest√£o",
buttonText: "SELECIONAR",
sections
})
}
break

case 'fimaki':
if (q === 'nao') return reply('Puxa n√£o foi desta vez üòî') 
reply('SABIA! EU VENCI ü•≥')
break

case 'reset':
if (isGroupAdmins || SoDono){
jogo.now = true
reply("Akinator, resetado com sucesso")
} else {
reply("Somente admin e o dono, podem usar este comando")
}
break




//=============(LOGOS)=============\\

case 'carrinhofigu':
sections = [
{title: "informa√ß√µes",
rows: [
{title: "‚ùÑÔ∏è ùêÄùêçùêòùêÄ ‚ùÑÔ∏è", rowId: `${prefix}packfig anya`},
{title: "‚ùÑÔ∏è ùêÄùêçùêàùêåùêÄùêÉùêÄùêíùüè ‚ùÑÔ∏è", rowId: `${prefix}packfig animadas1`},
{title: "‚ùÑÔ∏è ùêÄùêçùêàùêåùêÄùêÉùêÄùêíùüê ‚ùÑÔ∏è", rowId: `${prefix}packfig animadas2`},
{title: "‚ùÑÔ∏è ùêÉùêéùêîùêåùêÄ ‚ùÑÔ∏è", rowId: `${prefix}packfig douma`},
{title: "‚ùÑÔ∏è ùêÑùêíùêÉùêÑùêÄùêìùêáùüè ‚ùÑÔ∏è", rowId: `${prefix}packfig esdeath1`},
{title: "‚ùÑÔ∏è ùêÑùêíùêÉùêÑùêÄùêìùêáùüê ‚ùÑÔ∏è", rowId: `${prefix}packfig esdeath2`}, 
{title: "‚ùÑÔ∏è ùêáùêàùêçùêÄùêìùêÄ ‚ùÑÔ∏è", rowId: `${prefix}packfig hinata`},
{title: "‚ùÑÔ∏è ùêâùêÄùêèùêàùêçùêáùêÄùüè ‚ùÑÔ∏è", rowId: `${prefix}packfig japinha1`},
{title: "‚ùÑÔ∏è ùêâùêÄùêèùêàùêçùêáùêÄùüê ‚ùÑÔ∏è", rowId: `${prefix}packfig japinha2`}, 
{title: "‚ùÑÔ∏è ùêâùêÄùêèùêàùêçùêáùêÄùüë ‚ùÑÔ∏è", rowId: `${prefix}packfig japinha3`}, 
{title: "‚ùÑÔ∏è ùêâùêîùêâùêîùêìùêíùêî ùêäùêÄùêàùêíùêÑùêç ‚ùÑÔ∏è", rowId: `${prefix}packfig jjk`}, 
{title: "‚ùÑÔ∏è ùêäùêàùêìùêÄùêÜùêÄùêñùêÄ ‚ùÑÔ∏è", rowId: `${prefix}packfig kitagawa`}, 
{title: "‚ùÑÔ∏è ùêãùêéùêìùêîùêíùüè ‚ùÑÔ∏è", rowId: `${prefix}packfig lotus1`}, 
{title: "‚ùÑÔ∏è ùêãùêéùêìùêîùêíùüê ‚ùÑÔ∏è", rowId: `${prefix}packfig lotus2`}, 
{title: "‚ùÑÔ∏è ùêåùêÄùêÉùêÄùêëùêÄ ‚ùÑÔ∏è", rowId: `${prefix}packfig madara`}, 
{title: "‚ùÑÔ∏è ùêåùêÑùêãùêàùêéùêÉùêÄùêí ‚ùÑÔ∏è", rowId: `${prefix}packfig meliodas`}, 
{title: "‚ùÑÔ∏è ùêåùêÑùêåùêÑùêíùüè ‚ùÑÔ∏è", rowId: `${prefix}packfig memes1`}, 
{title: "‚ùÑÔ∏è ùêåùêÑùêåùêÑùêíùüê ‚ùÑÔ∏è", rowId: `${prefix}packfig memes2`}, 
{title: "‚ùÑÔ∏è ùêåùêÑùêåùêÑùêíùüë ‚ùÑÔ∏è", rowId: `${prefix}packfig memes3`}, 
{title: "‚ùÑÔ∏è ùêåùêÑùêåùêÑùêíùüí ‚ùÑÔ∏è", rowId: `${prefix}packfig memes4`}, 
{title: "‚ùÑÔ∏è ùêåùêÑùêåùêÑùêíùüì ‚ùÑÔ∏è", rowId: `${prefix}packfig memes5`}, 
{title: "‚ùÑÔ∏è ùêçùêÄùêçùêÄùêìùêíùêî ùêçùêé ùêìùêÄùêàùêôùêÄùêàùüè ‚ùÑÔ∏è", rowId: `${prefix}packfig nanatsu1`}, 
{title: "‚ùÑÔ∏è ùêçùêÄùêçùêÄùêìùêíùêî ùêçùêé ùêìùêÄùêàùêôùêÄùêàùüê ‚ùÑÔ∏è", rowId: `${prefix}packfig nanatsu2`}, 
{title: "‚ùÑÔ∏è ùêçùêÄùêëùêîùêìùêéùüè ‚ùÑÔ∏è", rowId: `${prefix}packfig naruto`}, 
{title: "‚ùÑÔ∏è ùêçùêÄùêëùêîùêìùêéùüê ‚ùÑÔ∏è", rowId: `${prefix}packfig naruto2`}, 
{title: "‚ùÑÔ∏è ùêéùêçùêÑ ùêèùêàùêÑùêÇùêÑ ‚ùÑÔ∏è", rowId: `${prefix}packfig onepiece`}, 
{title: "‚ùÑÔ∏è ùêëùêéùêåùêÄùêçùêìùêàùêÇùêÄùêíùüè ‚ùÑÔ∏è", rowId: `${prefix}packfig romanticas1`},
{title: "‚ùÑÔ∏è ùêëùêéùêåùêÄùêçùêìùêàùêÇùêÄùêíùüê ‚ùÑÔ∏è", rowId: `${prefix}packfig romanticas2`},
{title: "‚ùÑÔ∏è ùêëùêéùêåùêÄùêçùêìùêàùêÇùêÄùêíùüë ‚ùÑÔ∏è", rowId: `${prefix}packfig romanticas3`},
{title: "‚ùÑÔ∏è ùêíùêÄùêàùêìùêÄùêåùêÄ ‚ùÑÔ∏è", rowId: `${prefix}packfig saitama`}, 
{title: "‚ùÑÔ∏è ùêíùêáùêàùêçùêéùêÅùêî ‚ùÑÔ∏è", rowId: `${prefix}packfig shinobu`}, 
{title: "‚ùÑÔ∏è ùêìùêéùêåùêàùêéùêäùêÄ ‚ùÑÔ∏è", rowId: `${prefix}packfig tomioka`}, 
{title: "‚ùÑÔ∏è ùêìùêëùêàùêíùêìùêÑùüè ‚ùÑÔ∏è", rowId: `${prefix}packfig triste1`}, 
{title: "‚ùÑÔ∏è ùêìùêëùêàùêíùêìùêÑùüê ‚ùÑÔ∏è", rowId: `${prefix}packfig triste2`}, 
{title: "‚ùÑÔ∏è ùêôùêÑùêçùêàùêìùêíùêî ‚ùÑÔ∏è", rowId: `${prefix}packfig zenitsu`}, 
{title: "üîû ùêèùêÄùêÇùêä+ùüèùüñ ùüè üîû", rowId: `${prefix}packfig18 0`}, 
{title: "üîû ùêèùêÄùêÇùêä+ùüèùüñ ùüê üîû", rowId: `${prefix}packfig18 1`}, 
{title: "üîû ùêèùêÄùêÇùêä+ùüèùüñ ùüë üîû", rowId: `${prefix}packfig18 2`}, 
{title: "üîû ùêèùêÄùêÇùêä+ùüèùüñ ùüí üîû", rowId: `${prefix}packfig18 3`}, 
{title: "üîû ùêèùêÄùêÇùêä+ùüèùüñ ùüì üîû", rowId: `${prefix}packfig18 4`}, 
{title: "üîû ùêèùêÄùêÇùêä+ùüèùüñ ùüî üîû", rowId: `${prefix}packfig18 5`}, 
{title: "üîû ùêèùêÄùêÇùêä+ùüèùüñ ùüï üîû", rowId: `${prefix}packfig18 6`}, 
{title: "üîû ùêèùêÄùêÇùêä+ùüèùüñ ùüñ üîû", rowId: `${prefix}packfig18 7`}, 
{title: "üîû ùêèùêÄùêÇùêä+ùüèùüñ ùüó üîû", rowId: `${prefix}packfig18 8`}, 
{title: "üîû ùêèùêÄùêÇùêä+ùüèùüñ ùüèùüé üîû", rowId: `${prefix}packfig18 9`}]
}]
listMessage2 = {
text: `ùêéùêãùêÄ ùêåùêàùêçùêáùêÄ ùêãùêàùêíùêìùêÄ ùêÉùêÑ ùêèùêÄùêÇùêäùêí ùêÉùêÑ ùêÖùêàùêÜùêîùêëùêàùêçùêáùêÄùêí ùêãùêàùêíùêìùêÄ ùêÉùêÑ ùêèùêÄùêÇùêäùêí `,
  footer: ` `,
  title: " ",
  buttonText: "ùóòùó´ùóúùóïùóúùó• || ùóüùóúùó¶ùóßùóî",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2)
break

case 'packfig':
if(!q) return reply("falta o nome do pack")
try {
lotus = await fetchJson(`https://raw.githubusercontent.com/Salientekill/figurinhas/main/jsons/${q}.json`)
reply("Enviando O Pack No Seu Privado")
for(let a of lotus[0].link) {
await delay(1000)
sendStickerFromUrl(sender, a, enviar.success)
}
} catch {
  reply("ERRO")
}
break

case 'packfig18':
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}modo+18 1`)
if(!q) return reply("falta o nome do pack")
try {
lotus = await fetchJson(`https://raw.githubusercontent.com/Salientekill/figurinhas/main/jsons/%2B18/${q}.json`)
reply("Enviando O Pack No Seu Privado")
for(let a of lotus[0].link) {
await delay(1000)
sendStickerFromUrl(sender, a, enviar.success)
}
} catch {
  reply("ERRO")
}
break

//=======(PLAQUINHAS-LOGOS)========\\

case 'plaq': //by zanga 
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}nsfw 1`)
if (args.length < 1) return reply(`${prefix}plaq e digite o seu nome`)
teks = body.slice(6)
if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
reply(enviar.espere) //mensagem
buffer = await getBuffer(`https://raptibef.sirv.com/images%20(3).jpeg?text.0.text=${teks}&text.0.position.gravity=center&text.0.position.x=19%25&text.0.size=45&text.0.color=000000&text.0.opacity=55&text.0.font.family=Crimson%20Text&text.0.font.weight=300&text.0.font.style=italic&text.0.outline.opacity=21`)
destiny.sendMessage(from, {image: buffer, sendEphemeral: true, thumbnail: null, caption: ' *Plaquinha feita ‚úì* '}, {quoted: selo})
break

case 'plaq2': //by zanga 
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}nsfw 1`)
if (args.length < 1) return reply(`${prefix}plaq2 e digite o seu nome`)
teks = body.slice(7)
if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
reply(enviar.espere) //mensagem
buffer = await getBuffer(`https://raptibef.sirv.com/images%20(1).jpeg?profile=Zanga%202.0&text.0.text=${teks}`)
destiny.sendMessage(from, {image: buffer, sendEphemeral: true, thumbnail: null, caption: ' *Plaquinha feita ‚úì* '}, {quoted: selo})
break

case 'plaq3': //by zanga
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}nsfw 1`)
if (args.length < 1) return reply(`${prefix}plaq3 e digite o seu nome`)
teks = body.slice(7)
if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
reply(enviar.espere) //mensagem
buffer = await getBuffer(`https://raptibef.sirv.com/images.jpeg?profile=Zanga%203.0&text.0.text=${teks}&text.0.outline.blur=63`)
destiny.sendMessage(from, {image: buffer, sendEphemeral: true, thumbnail: null, caption: ' *Plaquinha feita ‚úì* '}, {quoted: selo})
break

case 'plaq4':
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}nsfw 1`) 
if (args.length < 1) return reply(`${prefix}plaq7 e digite o seu nome`)
teks = body.slice(7)
if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres') //maximo de caracteres
reply(enviar.espere) //mensagem
buffer = await getBuffer(`https://umethroo.sirv.com/Torcedora-da-sele%C3%A7%C3%A3o-brasileira-nua-mostrando-a-bunda-236x300.jpg?text.0.text=${teks}&text.0.position.x=-64%25&text.0.position.y=-39%25&text.0.size=25&text.0.color=1b1a1a&text.0.font.family=Architects%20Daughter`) //api
plaq = ` *Plaquinha feita ‚úì* `
destiny.sendMessage(from, {image: buffer, sendEphemeral: true, thumbnail: null, caption: ' *Plaquinha feita ‚úì* '}, {quoted: selo})
break

case 'plaq5':
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}nsfw 1`)
if (args.length < 1) return reply(`${prefix}plaq10 e digite o seu nome`)
teks = body.slice(7)
if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
reply(enviar.espere) //mensagem
buffer = await getBuffer(`https://umethroo.sirv.com/peito1.jpg?text.0.text=${teks}&text.0.position.x=-4%25&text.0.position.y=-6%25&text.0.size=14&text.0.color=000000&text.0.font.family=Shadows%20Into%20Light&text.0.font.weight=700`)
destiny.sendMessage(from, {image: buffer, sendEphemeral: true, thumbnail: null, caption: ' *Plaquinha feita ‚úì* '}, {quoted: selo})
break
case 'plaq4off': //by zanga
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}nsfw 1`)
if (args.length < 1) return reply(`${prefix}plaq4 e digite o seu nome`)
teks = body.slice(7)
if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
reply(enviar.espere) //mensagem
buffer = await getBuffer(`https://raptibef.sirv.com/images%20(2).jpeg?profile=Zanga%204.0&text.0.text=${teks}`)
destiny.sendMessage(from, {image: buffer, sendEphemeral: true, thumbnail: null, caption: ' *Plaquinha feita ‚úì* '}, {quoted: selo})
break

case 'placaloli':
if (!q) return reply(enviar.wrongFormat)
reply('Aguarde..')
lod = await fetchJson(`https://nekobot.xyz/api/imagegen?type=kannagen&text=${q}`)
sendStickerFromUrl(from, lod.message, enviar.success)
await limitAdd(sender)
break 

//=================================\\

case 'shadow':
case 'angelwing':
case 'efeitoneon':
case 'cemiterio':
case 'metalgold':
case 'narutologo':
case 'fire':
case 'romantic':
case 'smoke':  
case 'papel':
case 'lovemsg':
case 'lovemsg2':
case 'lovemsg3':
case 'coffecup':
case 'coffecup2':  
case 'cup':
case 'florwooden':
case 'madeira':
case 'neon2':
case 'lobometal':
case 'harryp':
case 'txtborboleta':
case 'blackpink':
case 'girlmascote': 
case 'logogame':
case 'equipemascote':
case 'fpsmascote':
case 'hackneon':
case 'ffavatar':
case 'mascotegame':
case 'wingeffect':
case 'angelglx':
case 'gizquadro':
case 'txtquadrinhos':
textin = args.join(" ")
if(!textin) return reply("Cade o texto?")
reply(enviar.espere)
bla = await fetchJson(`https://aleatoryapi.herokuapp.com/api/${command}?texto=${textin}&apikey=${keyale}`)
blabla = await getBuffer(bla.resultado.imageUrl)
destiny.sendMessage(from, {image: blabla}, {quoted: info}).catch(rs =>{
reply("ERROR!!")  
})
break  

case 'gameplay':
case 'ffbanner':
case 'mascoteavatar':  
textin = args.join(" ")
txt1 = textin.split("/")[0];
txt2 = textin.split("/")[1];
if(!textin) return reply("Cade o texto?")
if(!textin.includes("/")) return reply(`Cade a / precisa dela para a separa√ß√£o..\nExemplo: ${prefix + command} Game/Play`)
reply(enviar.espere)
bla = await fetchJson(`https://aleatoryapi.herokuapp.com/api/${command}?texto=${txt1}&texto2=${txt2}&apikey=${keyale}`)
blabla = await getBuffer(bla.resultado.imageUrl)
destiny.sendMessage(from, {image: blabla}, {quoted: info}).catch(rs =>{
reply("ERROR!!")  
})
break

case 'googlesg':
textin = args.join(" ")
txt1 = textin.split("/")[0];
txt2 = textin.split("/")[1];
txt3 = textin.split("/")[2];
if(!textin) return reply("Cade o texto?")
if(!textin.includes("/")) return reply(`Cade a / precisa dela para a separa√ß√£o..\nExemplo: ${prefix + command} Game/Play/Sad`)
reply(enviar.espere)
bla = await fetchJson(`http://aleatoryapi.herokuapp.com/api/${command}?texto=${txt1}&texto2=${txt2}&texto3=${txt3}&apikey=${keyale}`)
blabla = await getBuffer(bla.resultado.imageUrl)
destiny.sendMessage(from, {image: blabla}, {quoted: info}).catch(rs =>{
reply("ERROR!!")  
})
break  

case 'marvel': 
case 'glitch':   
case 'stone':   
case 'space':
case 'pornhub':
case 'america':   
case 'steel':  
case 'grafity':  
case 'glitch3':  
try {
texto = args.join(' ')
texto1 = texto.split('/')[0] || 'Indefinido'
texto2 = texto.split('/')[1] || 'Indefinido'
if(!texto.includes("/")) return reply(`Cade a /\nExemplo: ${prefix + command} sad/sad`)
reply(enviar.espere)
bla = await fetchJson(`http://aleatoryapi.herokuapp.com/api/${command}?texto=${texto1}&texto2=${texto2}&apikey=${keyale}`)
blabla = await getBuffer(bla.resultado)
destiny.sendMessage(from, {image: blabla}, {quoted: info})
} catch {
reply('ERROR!!')
}
break

case 'lava':
case 'toxic':  
case 'thunder': 
case 'thunderv2':  
case 'neongreen':	
case 'neon':  
case 'neon1':  
case 'neon3d':  
case 'demongreen':   
case 'metalfire':  
case 'rainbow':	  
case 'gelo':
case 'halloween':  
case 'lapis':  
case 'glitch':  
case 'glitch2':   
case '3dgold': 
case 'neon3d':   
case 'transformer':  
case '3dstone':
case 'fiction':
case 'cattxt':
case 'neondevil':
case 'demonfire':
case 'colaq':
case 'luxury':
case 'berry':
case 'matrix':
case 'horror':
case 'nuvem':
case 'neon3':
case 'neve':
case 'areia':
case 'vidro':
case 'style':
case 'blood':
case 'pink':
case 'carbon':
case 'metalblue': 
case 'jeans':  
case 'jokerlogo':   
case 'natal': 
case 'ossos':  
case 'asfalto':	
case 'break':  
try {
reply(enviar.espere)
texto = args.join(" ") || 'Indefinido'
if(!texto) return reply('Cade o texto?')
bla = await fetchJson(`http://aleatoryapi.herokuapp.com/api/${command}?texto=${texto}&apikey=${keyale}`)
blabla = await getBuffer(bla.resultado)
destiny.sendMessage(from, {image: blabla}, {quoted: info})
} catch {
reply('ERROR')
}
break

//======(SORTEIO-VOTAR-CASES)=======\\

case 'delvote':
case 'delvoto':  
if(!info.key.remoteJid) return
delVote(from)
reply('vota√ß√£o deletada com sucesso')
break

case 'votar':
case 'votacao': 
case 'vota√ß√£o': 
if(!isGroup) return reply(enviar.msg.grupo)
if(!budy.includes("/")) return reply(`Cade a /, exemplo ${prefix}vota√ß√£o @marca/Ele √© total gay/ 1`)
if(!q) return reply('*Vota√ß√£o*\n\n'+ prefix+ 'votar @tag marcar / pergunta  / 1 (1 = 1 Minuto)')
if (info.message.extendedTextMessage.contextInfo.mentionedJid.length > 0 || info.message.extendedTextMessage.contextInfo == null) {
let id = info.message.extendedTextMessage.contextInfo.mentionedJid[0]
split = args.join(' ').replace('@', '').split('/')
if(!Number(split[2])) return reply('cade os minutos eim?\n\n1 = 1 Minuto')
await mentions('Vote ' +'@'+ id.split('@')[0]+' para' +'\n\n' + `voto = ‚úÖ\ndevoto = ‚ùå\n\npergunta: ${split[1]}`,[id],true)
addVote(from,split[1],split[0],split[2],reply)
}
break

case 'sorteio':
if(!isGroupAdmins) return reply('S√≥ ADM pode utilizar este comando.')
try{
if(!isGroup) return reply(enviar.msg.grupo)
if(!q) return reply(`Coloque algo, ap√≥s o comando sorteio, por exemplo, ${prefix}sorteio de 100 R$`)
srtimgk = await getBuffer(`https://telegra.ph/file/d68bb6a23eeb1c99c9d2e.jpg`)
d = []
teks = `Parab√©ns humano, voc√™ ganhou foi sorteado: ${q}\n\n`
for(i = 0; i < 1; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
teks += `üî•·çù‚Éü¬†¬†‚û£ @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}
destiny.sendMessage(from, {image: srtimgk, caption: teks, mentions: d}, {quoted: info})
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'sorteionmr':
if(!isGroupAdmins) return reply('S√≥ ADM pode utilizar este comando.')
try{
if(!isGroup) return reply(enviar.msg.grupo)
if(!q) return reply(`Coloque algo, ap√≥s o comando sorteio, por exemplo, ${prefix}sorteio de +55`)
srtimgk = await getBuffer(`https://telegra.ph/file/d68bb6a23eeb1c99c9d2e.jpg`)
d = []
teks = `Parab√©ns humano, voc√™ ganhou foi sorteado: ${q}\n\n`
for(i = 0; i < 1; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
teks += `üî•·çù‚Éü¬†¬†‚û£ @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}
destiny.sendMessage(from, {image: srtimgk, caption: teks, mentions: d}, {quoted: info})
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'enquete':
var texto = args.join(' ')
if(!isBotGroupAdmins) return reply("Bot precisa ser um ADM do grupo üòî")
if (!isGroup) return reply(enviar.msg.grupo)
if (!texto || !texto.split('/')[1]) return reply(`Use assim: ${prefix + command} Nero √© gay?/Sim/N√£o/Talvez`)
if (texto.split('/').length > 13) return reply('Use no m√°ximo 12 op√ß√µes')
membros = (groupId, membros1) => {
array = []
for (let i = 0; i < membros1.length; i++) {
array.push(membros1[i].id)
}
return array
}
var yd = membros(from, groupMembers)
var op√ß√µes = []
for (var i = 1; i < texto.split('/').length; i++){
op√ß√µes.push({optionName: texto.split('/')[i]})
}
destiny.sendMessage(from, {text:'Fiquem Atentos Para a Enquete !\n [‚ùó] Aguarde 5 Segundos...', mentions: yd}, {quoted:info}).then(() => {
destiny.relayMessage(from, {pollCreationMessage: {name: texto.split('/')[0], options: op√ß√µes,  selectableOptionsCount: 0}}, {quoted: selo})
});
break

case 'enquete2':
if (!isGroup) return reply(enviar.msg.grupo)
var texto = args.join(' ')
if (!texto || !texto.split('/')[1]) return reply(`Use assim: ${prefix + command} Nero √© gay?/Sim/N√£o/Talvez`)
if (texto.split('/').length > 13) return reply('Use no m√°ximo 12 op√ß√µes')
var op√ß√µes = []
for (var i = 1; i < texto.split('/').length; i++){
op√ß√µes.push({optionName: texto.split('/')[i]})
}
destiny.relayMessage(from, {pollCreationMessage: {name: texto.split('/')[0], options: op√ß√µes,  selectableOptionsCount: 0}}, {quoted: info})
break








case 'infosorteio':
case 'helpsorteio':  
await destiny.sendMessage(from, {text:  infosorteio(prefix, pushname)}, {quoted: selo})
break

case 'promover': 
if(!isGroupAdmins) return reply('S√≥ ADM pode utilizar este comando.')
if(!isBotGroupAdmins) return reply('O Bot Precisa ser ADM pra executar essa a√ß√£o.')
teks = body.slice(11)
if(teks.length > 15) return reply('S√≥ pode promover uma pessoa por vez..')
await sleep(2000)
reply(`@${teks} Foi promovido(a) para adm com sucesso.`)
destiny.groupParticipantsUpdate(from, [`${teks}@s.whatsapp.net`], "promote")
break

case 'rebaixar': 
if(!isGroupAdmins) return reply('S√≥ ADM pode utilizar este comando.')
if(!isBotGroupAdmins) return reply('O Bot Precisa ser ADM pra executar essa a√ß√£o.')
teks = body.slice(11)
if(teks.length > 15) return reply('S√≥ pode rebaixar uma pessoa por vez..')
await sleep(2000)
reply(`@${teks} Foi Rebaixado(a) para membro comum com sucesso...`)
destiny.groupParticipantsUpdate(from, [`${teks}@s.whatsapp.net`], "demote")
break

case 'sorteio':
if(!isGroupAdmins) return reply('S√≥ ADM pode utilizar este comando.')
try{
if(!isGroup) return reply(enviar.msg.grupo)
if(!q) return reply(`Coloque algo, ap√≥s o comando sorteio, por exemplo, ${prefix}sorteio de 100 R$`)
d = []
teks = `üéâParab√©ns, por ganhar o sorteio ${q}:\n\n`
for(i = 0; i < 1; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
teks += `üî•·çù‚Éü¬†¬†‚û£ @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}
mentions(teks, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'sorteionumero':
case 'sorteionumeros':  
if(!isGroupAdmins) return reply('S√≥ ADM pode utilizar este comando.')  
try{
if(!isGroup) return reply(enviar.msg.grupo)
if(!q) return reply(`Coloque algo, ap√≥s o comando sorteio, por exemplo, ${prefix}sorteionumero de 100 R$`)
var numerossrt = sortear[Math.floor(Math.random() * sortear.length)] 
d = []
teks =  `üéâParab√©ns ao n√∫mero do sortudo, por ganhar o sorteio ${q}:\n\n`
for(i = 0; i < 1; i++) {
teks += `üî•·çù‚Éü¬†¬†‚û£ ${numerossrt}\n`
d.push(numerossrt)
}
mentions(teks, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

//================================\\


//========(TTPS/ATTP/TTM)=========\\

case 'attp':
if (args.length == 0) return reply(`Exemplo: ${prefix + command} Sad`)
reply(enviar.espere)
buffer = await getBuffer(`https://api.xteam.xyz/attp?file&text=${encodeURI(q)}`)
await destiny.sendMessage(from, {sticker: buffer}, {quoted: info}).catch(e => {
reply('ERROR, ALGUM PROBLEMA NA API, EU ACHO.. ')  
})
break

case 'ttp':
try {
reply(enviar.espere)
string = args.join(' ') || 'Texto indefinido'
post = `http://aleatoryapi.herokuapp.com/api/ttp?texto=${string}&apikey=${keyale}`
sendStickerFromUrl(from, post, {quoted: info})
} catch {
reply('ERROR!!')
}
break

case 'attp2':		
case 'attp3': 
case 'attp4':
case 'attp5': 
case 'attp6':  
try {
if (args.length < 1) return reply(`_Coloque o texto _\n\n*Exemplo ${prefix}attp Sad`)
reply(enviar.espere)
url = await getBuffer(`http://brizas-api.herokuapp.com/ttp/${command}?apikey=brizaloka&text=${encodeURI(q)}`)
await destiny.sendMessage(from, {sticker: url}, {quoted: info})
} catch {
reply('ERROR')
}
break	

//==================================\\


//===(ZOUEIRAS/BRINCADEIRAS/HUMOR)===\\

case 'modonsfw':
case 'nsfw':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isNsfw) return reply('O modo nsfw j√° est√° ativo')
nsfw.push(from)
fs.writeFileSync('./datab/grupos/nsfw.json', JSON.stringify(nsfw))
reply(`\`\`\`‚úìAtivado com sucesso o modo nsfw +18 no grupo\`\`\` *${groupMetadata.subject}*`)
} else if (Number(args[0]) === 0) {
if (!isNsfw) return reply('O modo nsfw j√° est√° Desativado')  
nsfw.splice(from, 1)
fs.writeFileSync('./datab/grupos/nsfw.json', JSON.stringify(nsfw))
reply(`\`\`\`‚úìModo Nsfw +18 desativado com sucesso no grupo\`\`\` *${groupMetadata.subject}*`)
} else {
reply('1 para ativar, 0 para desligar')
}
break 

case 'modobrincadeira':
case 'modobrincadeiras':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isModobn) return reply('o modobrincadeira j√° est√° ativo')
modobn.push(from)
fs.writeFileSync('./datab/grupos/brincadeiras.json', JSON.stringify(modobn))
reply(`\`\`\`‚úìAtivado com sucesso o modobrincadeiras no grupo\`\`\` *${groupMetadata.subject}*`)
} else if (Number(args[0]) === 0) {
if (!isModobn) return reply('o modobrincadeira j√° est√° Desativado')  
modobn.splice(from, 1)
fs.writeFileSync('./datab/grupos/brincadeiras.json', JSON.stringify(modobn))
reply(`\`\`\`‚úìModo brincadeiras desativado com sucesso no grupo\`\`\` *${groupMetadata.subject}*`)
} else {
reply('1 para ativar, 0 para desligar')
}
break 

case 'pl':
anu = await getBuffer('https://telegra.ph/file/0855427ea91c9c74eb290.mp4')
destiny.sendMessage(from, {video: anu, mimetype: 'video/mp4'}, {quoted: info})
break

///// LISTA ATIVADORES

case 'autofigu': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar Autofigu ‚úÖ", rowId: `${prefix}autosticker 1`},
	    {title: "‚ùå Desativar Autofigu ‚ùå", rowId: `${prefix}autosticker 0`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar no autofigu',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antilink': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar Antilink‚úÖ", rowId: `${prefix}antilin on`},
	    {title: "‚ùå Desativar Antilink ‚ùå", rowId: `${prefix}antilin off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antilink?',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'welcome': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar bem vindo ‚úÖ", rowId: `${prefix}welcom on`},
	    {title: "‚ùå Desativar bem vindo ‚ùå", rowId: `${prefix}welcom off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o bem vindo?',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antipalavras': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antipalavras ‚úÖ", rowId: `${prefix}antipalavra on`},
	    {title: "‚ùå Desativar antipalavras ‚ùå", rowId: `${prefix}antipalavra off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antipalavras',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antipv': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antipv ‚úÖ", rowId: `${prefix}antip on`},
	    {title: "‚ùå Desativar antipv ‚ùå", rowId: `${prefix}antip off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antipv?',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antictt': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antictt ‚úÖ", rowId: `${prefix}antic on`},
	    {title: "‚ùå Desativar antictt ‚ùå", rowId: `${prefix}antic off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antictt',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'anticatalogo': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar anticatalogo ‚úÖ", rowId: `${prefix}anticatalog on`},
	    {title: "‚ùå Desativar anticatalogo ‚ùå", rowId: `${prefix}anticatalog off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o anticatalogo',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antifake': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antifake ‚úÖ", rowId: `${prefix}antifak on`},
	    {title: "‚ùå Desativar antifake ‚ùå", rowId: `${prefix}antifak off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antifake',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antiloc': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antiloc ‚úÖ", rowId: `${prefix}antilo on`},
	    {title: "‚ùå Desativar antiloc ‚ùå", rowId: `${prefix}antilo off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antiloc',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antidocumento': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antidocumento ‚úÖ", rowId: `${prefix}antidocument on`},
	    {title: "‚ùå Desativar antidocumento ‚ùå", rowId: `${prefix}antidocument off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antidocumento',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antiimg': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antiimg ‚úÖ", rowId: `${prefix}antiim on`},
	    {title: "‚ùå Desativar antiimg ‚ùå", rowId: `${prefix}antiim off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antiimg',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antisticker': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antisticker ‚úÖ", rowId: `${prefix}antisticke on`},
	    {title: "‚ùå Desativar antisticker ‚ùå", rowId: `${prefix}antisticke off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antisticker',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antinota': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antinota ‚úÖ", rowId: `${prefix}antinot on`},
	    {title: "‚ùå Desativar antinota ‚ùå", rowId: `${prefix}antinot off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antiimg',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antiv√≠deo': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antiv√≠deo ‚úÖ", rowId: `${prefix}antiv√≠de on`},
	    {title: "‚ùå Desativar antiv√≠deo ‚ùå", rowId: `${prefix}antiv√≠de off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antiv√≠deo',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antimsg': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antimsg ‚úÖ", rowId: `${prefix}antims on`},
	    {title: "‚ùå Desativar antimsg ‚ùå", rowId: `${prefix}antims off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antimsg',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antiaudio': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antiaudio ‚úÖ", rowId: `${prefix}antiaudi on`},
	    {title: "‚ùå Desativar antiaudio ‚ùå", rowId: `${prefix}antiaudi off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antiaudio',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antilinkhard': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antilinkhard ‚úÖ", rowId: `${prefix}antilinkhar on`},
	    {title: "‚ùå Desativar antilinkhard ‚ùå", rowId: `${prefix}antilinkhar off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antilinkhard',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antiliga√ß√£o': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antiliga√ß√£o ‚úÖ", rowId: `${prefix}antiliga√ß√£ on`},
	    {title: "‚ùå Desativar antiliga√ß√£o ‚ùå", rowId: `${prefix}antiliga√ß√£ off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antiliga√ß√£o',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'antispam': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar antispam ‚úÖ", rowId: `${prefix}antispa on`},
	    {title: "‚ùå Desativar antispam ‚ùå", rowId: `${prefix}antispa off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o antispam',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'nsfw': 
 sections = [
    {
	title: `${NomeDoBot}`,
	rows: [
	    {title: "‚úÖ Ativar nsfw ‚úÖ", rowId: `${prefix}nsf on`},
	    {title: "‚ùå Desativar nsfw ‚ùå", rowId: `${prefix}nsf off`},
	]
    },
]
  listMessage2 = {
  text: 'Voc√™ quer ativar/desativar o nsfw',
  footer: 'Selecione uma das op√ß√µes e aperte em Enviar',
  title: `Ol√° ${pushname}`,
  buttonText: "Escolha aqui",
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break


//==========JOGOS/COMPLETO==========\\

case 'gay':
wew = Math.floor(Math.random() * 121)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null){
  txt = `‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚ä±‚Ä¢‚ú†‚Ä¢‚ä∞‚îÅ‚îÅ‚îÅ‚îÅ
‚ïø‚ïëü´Ç: ${pushname}
‚ïø‚ïë sua porcentagem de gay √©:
‚ïø‚ïë üè≥Ô∏è‚Äçüåà${wew}%üè≥Ô∏è‚Äçüåà
‚ïø‚ïë ¬©${NomeDoBot}
‚ïë‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚ä±‚Ä¢‚ú†‚Ä¢‚ä∞‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚ïê‚îÅ‚ïê‚îÅ‚îÅ‚ïê‚îÅ‚ïê‚îÅ‚ïê‚îÅ‚ïê‚îÅ‚îò`
} else {
  mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
  txt = ` ‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚ä±‚Ä¢‚ú†‚Ä¢‚ä∞‚îÅ‚îÅ‚îÅ‚îÅ
‚ïø‚ïëü´Ç: @${mentioned[0].split('@')[0]}
‚ïø‚ïë sua porcentagem de gay √©:
‚ïø‚ïë üè≥Ô∏è‚Äçüåà${wew}%üè≥Ô∏è‚Äçüåà
‚ïø‚ïë ¬©${NomeDoBot}
‚ïë‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚ä±‚Ä¢‚ú†‚Ä¢‚ä∞‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚ïê‚îÅ‚ïê‚îÅ‚îÅ‚ïê‚îÅ‚ïê‚îÅ‚ïê‚îÅ‚ïê‚îÅ‚îò`
}
ravideo = [
  `https://telegra.ph/file/0be902ff4066419a6319a.mp4`,
  `https://telegra.ph/file/d0aff5622eeee9fb2937c.mp4`,
  `https://telegra.ph/file/c275cc1c5d6e3cf6285f0.mp4`,
  `https://telegra.ph/file/6728fdf0ebabda60004aa.mp4`,
  `https://telegra.ph/file/5e28566a5ec5c8c768290.mp4`,
  `https://telegra.ph/file/654ed89b663f29539252b.mp4`,
  `https://telegra.ph/file/73610a8921f8a880f5e85.mp4`,
  `https://telegra.ph/file/c166578590f3dbd0c1585.mp4`]
  ravideo = ravideo[Math.floor(Math.random() * ravideo.length)]
  sendBvid(from, ravideo, txt, '', [{index: 1, quickReplyButton: {displayText: `OK ${NomeDoBot}`, id: ``}}], selo)
break

case 'shipo': {
teks = args.join(" ")
if(teks.length < 10) return reply('Marque uma pessoa do grupo para encontrar o par dela')
const suamae111 = groupMembers
const suamae211 = groupMembers
const teupai111 = suamae111[Math.floor(Math.random() * suamae111.length)]
const teupai211 = suamae211[Math.floor(Math.random() * suamae211.length)]
var shipted1 = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `100%`]
const shiptedd = shipted1[Math.floor(Math.random() * shipted1.length)]
jet = `*Shipo Voc√™s Dois*

‚îå‚ïê‚ù™ *Shipada Do ${NomeDoBot}* ‚ù´‚ïê‚îê
‚îÇ‚ï≠‚ô•Ô∏è‚û¢ ${teks}
‚îÇ‚Ä¢ Com Essa Pessoa
‚îÇ‚ï∞‚ô•Ô∏è‚û¢ @${teupai111.id.split('@')[0]}
‚îÇ‚Ä¢ Com Uma Porcentagem 
‚îÇ‚Ä¢ De: ${shiptedd} 
‚îî‚ïê‚ù™ *Shipada Da ${NomeDoBot}* ‚ù´‚ïê‚îò`
let buttons = [
{buttonId: `nd`, buttonText: {displayText: '‚≠î EU SHIPO ‚≠î'}, type: 1},
{buttonId: `ndnk`, buttonText: {displayText: '‚≠î EU N√ÉO SHIPO ‚≠î'}, type: 1}
]
let buttonMessage = {
image: { url: `https://telegra.ph/file/0d98ec444105570aca7bd.jpg` },
caption: jet,
footer: ``,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
thumbnail: '',
mediaType:2,
mediaUrl: ``, 
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, { quoted: selo })
}
break

case 'casal':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
membr = []
const suamae11 = groupMembers
const suamae21 = groupMembers
const teupai11 = suamae11[Math.floor(Math.random() * suamae11.length)]
const teupai21 = suamae21[Math.floor(Math.random() * suamae21.length)]
var shipted1 = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `100%`]
const shipted = shipted1[Math.floor(Math.random() * shipted1.length)]
wew = `https://telegra.ph/file/75ee530e8eff8c7da337d.jpg`
luffyD = moment.tz('America/Sao_Paulo').format('DD/MM/YY');
jetk = `*Novo Casal Do Grupo*\n
‚îå‚îÄ‚îÄ‚îÄ  ‚ù™ *Casal Lindo* ‚ù´  ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ‚ô•Ô∏è ‚ñ∏ @${teupai11.id.split('@')[0]}
‚îÇ‚ô•Ô∏è ‚ñ∏ @${teupai21.id.split('@')[0]}
‚îÇ‚Ä¢ Com Uma Porcentagem 
‚îÇ‚Ä¢ De: ${shipted}
‚îî‚îÄ‚îÄ‚îÄ  ‚ù™ *Casal Lindo* ‚ù´  ‚îÄ‚îÄ‚îÄ‚îò`
membr.push(teupai11.id)
membr.push(teupai21.id)
let buttons = [
{buttonId: `nd`, buttonText: {displayText: '‚≠î EU SHIPO ‚≠î'}, type: 1},
{buttonId: `ndnk`, buttonText: {displayText: '‚≠î EU N√ÉO SHIPO ‚≠î'}, type: 1}
]
let buttonMessage = {
image: { url: `https://telegra.ph/file/0d98ec444105570aca7bd.jpg` },
caption: jetk,
footer: ``,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
thumbnail: wew,
mediaType:2,
mediaUrl: ``, 
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, { quoted: selo })
break

case 'feio': {
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
rate = body.slice(6)
reply(' ‚ù∞ Pesquisando a sua ficha de feio : '+rate+', aguarde... ‚ù±')
wew = await getBuffer(`https://telegra.ph/file/320ef6ea91621357aaf9a.jpg`)
random = `${Math.floor(Math.random() * 110)}`
feio = random
if (feio < 20 ) {bo = '√â n√£o √© feio'} else if (feio == 21 ) {bo = '+/- feio'} else if (feio == 23 ) {bo = '+/- feio'} else if (feio == 24 ) {bo = '+/- feio'} else if (feio == 25 ) {bo = '+/- feio'} else if (feio == 26 ) {bo = '+/- feio'} else if (feio == 27 ) {bo = '+/- feio'} else if (feio == 2 ) {bo = '+/- feio'} else if (feio == 29 ) {bo = '+/- feio'} else if (feio == 30 ) {bo = '+/- feio'} else if (feio == 31 ) {bo = 'Ainda t√° na m√©dia'} else if (feio == 32 ) {bo = 'Da pra pegar umas(ns) novinha(o) ainda'} else if (feio == 33 ) {bo = 'Da pra pegar umas(ns) novinha(o) ainda'} else if (feio == 34 ) {bo = '√â fein, mas tem baum cora√ß√£o'} else if (feio == 35 ) {bo = 'T√° na m√©dia, mas n√£o deixa de ser feii'} else if (feio == 36 ) {bo = 'Bonitin mas √© feio com orgulho'} else if (feio == 37 ) {bo = 'Feio e pregui√ßoso(a), vai se arrumar praga feia'} else if (feio == 3 ) {bo = 'tenho '} else if (feio == 39 ) {bo = 'Feio, mas um banho E se arrumar, deve resolver'} else if (feio == 40 ) {bo = 'FeiN,  mas n√£o existe gente feia, existe gente que n√£o conhece os produtos jequity'} else if (feio == 41 ) {bo = 'voc√™ √© Feio, mas √© legal, continue assim'} else if (feio == 42 ) {bo = 'Nada que uma maquiagem e se arrumar, que n√£o resolva ü•¥'} else if (feio == 43 ) {bo = 'Feio que d√≥i de ver, compra uma m√°scara que melhora'} else if (feio == 44 ) {bo = 'Feio mas nada que um saco na cabe√ßa n√£o resolva n√©!?'} else if (feio == 45 ) {bo = 'voc√™ √© feio, mas tem bom gosto'} else if (feio == 46 ) {bo = 'Feio mas tem muitos amigos'} else if (feio == 47 ) {bo = 'Feio mas tem l√°bia pra pegar v√°rias novinha'} else if (feio == 4 ) {bo = 'Feio e ainda n√£o sabe se vestir, vixi'} else if (feio == 49 ) {bo = 'Feiooo'} else if (feio == 50 ) {bo = 'voc√™ √© Feio, mas n√£o se encherga üßê'} else if (feio > 51) {bo = 'voc√™ √© Feio demais üôà'} 
feiotxt = '[ü§ì] O quanto voc√™ √© feio? \n\n „Äå '+rate+' „ÄçVoc√™ √©: ‚ù∞ '+random+'% ‚ù± feio\n\n '+bo+' '
sleep(4000)
let buttonMessage = {
image: wew,
caption: feiotxt,
footer: `${NomeDoBot}`,
headerType: 4,
contextInfo:{externalAdReply:{
title: `Youth Dev's`,
body: `¬© Copyright ${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: fs.readFileSync('./logos/logo2.jpg'),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, 
{quoted:selo})}
break 

if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
case 'beijo': {
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque algu√©m que vc quer da um beijo')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `[üòò] Voc√™ deu um beijo gostoso de l√≠ngua na(o) @${mentioned[0].split('@')[0]} üëâüëà‚ù§` 
wew = await getBuffer(`https://telegra.ph/file/b6938d93b461781a69cab.jpg`)
let buttonMessage = {
image: wew,
caption: susp,
footer: `${NomeDoBot}`,
headerType: 4,
contextInfo:{externalAdReply:{
title: `Youth Dev's`,
body: `¬© Copyright ${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: fs.readFileSync('./logos/logo2.jpg'),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, 
{quoted:selo})}
break

case 'chute': case 'chutar': { 
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('[üí£] marque o alvo que voc√™ quer d√° um chute.')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
jry = await getBuffer("https://telegra.ph/file/09e1e145bb5be134bdce4.mp4")
pru = `[üí¢] O ${pushname}, acabou\nDe da um chute no: @${mentioned[0].split('@')[0]}.`
let buttonMessage = {
video: jry,
caption: pru,
footer: `${NomeDoBot}`,
mimetype: 'video/mp4',
headerType: 4,
contextInfo:{externalAdReply:{
title: `Youth Dev's`,
body: `¬© Copyright ${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: fs.readFileSync('./logos/logo2.jpg'),
sourceUrl:`https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, 
{quoted:selo})}
break 

case 'dogolpe': {
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if (args.length < 1) return await destiny.sendMessage(from, {text: 'coloca um nome'}, {quoted: info})
pkt = body.slice(9)
wew = await getBuffer("https://telegra.ph/file/69bc44d05f4921a7bac83.jpg")
random = `${Math.floor(Math.random() * 100)}`
jpr = `[üëø]ENCONTRADO[üëø]*\n\n[üí£] *GOLPISTA* : ${args[0]}\n\n[üöº]*PORCENTAGEM DO GOLPE* : ${random}%\n\nEle(a) gosta de ferir sentimentos dos outros üò¢`
let buttonMessage = {
image: wew,
caption: jpr,
footer: `${NomeDoBot}`,
headerType: 4,
contextInfo:{externalAdReply:{
title: `Youth Dev's`,
body: `¬© Copyright ${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: fs.readFileSync('./logos/logo2.jpg'),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, 
{quoted:selo})}
break

case 'matar':
case 'mata':  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('[üí£] marque o alvo que voc√™ quer matar.')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `[üí£] Voc√™ Acabou de matar o(a) @${mentioned[0].split('@')[0]} üòàüëπ` 
jrpp = await getBuffer("https://telegra.ph/file/b63fb9f18e469965f058e.mp4")
await destiny.sendMessage(from, {video: jrpp, gifPlayback: true, caption: susp}, {quoted: selo})
break 

case 'chance': {
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
var avb = body.slice(7)
if (args.length < 1) return destiny.sendMessage(from, {text: `[üí£] Voc√™ precisa digitar da forma correta\nExemplo: ${prefix}chance do Lula ganha um dedo.`}, {quoted: info})
wew = await getBuffer("https://telegra.ph/file/a3f96ddb9ddaf353cad46.jpg")
random = `${Math.floor(Math.random() * 100)}`
hasil = `[üí£] A chance ${body.slice(8)}\n\n√© de...[ ${random}% ]`
let buttonMessage = {
image: wew,
caption: hasil,
footer: `${NomeDoBot}`,
headerType: 4,
contextInfo:{externalAdReply:{
title: `Youth Dev's`,
body: `¬© Copyright ${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: fs.readFileSync('./logos/logo2.jpg'),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, 
{quoted:selo})}
break

case 'suicidio': {
if(info.key.fromMe) return 
if (!isGroup) return reply('Este comando s√≥ deve ser utilizado em Grupo.')
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
wew = await getBuffer("https://telegra.ph/file/59009ca812c6b54bf79ff.jpg")
jbl = `*Sinto muito por essa decis√£o ${pushname}.\n Espero que um dia volte para o grupo!* üò≠`
let buttonMessage = {
image: wew,
caption: jbl,
footer: `${NomeDoBot}`,
headerType: 4,
contextInfo:{externalAdReply:{
title: `Youth Dev's`,
body: `¬© Copyright ${NomeDoBot}`,
showAdAttribution: true,
mediaType:2,
thumbnail: fs.readFileSync('./logos/logo2.jpg'),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, 
{quoted:selo})}
await sleep(2000)
destiny.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(4000)
reply('maior babaca, realmente achou que eu iria sentir falta, kk')
break

case 'nazista':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
rate = body.slice(9)
reply(' ‚ù∞ Pesquisando a sua ficha de nazista : '+rate+' aguarde... ‚ù±')
 setTimeout(async() => {
wew = await getBuffer(`${imgnazista}`)
zxzz = 
random = `${Math.floor(Math.random() * 110)}`
await destiny.sendMessage(from, {image: wew, caption: 'O quanto voc√™ √© nazistaüíÇ‚Äç‚ôÇÔ∏è? \n\n„Äå '+rate+' „ÄçVoc√™ √©: ‚ù∞ '+random+'% ‚ù±  nazista Âçê'}, {quoted: info})
}, 7000)
break 

///////////// RANKS ////////////////

case 'ranklevel':
case 'rl':
case 'rank':
_level.sort((a, b) => (a.xp < b.xp) ? 1 : -1)
let leaderboardlvl = '    üèÜ„Ää Rank Niveis „ÄãüèÜ\n'
let nom = 0
imglevel = await getBuffer('https://telegra.ph/file/bb38c1f1f2c89a0d2538a.jpg')
try {
for (let i = 0; i < 10; i++) {
nom++
leaderboardlvl += `
‚îè ‚úòüîÆ ${setting.NomeDoBot} üîÆ‚úò‚îì
‚îÉ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤[üÜî]  [${nom}] œü‚û† ${_level[i].id.replace('@s.whatsapp.net', '')}
‚î£‚ù≤[üî¢]„ÄåLevel„Äç :œü‚û† ${_level[i].level}
‚î£‚ù≤[ü•∑]„Äåxp„Äç: œü${_level[i].xp}
‚îó ‚îÄ‚îÄ‚îÄ‚îÄ„Äå‚òÖ„Äç‚îÄ‚îÄ‚îÄ‚îÄ‚îö\n`
}
leaderboardlvl += `√ó‚Ä¢-‚Ä¢-‚Ä¢‚üÆ üèÜRanking LevelüèÜ‚üØ‚Ä¢-‚Ä¢-‚Ä¢√ó`
destiny.sendMessage(from, {image: imglevel, caption: leaderboardlvl, sendEphemeral: true, templateButtons: [{index: 1, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: `kkkk`}}]}, {quoted: selo})
} catch (err) {
console.error(err)
await reply(`[üí£] Deve conter 10 pessoas com level, e o leveling deve est√° ativado para que aconte√ßa a evolu√ß√£o de level dos membros, ap√≥s as intera√ß√µes`)
}
break

case 'rankativo':
case 'rankativos':  
if (!isGroup) return reply(enviar.msg.grupo)
if(groupIdscount.indexOf(from) < 0) return reply('O bot n√£o tem ainda dados sobre o grupo')
var ind = groupIdscount.indexOf(from)
if(countMessage[ind].numbers.length < 3) return reply('Necessita do registro de 3 usuarios')
countMessage[ind].numbers.sort((a, b) => (a.messages < b.messages) ? 1 : -1)
mentioned_jid = []
ativoimg = await getBuffer('https://telegra.ph/file/1e3f2cbeb8c190ed13915.jpg')
boardi = ' [üèÜ·çù‚Éü]¬†¬†¬† Ranking dos membros mais ativos do gp:\n\n'
try {
for (let i = 0; i < 5; i++) {
if (i == 0) boardi += `${i + 1}¬∫ ü•á : @${countMessage[ind].numbers[i].id.split('@')[0]}\nMensagens: ${countMessage[ind].numbers[i].messages}\nComandos dados: ${countMessage[ind].numbers[i].cmd_messages}\n\n`
else if (i == 1) boardi += `${i + 1}¬∫ ü•à : @${countMessage[ind].numbers[i].id.split('@')[0]}\nMensagens: ${countMessage[ind].numbers[i].messages}\nComandos dados: ${countMessage[ind].numbers[i].cmd_messages}\n\n`
else if (i == 2) boardi += `${i + 1}¬∫ ü•â : @${countMessage[ind].numbers[i].id.split('@')[0]}\nMensagens: ${countMessage[ind].numbers[i].messages}\nComandos dados: ${countMessage[ind].numbers[i].cmd_messages}\n\n`
else if (i == 3) boardi += `${i + 1}¬∫ ü•â : @${countMessage[ind].numbers[i].id.split('@')[0]}\nMensagens: ${countMessage[ind].numbers[i].messages}\nComandos dados: ${countMessage[ind].numbers[i].cmd_messages}\n\n`	
else if (i == 4) boardi += `${i + 1}¬∫ ü•â : @${countMessage[ind].numbers[i].id.split('@')[0]}\nMensagens: ${countMessage[ind].numbers[i].messages}\nComandos dados: ${countMessage[ind].numbers[i].cmd_messages}\n\n`			
mentioned_jid.push(countMessage[ind].numbers[i].id)
} 
destiny.sendMessage(from, {image: ativoimg, caption: boardi, mentions: mentioned_jid}, {quoted: selo})
} catch (err) {
			console.log(err)
await destiny.sendMessage(from, {text: `√â necess√°rio 5 jogadores para se construir um ranking`}, {quoted: info})
}
break

case 'msgativos':
if (!isGroup) return reply(enviar.msg.grupo)
if(groupIdscount.indexOf(from) < 0) return reply('O bot n√£o tem ainda dados sobre o grupo')
var ind = groupIdscount.indexOf(from)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque o n√∫mero que deseja puxar a atividade')
checkimg = await getBuffer('https://telegra.ph/file/0829b09e217f4d24808d8.jpg')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
if(numbersIds.indexOf(mentioned[0]) >= 0) {
var indnum = numbersIds.indexOf(mentioned[0])
destiny.sendMessage(from, {image: checkimg, caption: `[ñ£ò‚Éü·óí] Consulta das atividade de\n[üÜî] @${mentioned[0].split('@')[0]} no grupo\n[üì™] Mensagens: ${countMessage[ind].numbers[indnum].messages}\n[üß∏] comandos usados: ${countMessage[ind].numbers[indnum].cmd_messages}`, mentions: mentioned}, {quoted: selo})
}
else {
mentions(`[ ‚ãÜ‚Éü€ú€£·≠™‚û£ ] Consulta da atividade de [üÜî] @${mentioned[0].split('@')[0]} no grupo\n[üì™] Mensagens: 0\n[üß∏] Comandos dados: 0`, mentioned, true)
}
break

case 'rankgay': 
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
try{
var ddr = []
ret = 'Rank dos que chupa at√© a bola[üßê]\n\n'
for(i = 0; i < 5; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
ret += `[üè≥Ô∏è‚Äçüåà] @${groupMembers[r].id.split('@')[0]}\n`
ddr.push(groupMembers[r].id)
}
let buttons = [
{buttonId: `${prefix + command}`, buttonText: {displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'}, type: 1}
]
let buttonMessage6 = {
image: {url: 'https://telegra.ph/file/94c4c2380f86ee42abc83.jpg'},
caption: ret.trim(),
footer: ``,
mentions: ddr,
buttons: buttons,
headerType: 2
}
destiny.sendMessage(from, buttonMessage6, {quoted: info})
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'rankmacaco':
if(!isGroup) return reply('Este comandos s√≥ pode ser utilizado em grupos')
try{
var ddr = []
ret = '[üêµ] Rank dos Macacos(as) do grupo \n\n'
for(i = 0; i < 5; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
ret += `[üêí] @${groupMembers[r].id.split('@')[0]}\n`
ddr.push(groupMembers[r].id)
}
let buttons = [
{buttonId: `${prefix + command}`, buttonText: {displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'}, type: 1}
]
let buttonMessage6 = {
image: {url: 'https://telegra.ph/file/6648dda563f8fb0855f1c.jpg'},
caption: ret.trim(),
footer: ``,
mentions: ddr,
buttons: buttons,
headerType: 2
}
destiny.sendMessage(from, buttonMessage6, {quoted: info})
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'rankcasal':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
try{
var ddr = []
ret = '[üíù] Rank dos casais do grupo, "shipando o de cima com o debaixo" \n\n'
for(i = 0; i < 6; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
ret += `[üíè] @${groupMembers[r].id.split('@')[0]}\n`
ddr.push(groupMembers[r].id)
}
let buttons = [
{buttonId: `${prefix + command}`, buttonText: {displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'}, type: 1}
]
let buttonMessage6 = {
image: {url: 'https://telegra.ph/file/cd5434c34dcbfca83103f.jpg'},
caption: ret.trim(),
footer: ``,
mentions: ddr,
buttons: buttons,
headerType: 2
}
destiny.sendMessage(from, buttonMessage6, {quoted: info})
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'rankgado':
case 'rankgados':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
try{
var ddr = []
ret = '[üêÉ] Rank dos mais gados do grupo\n\n'
for(i = 0; i < 5; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
ret += `[ü¶¨] @${groupMembers[r].id.split('@')[0]}\n`
ddr.push(groupMembers[r].id)
}
let buttons = [
{buttonId: `${prefix + command}`, buttonText: {displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'}, type: 1}
]
let buttonMessage6 = {
image: {url: 'https://telegra.ph/file/5df06b148ca267828a9aa.jpg'},
caption: ret.trim(),
footer: ``,
mentions: ddr,
buttons: buttons,
headerType: 2
}
destiny.sendMessage(from, buttonMessage6, {quoted: info})
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'rankcorno':
case 'rankcornos':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
var membr = []
const corno1 = groupMembers
const corno2 = groupMembers
const corno3 = groupMembers
const corno4 = groupMembers
const corno5 = groupMembers
const cornos1 = corno1[Math.floor(Math.random() * corno1.length)]
const cornos2 = corno2[Math.floor(Math.random() * corno2.length)]
const cornos3 = corno3[Math.floor(Math.random() * corno3.length)]
const cornos4 = corno4[Math.floor(Math.random() * corno4.length)]
const cornos5 = corno5[Math.floor(Math.random() * corno5.length)]
var porcentagemcorno = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `O chifre desse ai bate na lua ksksksk`]
const porcentagemc = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porcentag = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porcent = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porcl = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porg = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const prg = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
ytb = ` [üêÉ] Esses s√£o os cornos do grupo ${groupName}\n@${cornos1.id.split('@')[0]}\nCom uma porcentagem de ${porcent}\n@${cornos2.id.split('@')[0]}\nCom uma porcentagem de ${porcentag}\n@${cornos3.id.split('@')[0]}\nCom uma porcentagem de ${porcl}\n@${cornos4.id.split('@')[0]}\nCom uma porcentagem de ${porg}\n@${cornos5.id.split('@')[0]}\nCom uma porcentagem de ${prg}\n`
membr.push(cornos1.id)
membr.push(cornos2.id)
membr.push(cornos3.id)
membr.push(cornos4.id)
membr.push(cornos5.id)
buttons2 = [
{buttonId: `${prefix + command}`, buttonText: {displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'}, type: 1}
]
buttonMessage6 = {
image: {url: 'https://telegra.ph/file/75a5e01cd18363f52f38f.jpg'},
caption: ytb,
footer: ``,
mentions: membr,
buttons: buttons2,
headerType: 2
}
destiny.sendMessage(from, buttonMessage6, {quoted: info})
break

case 'rankgostosos':
case 'rankgostoso': {
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
var member = []
const p01 = groupMembers
const p02 = groupMembers
const p03 = groupMembers
const p04 = groupMembers
const p05 = groupMembers
const o01 = p01[Math.floor(Math.random() * p01.length)]
const o02 = p02[Math.floor(Math.random() * p02.length)]
const o03 = p03[Math.floor(Math.random() * p03.length)]
const o04 = p04[Math.floor(Math.random() * p04.length)]
const o05 = p05[Math.floor(Math.random() * p05.length)]
luy = `
[üôà] PARADOS GOSTOSOS [üôà]\n\n1=[üóø] @${o01.id.split('@')[0]}\n2=[üòà] @${o02.id.split('@')[0]}\n3=[ü•∑] @${o03.id.split('@')[0]}\n4=[üòè] @${o04.id.split('@')[0]}\n5=[üôà] @${o05.id.split('@')[0]}\n\nMulta por serem gostosos dmsüò≥ paguem a pena trabalhando em nossa ag√™ncia de mamadores üòä by: ${NomeDoBot}`
member.push(o01.id)
member.push(o02.id)
member.push(o03.id)
member.push(o04.id)
member.push(o05.id)
let buttons = [
{buttonId: `${prefix + command}`, buttonText: {displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'}, type: 1}
]
let buttonMessage6 = {
image: {url: 'https://telegra.ph/file/569e5ab1ef60e0580d983.jpg'},
caption: luy,
footer: ``,
mentions: membr,
buttons: buttons,
headerType: 2
}
destiny.sendMessage(from, buttonMessage6, {quoted: info})
}
break

case 'rankgostosas':
case 'rankgostosa': {
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
var member = []
const p1 = groupMembers
const p2 = groupMembers
const p3 = groupMembers
const p4 = groupMembers
const p5 = groupMembers
const o1 = p1[Math.floor(Math.random() * p1.length)]
const o2 = p2[Math.floor(Math.random() * p2.length)]
const o3 = p3[Math.floor(Math.random() * p3.length)]
const o4 = p4[Math.floor(Math.random() * p4.length)]
const o5 = p5[Math.floor(Math.random() * p5.length)]
luy = `
[ü´£] PARADAS GOSTOSAS [ü´£]\n\n1=[üòç] @${o1.id.split('@')[0]}\n2=[ü´£] @${o2.id.split('@')[0]}\n3=[üòö] @${o3.id.split('@')[0]}\n4=[‚ò∫] @${o4.id.split('@')[0]}\n5=[ü§ó] @${o5.id.split('@')[0]}\n\nMulta por serem gostosas dmsüò≥ pague pena enviando nuds no PV do dono do botüòä by: ${NomeDoBot}`
member.push(o1.id)
member.push(o2.id)
member.push(o3.id)
member.push(o4.id)
member.push(o5.id)
let buttons = [
{buttonId: `${prefix + command}`, buttonText: {displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'}, type: 1}
]
let buttonMessage6 = {
image: {url: 'https://telegra.ph/file/9c091550ea884892e06e9.jpg'},
caption: luy,
footer: ``,
mentions: membr,
buttons: buttons,
headerType: 2
}
destiny.sendMessage(from, buttonMessage6, {quoted: info})
}
break

case 'ranknazista':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
try{
var ddr = []
teks = 'Ô∏è[üíÇ‚Äç‚ôÇÔ∏è] Rank dos mais nazistas do gp\n\n'
for(i = 0; i < 5; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
teks += `Ô∏è[üíÇ‚Äç‚ôÇÔ∏è] @${groupMembers[r].id.split('@')[0]}\n`
ddr.push(groupMembers[r].id)
}
let buttons = [
{buttonId: `${prefix + command}`, buttonText: {displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'}, type: 1}
]
let buttonMessage6 = {
image: {url: 'https://telegra.ph/file/caa97f5666882ef20413a.jpg'},
caption: teks.trim(),
footer: ``,
mentions: ddr,
buttons: buttons,
headerType: 2
}
destiny.sendMessage(from, buttonMessage6, {quoted: info})
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'rankotakus': {
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
var membr = []
const otaku1 = groupMembers
const otaku2 = groupMembers
const otaku3 = groupMembers
const otaku4 = groupMembers
const otaku5 = groupMembers
const otaku6 = groupMembers
const otaku7 = groupMembers
const otaku = groupMembers
const otaku9 = groupMembers
const otaku10 = groupMembers
const otakus1 = otaku1[Math.floor(Math.random() * otaku1.length)]
const otakus2 = otaku2[Math.floor(Math.random() * otaku2.length)]
const otakus3 = otaku3[Math.floor(Math.random() * otaku3.length)]
const otakus4 = otaku4[Math.floor(Math.random() * otaku4.length)]
const otakus5 = otaku5[Math.floor(Math.random() * otaku5.length)]
const otakus6 = otaku6[Math.floor(Math.random() * otaku6.length)]
const otakus7 = otaku7[Math.floor(Math.random() * otaku7.length)]
const otakus = otaku[Math.floor(Math.random() * otaku.length)]
const otakus9 = otaku9[Math.floor(Math.random() * otaku9.length)]
const otakus10 = otaku10[Math.floor(Math.random() * otaku10.length)]
ytb = `[ü•∏]esses s√£o os otakus fedidos do grupo:\n\n@${otakus1.id.split('@')[0]}\n@${otakus2.id.split('@')[0]}\n@${otakus3.id.split('@')[0]}\n@${otakus4.id.split('@')[0]}\n@${otakus5.id.split('@')[0]}\n@${otakus6.id.split('@')[0]}\n@${otakus7.id.split('@')[0]}\n@${otakus.id.split('@')[0]}\n@${otakus9.id.split('@')[0]}\n@${otakus10.id.split('@')[0]}\n\n‚ö° ${setting.NomeDoBot} ‚ö°`
membr.push(otakus1.id)
membr.push(otakus2.id)
membr.push(otakus3.id)
membr.push(otakus4.id)
membr.push(otakus5.id)
membr.push(otakus6.id)
membr.push(otakus7.id)
membr.push(otakus.id)
membr.push(otakus9.id)
membr.push(otakus10.id)
let buttons = [
{buttonId: `${prefix + command}`, buttonText: {displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'}, type: 1}
]
let buttonMessage6 = {
image: {url: 'https://telegra.ph/file/3ea831a2731b10cecd5f9.jpg'},
caption: ytb,
footer: ``,
mentions: membr,
buttons: buttons,
headerType: 2
}
destiny.sendMessage(from, buttonMessage6, {quoted: info})
}
break

case 'rankpau': {
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
var membr = []
const pauz1 = groupMembers
const pauz2 = groupMembers
const pauz3 = groupMembers
const pauz4 = groupMembers
const pauz5 = groupMembers
const paus1 = pauz1[Math.floor(Math.random() * pauz1.length)]
const paus2 = pauz2[Math.floor(Math.random() * pauz2.length)]
const paus3 = pauz3[Math.floor(Math.random() * pauz3.length)]
const paus4 = pauz4[Math.floor(Math.random() * pauz4.length)]
const paus5 = pauz5[Math.floor(Math.random() * pauz5.length)]
var pcpau1 = ["[üòî]Minusc√∫lo, bata siririca mesmo novinha.", `[üè≥Ô∏è‚Äçüåà]Pequenino, da a bunda que ganha mais.`, `[ü•∏]4 cm, 2 indo e 2 voltando.`, `[ü§åüèª]M√©dio, j√° d√° pra usar o dedo na punheta.`, `[ü´Éüèª]Grandinho, pau de obeso no resumo.`, `[ü§°]Grande, o palha√ßo j√° mama rindo.`, `[üë¶üèø]kid bengala com fimose.`, `[üêé]pica de jegue`, `[üê¥]pau de tora burra, aguenta tche.`, `[üöº]Enorme, ela vai subir ela vai descer.`, `[üáßüá∑BATENDO A XIBATA NA CARA DO LULA.`, `[üò≠]FURADEIRA ELETRICA, ARRONBO NOSSAS M√ÉES KKKKKKk`]
var pcpau2 = ["[üòî]Minusc√∫lo, bata siririca mesmo novinha.", `[üè≥Ô∏è‚Äçüåà]Pequenino, da a bunda que ganha mais.`, `[ü•∏]4 cm, 2 indo e 2 voltando.`, `[ü§åüèª]M√©dio, j√° d√° pra usar o dedo na punheta.`, `[ü´Éüèª]Grandinho, pau de obeso no resumo.`, `[ü§°]Grande, o palha√ßo j√° mama rindo.`, `[üë¶üèø]kid bengala com fimose.`, `[üêé]pica de jegue`, `[üê¥]pau de tora burra, aguenta tche.`, `[üöº]Enorme, ela vai subir ela vai descer.`, `[üáßüá∑BATENDO A XIBATA NA CARA DO LULA.`, `[üò≠]FURADEIRA ELETRICA, ARRONBO NOSSAS M√ÉES KKKKKKk`]
var pcpau3 = ["[üòî]Minusc√∫lo, bata siririca mesmo novinha.", `[üè≥Ô∏è‚Äçüåà]Pequenino, da a bunda que ganha mais.`, `[ü•∏]4 cm, 2 indo e 2 voltando.`, `[ü§åüèª]M√©dio, j√° d√° pra usar o dedo na punheta.`, `[ü´Éüèª]Grandinho, pau de obeso no resumo.`, `[ü§°]Grande, o palha√ßo j√° mama rindo.`, `[üë¶üèø]kid bengala com fimose.`, `[üêé]pica de jegue`, `[üê¥]pau de tora burra, aguenta tche.`, `[üöº]Enorme, ela vai subir ela vai descer.`, `[üáßüá∑BATENDO A XIBATA NA CARA DO LULA.`, `[üò≠]FURADEIRA ELETRICA, ARRONBO NOSSAS M√ÉES KKKKKKk`]
var pcpau4 = ["[üòî]Minusc√∫lo, bata siririca mesmo novinha.", `[üè≥Ô∏è‚Äçüåà]Pequenino, da a bunda que ganha mais.`, `[ü•∏]4 cm, 2 indo e 2 voltando.`, `[ü§åüèª]M√©dio, j√° d√° pra usar o dedo na punheta.`, `[ü´Éüèª]Grandinho, pau de obeso no resumo.`, `[ü§°]Grande, o palha√ßo j√° mama rindo.`, `[üë¶üèø]kid bengala com fimose.`, `[üêé]pica de jegue`, `[üê¥]pau de tora burra, aguenta tche.`, `[üöº]Enorme, ela vai subir ela vai descer.`, `[üáßüá∑BATENDO A XIBATA NA CARA DO LULA.`, `[üò≠]FURADEIRA ELETRICA, ARRONBO NOSSAS M√ÉES KKKKKKk`]
var pcpau5 = ["[üòî]Minusc√∫lo, bata siririca mesmo novinha.", `[üè≥Ô∏è‚Äçüåà]Pequenino, da a bunda que ganha mais.`, `[ü•∏]4 cm, 2 indo e 2 voltando.`, `[ü§åüèª]M√©dio, j√° d√° pra usar o dedo na punheta.`, `[ü´Éüèª]Grandinho, pau de obeso no resumo.`, `[ü§°]Grande, o palha√ßo j√° mama rindo.`, `[üë¶üèø]kid bengala com fimose.`, `[üêé]pica de jegue`, `[üê¥]pau de tora burra, aguenta tche.`, `[üöº]Enorme, ela vai subir ela vai descer.`, `[üáßüá∑BATENDO A XIBATA NA CARA DO LULA.`, `[üò≠]FURADEIRA ELETRICA, ARRONBO NOSSAS M√ÉES KKKKKKk`]
const pc1 = pcpau1[Math.floor(Math.random() * pcpau1.length)]
const pc2 = pcpau2[Math.floor(Math.random() * pcpau2.length)]
const pc3 = pcpau3[Math.floor(Math.random() * pcpau3.length)]
const pc4 = pcpau4[Math.floor(Math.random() * pcpau4.length)]
const pc5 = pcpau5[Math.floor(Math.random() * pcpau5.length)]
pdr = `[üòà] Esses s√£o os cara com um pau t√£o grande que apanha manga deitado com sua vara.\n\n[ü•∑]${groupName}[ü•∑]\n\n@${paus1.id.split('@')[0]}\n${pc1}\n\n@${paus2.id.split('@')[0]}\n${pc2}\n\n@${paus3.id.split('@')[0]}\n${pc3}\n\n@${paus4.id.split('@')[0]}\n${pc4}\n\n@${paus5.id.split('@')[0]}\n${pc5}\n\n ${setting.NomeDoBot}`
membr.push(paus1.id)
membr.push(paus2.id)
membr.push(paus3.id)
membr.push(paus4.id)
membr.push(paus5.id)
let buttons = [
{buttonId: `${prefix + command}`, buttonText: {displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'}, type: 1}
]
let buttonMessage6 = {
image: {url: 'https://telegra.ph/file/b369174971a7ba3414499.jpg'},
caption: pdr,
footer: ``,
mentions: membr,
buttons: buttons,
headerType: 2
}
destiny.sendMessage(from, buttonMessage6, {quoted: info})
}
break

case "copybutton":
var captionnye = q.split('|')[0] || `Textim legal`
var displaynye = q.split('|')[1] || `Copiar`
var copynye = q.split('|')[2] || `nero gostoso`
 menuButa = [
{index: 1, urlButton: {displayText: `${displaynye}`, url: 'https://www.whatsapp.com/otp/copy/'+copynye}},
]
await destiny.sendMessage(from, { text: `${captionnye}`, templateButtons: menuButa, footer: NomeDoBot })
break

////////

case 'jogodavelha':
if(!isGroup) return reply('comando apenas para grupos')
joguinhodavelhajs.push(sender)
fs.writeFileSync('./datab/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs))
joguinhodavelhajs2.push(from)
fs.writeFileSync('./datab/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
if (fs.existsSync(`./armor/tictactoe/db/${from}.json`)) {
const boardnow = setGame(`${from}`);
const matrix = boardnow._matrix;
const chatMove = `*üéÆ·èÄÃ∏·é™Ã∏·é∑Ã∏·é¨Ã∏ ·é†Ã∏·é™Ã∏ ·èôÃ∏·é¨Ã∏·èûÃ∏·éªÃ∏·é™Ã∏üïπÔ∏è*
     
[‚ùó] Algu√©m est√° jogando no momento...\n\n@${boardnow.X} VS @${boardnow.O}
     
‚ùå : @${boardnow.X}
‚≠ï : @${boardnow.O}
     
 Sua vez : @${boardnow.turn == "X" ? boardnow.X : boardnow.O}
     
${matrix[0][0]}  ${matrix[0][1]}  ${matrix[0][2]}
${matrix[1][0]}  ${matrix[1][1]}  ${matrix[1][2]}
${matrix[2][0]}  ${matrix[2][1]}  ${matrix[2][2]}
`;
destiny.sendMessage(from, {text: chatMove}, {quoted: info,
contextInfo: {
mentionedJid: [
boardnow.X + "@s.whatsapp.net",
boardnow.O + "@s.whatsapp.net",
],
},
});
return;
}
if (argss.length === 1)
return reply(`*‚üÖ‚ùó‚üÜ Jogue com Alguem!!!!*
*para inicar a partida : ${prefix + command} @membro do gp*`);
const boardnow = setGame(`${from}`);
console.log(`Start No jogodavelha ${boardnow.session}`);
boardnow.status = false;
boardnow.X = sender.replace("@s.whatsapp.net", "");
boardnow.O = argss[1].replace("@", "");
fs.writeFileSync(`./armor/tictactoe/db/${from}.json`,
JSON.stringify(boardnow, null, 2)
);
const strChat = `*„Äéüìå·é¨’è·è¢·é¨·é°·é™Œù·é†œ¥ œ¥ œ¥·è¢œ¥Œù·é¨ŒùÕ≤·é¨‚öîÔ∏è„Äè*
     
@${sender.replace("@s.whatsapp.net",
"")} _est√° te desafiando para uma partida de jogo da velha..._
_[ ${argss[1]} ] Use *„ÄéS„Äè* para aceitar ou *„ÄéN„Äè* para n√£o aceitar..._
     `;
destiny.sendMessage(from, {text: strChat}, {quoted: info,
contextInfo: {
mentionedJid: [sender, argss[1].replace("@", "") + "@s.whatsapp.net"],
},
});
break

case 'resetarvelha':
case 'resetavelha':  
case 'resetarv':
case 'resetav': 
case 'resetvelha':
case 'rv': 
if (!isJoguin && !isGroupAdmins) return reply(`Fale com quem iniciou o jogo, s√≥ ele pode resetar, ou ent√£o algum ADM`)
if (fs.existsSync("./armor/tictactoe/db/" + from + ".json")) {
fs.unlinkSync("./armor/tictactoe/db/" + from + ".json");
reply(`Jogo da velha resetado com sucesso nesse grupo!`);
joguinhodavelhajs.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs))
joguinhodavelhajs2.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
} else {
reply(`N√£o a nenhuma sess√£o em andamento...`);
}
break

case "ppt":
if (args.length < 1) return reply(`Voc√™ deve digitar ${prefix}ppt pedra, ${prefix}ppt papel ou ${prefix}ppt tesoura`)
ppt = ["pedra", "papel", "tesoura"]
ppy = ppt[Math.floor(Math.random() * ppt.length)]
ppg = Math.floor(Math.random() * 1) + 10
pptb = ppy
pptimg = await getBuffer('https://telegra.ph/file/985b9432626731eebd175.jpg')
if ((pptb == "pedra" && args == "papel") ||
(pptb == "papel" && args == "tesoura") ||
(pptb == "tesoura" && args == "pedra")) {
var vit = "vitoria"
} else if ((pptb == "pedra" && args == "tesoura") ||
(pptb == "papel" && args == "pedra") ||
(pptb == "tesoura" && args == "papel")) {
var vit = "derrota"
} else if ((pptb == "pedra" && args == "pedra") ||
(pptb == "papel" && args == "papel") ||
(pptb == "tesoura" && args == "tesoura")) {
var vit = "empate"
} else if (vit = "undefined") {
return reply(`Voc√™ deve digitar ${prefix}ppt pedra, ${prefix}ppt papel ou ${prefix}ppt tesoura`)
}
if (vit == "vitoria") {
var tes = "Vit√≥ria do jogador"
}
if (vit == "derrota") {
var tes = "A vit√≥ria √© do BOT"
}
if (vit == "empate") {
var tes = "O jogo terminou em empate"
}
destiny.sendMessage(from, {image: pptimg, caption: `[üë§]  ${NomeDoBot} jogou: ${pptb}\n[ü•∑] Vc jogador jogou: ${args}\n\n${tes}`, templateButtons: [{index: 1, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: `kkkk`}}]}, {quoted: selo})
if (tes == "Vit√≥ria do jogador") {
}
break

case 'cassino': {
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
addFilter(from)  
const soto = [
'üçä : üçí : üçê',
'üçí : üîî : üçä',
'üçá : üçá : üçá',
'üçä : üçã : üîî',
'üîî : üçí : üçê',
'üîî : üçí : üçä',
'üçä : üçã : ??',		
'üçê : üçí : üçã',
'üçê : üçê : üçê',
'üçä : üçí : üçí',
'üîî : üîî : üçá',
'üçå : üçí : üîî',
'üçê : üîî : üîî',
'üçä : üçã : üçí',
'üçã : üçã : üçå',
'üîî : üîî : üçá',
'üîî : üçê : üçá',
'üîî : üîî : üîî',
'üçí : üçí : üçí',
'üçå : üçå : üçå'
]		  
const somtoy2 = sotoy[Math.floor(Math.random() * sotoy.length)]
if ((somtoy2 == 'ü•ë : ü•ë : ü•ë') ||(somtoy2 == 'üçâ : üçâ : üçâ') ||(somtoy2 == 'üçì : üçì : üçì') ||(somtoy2 == 'üçé : üçé : üçé') ||(somtoy2 == 'üçç : üçç : üçç') ||(somtoy2 == 'ü•ù : ü•ù : ü•ù') ||(somtoy2 == 'üçë : üçë : üçë') ||(somtoy2 == 'ü•• : ü•• : ü••') ||(somtoy2 == 'üçã : üçã : üçã') ||(somtoy2 == 'üçê : üçê : üçê') ||(somtoy2 == 'üçå : üçå : üçå') ||(somtoy2 == 'üçí : üçí : üçí') ||(somtoy2 == 'üîî : üîî : üîî') ||(somtoy2 == 'üçä : üçä : üçä') ||(somtoy2 == 'üçá : üçá : üçá')) {
var Vit√≥ria = "Voc√™ ganhou!!!"
} else {
var Vit√≥ria = "Voc√™ perdeu..."
}
const cassino = `
‚îè‚îÅ‚îÄ‚îÄ‚îÄ‚ùÆ‚óÜ‚ùØ‚îÄ‚îÄ‚îÄ‚îÅ
‚îÇ= | üé∞ ùóñùóîùó¶ùó¶ùóúùó°ùó¢ üé∞
‚îÇ‚Ä¢‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚Ä¢
‚îÇ= |    ${somtoy2}
‚îó‚îÅ‚îÄ‚îÄ‚îÄ‚ùÆ‚óÜ‚ùØ‚îÄ‚îÄ‚îÄ‚îÅ`
daftarimg = await getBuffer(ppimg)
let buttons = [
{
buttonId: `${prefix}cassino`, 
buttonText: {
displayText: '·¨äÕ°Õúùë∑ùëπùë∂ÃÅùëøùë∞ùë¥ùë∂'
}, type: 1},
]
let buttonMessage = {
image: { url: ppimg },
caption: `${cassino}`,
footer: `‚Ä¢ Usuario: ${pushname}\n‚Ä¢ Status: ${Vit√≥ria}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: ``,
body: `${NomeDoBot}`,
showAdAttribution: true,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: ``, 
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`
}}
}
destiny.sendMessage(from, buttonMessage, { quoted: selo })
}
break

case 'quizanimais':
if(!isGroup) return reply('Comando apenas para grupos')
const animaisquiz = Math.floor(Math.random() * quizanimais.length)
if(!isGroupAdmins) return reply('Comando apenas para admins')
if(args.length == 0) return reply('use 1 para ativar o jogo \npara desativar use quizanimais 0')
if (args.join(' ') === '1') {
if(fs.existsSync(`./armor/quizanim-${from}.json`)) {
let dataAnagrama2 = JSON.parse(fs.readFileSync(`./armor/quizanim-${from}.json`))
imagemtexto =`                             „Äå‚ùìQuiz‚ùì„Äç`
wew = await getBuffer(`${dataAnagrama2.foto}`)   
await destiny.sendMessage(from, {image: wew, caption: imagemtexto, thumbnail: wew}, {quoted: selo})
} else {
fs.writeFileSync(`./armor/quizanim-${from}.json`, `${JSON.stringify(quizanimais[animaisquiz])}`)
imagemtexto =`                             „Äå‚ùìQuiz‚ùì„Äç`
wew = await getBuffer(`${dataAnagrama2.foto}`)  
await destiny.sendMessage(from, {image: wew, caption: imagemtexto, thumbnail: wew}, {quoted: selo})
}
} else if (args.join(' ') ==='0') {
if(!fs.existsSync(`./armor/quizanim-${from}.json`)) return reply('N√£o tem como desativar o jogo p√¥s ele n√£o foi ativado')
fs.unlinkSync(`./armor/quizanim-${from}.json`)
reply("Desativado com sucesso")
}
await limitAdd(sender)
break

case 'anagrama':
if(!isGroup) return reply('comando apenas para grupos')
const anaaleatorio = Math.floor(Math.random() * palavrasANA.length)
if(!isGroupAdmins) return reply('comando apenas para admins')
if(args.length == 0) return reply('use 1 para ativar o jogo do anagrama\npara desativar use anagrama 0')
if (args.join(' ') === '1') {
if(fs.existsSync(`./armor/anagrama-${from}.json`)) {
let dataAnagrama2 = JSON.parse(fs.readFileSync(`./armor/anagrama-${from}.json`))
boa = `‚ï≠‚îÅ„Äî JOGO DAS LETRAS „Äï‚îÅ‚¨£
‚ïë ‚ñ¢ DESCUBRA A PALAVRA
‚ïë ‚ñ¢ ANAGRAMA: ${dataAnagrama2.embaralhada}
‚ïë ‚ñ¢ DICA: ${dataAnagrama2.dica}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ`
sendBtext(from, boa, `Nome: ${pushname}\nClique No Bot√£o Abaixo, Para cancelar, Boa Sorte!`, [{buttonId:`${prefix + command} 0`, buttonText: {displayText: '‚ùåùóñùóîùó°ùóñùóòùóüùóîùó•'}, type: 1}], info)
} else {
fs.writeFileSync(`./armor/anagrama-${from}.json`, `${JSON.stringify(palavrasANA[anaaleatorio])}`)
wew = `‚ï≠‚îÅ„Äî JOGO DAS LETRAS „Äï‚îÅ‚¨£
‚ïë ‚ñ¢ DESCUBRA A PALAVRA
‚ïë ‚ñ¢ ANAGRAMA: ${palavrasANA[anaaleatorio].embaralhada}
‚ïë ‚ñ¢ DICA: ${palavrasANA[anaaleatorio].dica}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ`
sendBtext(from, wew, `Nome: ${pushname}\nClique No Bot√£o Abaixo, Para cancelar, Boa Sorte!`, [{buttonId:`${prefix + command} 0`, buttonText: {displayText: '‚ùåùóñùóîùó°ùóñùóòùóüùóîùó•'}, type: 1}], info)
}
} else if (args.join(' ') ==='0') {
if(!fs.existsSync(`./armor/anagrama-${from}.json`)) return reply('n√£o tem como desativar o jogo do anagrama p√¥s ele n√£o foi ativado')
fs.unlinkSync(`./armor/anagrama-${from}.json`)
reply("desativado com sucesso")
}
await limitAdd(sender)
break

case 'revelaranime':
case 'revelaanime':  
if (!isGroupAdmins) return reply('somente adms')
let dataAnagrama = JSON.parse(fs.readFileSync(`./armor/quizanime-${from}.json`))
reply (`${dataAnagrama.original}`)
break

case 'revelaranimal':
case 'revelaanimal':  
if (!isGroupAdmins) return reply('somente adms')
let dataAnagramaa = JSON.parse(fs.readFileSync(`./armor/quizanim-${from}.json`))
reply (`${dataAnagramaa.original}`)
break

case 'kidbengala':
blk = await getBuffer('https://telegra.ph/file/b30519fe8e45e1b517eec.jpg')
var round = [ "kid bengala enfiou:\n90cm de rola no seu collü§©", "kid bengala enfiou:\n30cm no seu collü•µ", "Kid bengala enfiou:\n50cm de rola no seu collü¶ç", "kid bengala enfiou:\n20cm no seu raboüòà", "Voc√™ trope√ßou na rola do kidüòû", "kid bengala enfiou:\n80cm no seu collüòî.", "kid bengala tava na seca, seu cu viro um po√ßoüòî", "Seu cu s√≥ tinha pelo, voc√™ foi poupadoKKKKKKKKK", "kid bengala broxo\nVc foi salvoüòû" ]
api = round[Math.floor(Math.random() * round.length)]
destiny.sendMessage(from, {image: blk, caption: api, templateButtons: [{index: 2, quickReplyButton: {displayText: 'üòû', id: `${prefix}nossa`}}]}, {quoted: selo})
break

case 'duelo':
if (!isGroupAdmins && !SoDono) return reply(enviar.msg.adm)
if (!isGroup) return reply('O comando s√≥ pode ser usado em Grupos.')
if (args.length === 0) return reply(`Modo de usar...\n\n${prefix}duelo @tag / @tag2 / 1 (1 = 1 Minuto)`)
txt = args.join(' ')
nmr = txt.split('/')[0].replace('@' ,  '').replace(' ', '').replace(' ', '').replace(' ', '')
nmr2 = txt.split('/')[1].replace('@' ,  '').replace(' ', '').replace(' ', '').replace(' ', '')
pergunta = 'Qual dos dois duelou melhor ou deu as melhores respostas?'
tempo = txt.split('/')[2]
if(!Number(tempo)) return reply('Ops, insira os minutos\n\n1 = 1 Minuto')
const mencionar = ( foto, texto, membro, ids ) => {
( ids == null || ids == undefined || ids == false ) ? destiny.sendMessage(from, { image: foto, caption: texto.trim(), contextInfo: { "mentionedJid": membro } }) : destiny.sendMessage(from, { image: foto, caption: texto.trim(), contextInfo: { "mentionedJid": membro } })
}
const mentions = (teks, memberr, id) => {
(id == null || id == undefined || id == false) ? destiny.sendMessage(from, {text: teks.trim(), mentions: memberr}) : destiny.sendMessage(from, {text: teks.trim(), mentions: memberr})
}
try {
ppimg = await destiny.profilePictureUrl(`${nmr}@s.whatsapp.net`)
} catch(erro) {
ppimg = 'https://telegra.ph/file/2fbfa46b4ea3baed434d1.jpg'
}
try {
ppimg2 = await destiny.profilePictureUrl(`${nmr2}@s.whatsapp.net`)
} catch(erro) {
ppimg2 = 'https://telegra.ph/file/2fbfa46b4ea3baed434d1.jpg'
}
shortpc = await axios.get(`https://tinyurl.com/api-create.php?url=${ppimg}`)
shortpc2 = await axios.get(`https://tinyurl.com/api-create.php?url=${ppimg2}`)
blup = await getBuffer(`http://api-exteam.herokuapp.com/api/duelo?foto=${shortpc.data}&foto2=${shortpc2.data}`)
await mencionar(blup, `‚öîÔ∏è*Duelo de Stickers*‚öîÔ∏è\n\n@${nmr}  Vs  @${nmr2}\n\nPergunta:  ${pergunta}\n\nDigite:  um = Para votar em:  @${nmr}\nDigite:  dois = Para votar em:  @${nmr2}\n\n‚ö†Ô∏è *Aten√ß√£o*: s√≥ √© permitido votar 1 √∫nica vez, portanto preste aten√ß√£o em quem vai votar, pois n√£o √© poss√≠vel alterar o voto.\n\n‚ùó _N√£o vote por afinidade, vote pela qualidade das respostas, assim voc√™ ajuda a melhorar a qualidade dos duelos..._`, [nmr+'@s.whatsapp.net', nmr2+'@s.whatsapp.net'], true)
addVotoDuelo(from , pergunta , nmr , nmr2 , tempo , reply)
break

////////////

case 'round6':
blk = await getBuffer('https://telegra.ph/file/1c4af3e7854efe1859208.jpg')
destiny.sendMessage(from, {image: blk, caption: "Escolha qual forma voc√™ quer jogarü•∑üèΩ", templateButtons: [{index: 2, quickReplyButton: {displayText: '‚òÇÔ∏è', id: `${prefix}boneca6`}}, {index: 2, quickReplyButton: {displayText: '‚≠ê', id: `${prefix}biscoitomorte`}}, {index: 3, quickReplyButton: {displayText: 'üî¥', id: `${prefix}pisomorte`}}]}, {quoted: selo})
break

case 'boneca6':
blk = await getBuffer('https://telegra.ph/file/53e12a11f0387a98296d9.jpg')
var round = [ "Voc√™ perdeu o desafio pq se morreu.", "Voc√™ perdeu pq n√£o finalizou a tempo.", "Voc√™ perdeu pq espirro.", "Voc√™ perdeu pq queria morre, ent√£o foi b√¥nus.", "‚îå‚ùë\n‚îú‚ùí üèÜVoc√™ concluiuüèÜ\n‚îú‚ùí\n‚î£‚ù≤üí∞‚ù≥ ùöÅùô¥ùô≤ùôæùôºùôøùô¥ùôΩùöÇùô∞:\n‚îú‚ùí üîûùô∫ùô∏ùôΩùô¥-ùô≤ùô∑ùô∞ùôΩüîû\n‚îî‚ùí\n\nhttps://drive.google.com/file/d/1AaVQ5W6h6ajgmRPZXJkMKG2a72dCeQLJ/view?usp=drivesdk", "Voc√™ morreu pq trope√ßou.", "Voc√™ morreu pq trope√ßou em uma rola.", "vc perdeu pq n√£o completou.", "Voc√™ morreu pq n√£o conseguiu completa o desafio a tempo.", "‚îå‚ùë\n‚îú‚ùí üèÜVoc√™ ganhoüèÜ\n‚îú‚ùí\n‚î£‚ù≤üí∞‚ù≥ ùöÅùô¥ùô≤ùôæùôºùôøùô¥ùôΩùöÇùô∞:\n‚îú‚ùí üîûùô∫ùô∏ùôΩùô¥-ùô≤ùô∑ùô∞ùôΩüîû\n‚îî‚ùí\n\nhttps://drive.google.com/file/d/1AaVQ5W6h6ajgmRPZXJkMKG2a72dCeQLJ/view?usp=drivesdk" ]
api = round[Math.floor(Math.random() * round.length)]
destiny.sendMessage(from, {image: blk, caption: api, templateButtons: [{index: 2, quickReplyButton: {displayText: 'Jogar Novamente', id: `${prefix}round6`}}]}, {quoted: selo})
break

case 'pisomorte':
blk = await getBuffer('https://telegra.ph/file/9e450388d2ab2334e8e8c.jpg')
var round = [ "Voc√™ perdeu o desafio pq n√£o chego no final a tempo.", "Voc√™ perdeu pq n√£o finalizou a tempo.", "Voc√™ piso no local errado e caiu.", "derrubaram vc no meio do desafio.", "Parab√©ns vc ganho, finalizou o desafio a tempo.", "Voc√™ teve um ataque de p√¢nico e caiu da plataforma.", "Voc√™ morreu pq tentou corre do desafio.", "vc perdeu pq n√£o completou.", "Voc√™ morreu pq piso no lugar errado seu animal.", "‚îå‚ùë\n‚îú‚ùí üèÜVoc√™ concluiuüèÜ\n‚îú‚ùí\n‚î£‚ù≤üí∞‚ù≥ ùöÅùô¥ùô≤ùôæùôºùôøùô¥ùôΩùöÇùô∞:\n‚îú‚ùí üîûùöÉùô∞ùöÉùô∏-ùöâùô∞ùöÄùöÑùô∏üîû\n‚îî‚ùí\n\nhttps://drive.google.com/file/d/19yzzCWYGLsUNcF3F2RSwPfmmvyQE3CiO/view?usp=drivesdk" ]
api = round[Math.floor(Math.random() * round.length)]
destiny.sendMessage(from, {image: blk, caption: api, templateButtons: [{index: 2, quickReplyButton: {displayText: 'Jogar Novamente', id: `${prefix}round6`}}]}, {quoted: selo})
break

case 'biscoitomorte':
blk = await getBuffer('https://telegra.ph/file/83746a470baabbe9331da.jpg')
var round = [ "Voc√™ perdeu o desafio pq n√£o entrego o biscoito a tempo.", "Voc√™ perdeu pq n√£o finalizou a tempo.", "Voc√™ derrubo o biscoito e morreu.", "derrubaram vc no meio do desafio.", "‚îå‚ùë\n‚îú‚ùí üèÜVoc√™ finalizouüèÜ\n‚îú‚ùí\n‚î£‚ù≤üí∞‚ù≥ ùöÅùô¥ùô≤ùôæùôºùôøùô¥ùôΩùöÇùô∞:\n‚îú‚ùí üîûùöÖùô∏ùô≤ùöÉùôæùöÅùô∏ùô∞üîû\n‚îî‚ùí\n\nhttps://drive.google.com/file/d/1AcNukvbu9Yz5EfAomIeK95kqRDTYjP6z/view?usp=drivesdk", "Voc√™ teve um ataque de p√¢nico e quebrou o biscoito.", "Voc√™ morreu pq queria se mata.", "vc perdeu pq n√£o completou.", "Voc√™ morreu pq escorregou e n√£o finalizou a tempo.", "‚îå‚ùë\n‚îú‚ùí üèÜVoc√™ finalizouüèÜ\n‚îú‚ùí\n‚î£‚ù≤üí∞‚ù≥ ùöÅùô¥ùô≤ùôæùôºùôøùô¥ùôΩùöÇùô∞:\n‚îú‚ùí üîûùöÖùô∏ùô≤ùöÉùôæùöÅùô∏ùô∞üîû\n‚îî‚ùí\n\nhttps://drive.google.com/file/d/1AcNukvbu9Yz5EfAomIeK95kqRDTYjP6z/view?usp=drivesdk" ]
api = round[Math.floor(Math.random() * round.length)]
destiny.sendMessage(from, {image: blk, caption: api, templateButtons: [{index: 2, quickReplyButton: {displayText: 'Jogar Novamente', id: `${prefix}round6`}}]}, {quoted: selo})
break

case 'batalha-z':
if (MoneyId === undefined) return reply(`Use primeiro o comando ${prefix}carteira`)
if (!args.join(' ').includes("@")) return reply(`Use assim exemplo: ${prefix}batalha-z @nero`)
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
teks = `${mentioned[0].split('@')[0]}@s.whatsapp.net`
consu = getMoneyId(teks)
if (consu === undefined) return reply('Jogador n√£o encontrado')
wew = await getBuffer('https://telegra.ph/file/2dc90bc08895a5a0e967e.mp4')
bla = await getBuffer('https://telegra.ph/file/8deef47ad4cd883407737.mp4')
bat = Math.floor(Math.random() * 100) + 1
boa = `O ${pushname} vai lutar contra o @${mentioned[0].split('@')[0]} ü•∑üèΩ
Sua chance de ganhar √© de ${bat}%
Boa sorte üçÄ`
destiny.sendMessage(from, {video: wew, caption: boa, templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info}).then(() =>
reply('*Aguarde 10 segundos, para saber o resultado ‚è≥*')
)
await sleep(10000)
if (bat > 50){
userg = getMoney(teks)
ncash = Math.floor(Math.random() * userg)
money(teks, -ncash)
money(sender, ncash)
userk = getMoney(sender)
rafa = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤üéØ‚ù≥ ${pushname} ativo o estinto superior √© ganho o duelo.
‚î£‚ù≤üí∞‚ù≥ Recompensa: ${ncash}
‚î£‚ù≤üíµ‚ù≥ Saldo: ${userk}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero:  ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {video: bla, caption: rafa, templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
}
if (bat < 50 || bat === 50){
userg = getMoney(sender)
ncash = Math.floor(Math.random() * userg)
money(teks, ncash)
money(sender, -ncash)
userk = getMoney(sender)
rafa = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤üéØ‚ù≥ ${pushname} terminou o duelo na arena, ele recebeu um ataque cr√≠tico e perdeu.
‚î£‚ù≤üí∞‚ù≥ Preju√≠zo: ${ncash}
‚î£‚ù≤üíµ‚ù≥ Saldo: ${userk}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero:  ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {video: bla, caption: rafa, templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
}
break

case 'batalhapoke':
if (MoneyId === undefined) return reply(`Use primeiro o comando ${prefix}carteira`)
if (!args.join(' ').includes("@")) return reply(`Use assim exemplo: ${prefix}batalhapoke @nero`)
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
teks = `${mentioned[0].split('@')[0]}@s.whatsapp.net`
consu = getMoneyId(teks)
if (consu === undefined) return reply('Jogador n√£o encontrado')
wew = await getBuffer('https://telegra.ph/file/2c031502ed4c4e4ac51f9.mp4')
bla = await getBuffer('https://telegra.ph/file/807349eedeb11b30bd1fa.mp4')
bat = Math.floor(Math.random() * 100) + 1
boa = `O ${pushname} vai lutar contra o @${mentioned[0].split('@')[0]} ü•∑üèΩ
Sua chance de ganhar √© de ${bat}%
evolua seu pokemon ao maximo üçÄ`
destiny.sendMessage(from, {video: wew, caption: boa, templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info}).then(() =>
reply('*Aguarde 10 segundos, para saber o resultado ‚è≥*')
)
await sleep(10000)
if (bat > 50){
userg = getMoney(teks)
ncash = Math.floor(Math.random() * userg)
money(teks, -ncash)
money(sender, ncash)
userk = getMoney(sender)
rafa = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤üéØ‚ù≥ ${pushname} acerto um ataque cr√≠tico e ganho a partida na arena.
‚î£‚ù≤üí∞‚ù≥ Recompensa: ${ncash}
‚î£‚ù≤üíµ‚ù≥ Saldo: ${userk}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero:  ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {video: bla, caption: rafa, templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
}
if (bat < 50 || bat === 50){
userg = getMoney(sender)
ncash = Math.floor(Math.random() * userg)
money(teks, ncash)
money(sender, -ncash)
userk = getMoney(sender)
rafa = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤üéØ‚ù≥ ${pushname} terminou o duelo na arena, ele recebeu um ataque cr√≠tico e perdeu.
‚î£‚ù≤üí∞‚ù≥ Preju√≠zo: ${ncash}
‚î£‚ù≤üíµ‚ù≥ Saldo: ${userk}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero:  ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {video: bla, caption: rafa, templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
}
break

case 'batalhakime':
if (MoneyId === undefined) return reply(`Use primeiro o comando ${prefix}carteira`)
if (!args.join(' ').includes("@")) return reply(`Use assim exemplo: ${prefix}batalhakime @nero`)
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
teks = `${mentioned[0].split('@')[0]}@s.whatsapp.net`
consu = getMoneyId(teks)
if (consu === undefined) return reply('Jogador n√£o encontrado')
wew = await getBuffer('https://telegra.ph/file/a7dadc54def15cd3420e2.mp4')
bla = await getBuffer('https://telegra.ph/file/5fee4d91dabf266adb705.mp4')
bat = Math.floor(Math.random() * 100) + 1
boa = `O ${pushname} vai lutar contra o @${mentioned[0].split('@')[0]} ü•∑üèΩ
Sua chance de ganhar √© de ${bat}%
concentre sua respira√ß√£o üçÄ`
destiny.sendMessage(from, {video: wew, caption: boa, templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info}).then(() =>
reply('*Aguarde 10 segundos, para saber o resultado ‚è≥*')
)
await sleep(10000)
if (bat > 50){
userg = getMoney(teks)
ncash = Math.floor(Math.random() * userg)
money(teks, -ncash)
money(sender, ncash)
userk = getMoney(sender)
rafa = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤üéØ‚ù≥ ${pushname} decapito seu oponente, ganho o duelo.
‚î£‚ù≤üí∞‚ù≥ Recompensa: ${ncash}
‚î£‚ù≤üíµ‚ù≥ Saldo: ${userk}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero:  ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {video: bla, caption: rafa, templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
}
if (bat < 50 || bat === 50){
userg = getMoney(sender)
ncash = Math.floor(Math.random() * userg)
money(teks, ncash)
money(sender, -ncash)
userk = getMoney(sender)
rafa = `‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤üéØ‚ù≥ ${pushname} terminou o duelo, ele recebeu um ataque cr√≠tico e perdeu.
‚î£‚ù≤üí∞‚ù≥ Preju√≠zo: ${ncash}
‚î£‚ù≤üíµ‚ù≥ Saldo: ${userk}
‚î£‚ù≤üè¶‚ù≥ Banco: ${NomeDoBot}
‚î£‚ù≤‚òéÔ∏è‚ù≥ Numero:  ${sender.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {video: bla, caption: rafa, templateButtons: [{index: 2, quickReplyButton: {displayText: `Ok ${NomeDoBot}`, id: 'nada'}}]}, {quoted: info})
}
break

// ====== [ FIM DOS MENU ] ========\\

case 'criapet': {
if(userId < 2000) return reply("Voc√™ precisa de 2000 de money, sugiro que jogue alguns jogos que d√£o dinheiro, tenta o roleta mais olhe as regrakk")
var pets = args.join(' ')
var s = PosiMoney(sender)
var ki = parseInt(userId) - 2000
dinheiro[s].dinheiro = `${ki}`
fs.writeFileSync('./datab/jsons/dinheiro/dinheiro.json', JSON.stringify(dinheiro, null, 2))
if(!pets) return reply("Cade o nome do pet, seu beta!")
if(DonoPet === sender) return reply(`Voc√™ ja tem um pet, digite ${prefix}perfilpet`)
sex = ["Macho", "F√™mea"]
hot = ["Fogo", "Gelo", "√Ågua"]
habi = ["Nenhuma", "Mega Soco", "Razepet", "Nenhuma"]
var estilo = hot[Math.floor(Math.random() * hot.length)]
var SexoPets = sex[Math.floor(Math.random() * sex.length)]
var Hability = habi[Math.floor(Math.random() * habi.length)]
if(SexoPets === 'F√™mea'){
var imgsex = 'https://telegra.ph/file/702f69b08e841e7db5ed2.jpg'
} else {
var imgsex = 'https://telegra.ph/file/9e31f29cc8a3ffb883245.jpg' }
algup = `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ ‚Ä¢ ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n[üö©] Pronto, agora voc√™ tem um pet cuja o nome √©: ${pets}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ ‚Ä¢ ‚îÄ‚îÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`
var infojs = {id: sender, pet: pets, vida: '200', foto: imgsex, prote√ß√£o: 'Nenhuma', energia: '100', sexo: SexoPets, habilidade: Hability, tipo: estilo, statu: 'Vivo'}
bunda.push(infojs)
fs.writeFileSync('./datab/jsons/Pets/petsch.json', JSON.stringify(bunda, null, 2) + '\n')
reply("Aguarde... Estou Criando Seu Pet")
await sleep(3000)
let buttons = [
{buttonId: `${prefix}perfilpet`, buttonText: {displayText: '‚≠î MEU PET ‚≠î'}, type: 1},
{buttonId: `${prefix}infopet`, buttonText: {displayText: '‚≠î INFO PET ‚≠î'}, type: 1},
{buttonId: `${prefix}lojapet`, buttonText: {displayText: '‚≠î LOJA PET ‚≠î'}, type: 1}
]
let buttonMessage = {
image: { url: `https://telegra.ph/file/b16e1519240ab681fc9c1.jpg` },
caption: `[‚ùó] Agora voc√™ tem um pet\nCuja o nome √© ${pets}`,
footer: ``,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: `Pet Criado />`,
body: `¬© ${NomeDoBot}`,
showAdAttribution: true,
thumbnail: null,
mediaType:2,
sourceUrl:'https://www.instagram.com/maysurf__/'
}}
}
destiny.sendMessage(from, buttonMessage, { quoted: selo })
}
break

case 'battlepet': {
if(!isGroup) return reply(enviar.msg.grupo)
if(getPosiPet(sender) == undefined) return reply("Crie um pet Primeiro")
if(PetEnergy < 80) return reply(`Seu pet esta sem energia, d√™ ra√ß√£o a ele, use \"${prefix}lojapet\" e compre ra√ß√£o`)
if (!isMentioned) return reply("Marque o dono do pet")
if(PetUser(mentioned[0]) === undefined) return reply("Esse Beta N√£o Tem Pet, ou mataram ele em batalha")
var s = getPosiPet(sender)
var m = getPosiPet(mentioned[0])
buma1 = ["Quebrou a Prote√ß√£o", "Tentou penetrar na prote√ß√£o, mais n√£o teve nem chance"]
var buma = buma1[Math.floor(Math.random() * buma1.length)]
if(bunda[m].prote√ß√£o === 'Nenhuma'){
/// SENDER ‚Üì
if(bunda[s].habilidade == 'Nenhuma'){
var goHability = 'E se rebaixa com choro#0'
} else if (bunda[s].habilidade == 'Razepet'){
var goHability = 'Razepet#90'
} else if (bunda[s].habilidade == 'Mega Soco'){
var goHability  = 'Mega Soco#80'}
/// MENCIONADO ‚Üì
if(bunda[m].habilidade == 'Nenhuma'){
var goHabilityM = 'O choro da perda#0'
} else if (bunda[m].habilidade == 'Razepet'){
var goHabilityM = 'Razepet#90'
} else if (bunda[m].habilidade == 'Mega Soco'){
var goHabilityM  = 'Mega Soco#80'}
aa = petAtack(bunda[s].tipo)
bb = petAtack(bunda[m].tipo)
cc = goHability
dd = goHabilityM
ee = aa.split("#")[1]
ff = goHability.split("#")[1]
gg = bunda[m].vida
hh = parseInt(ee) + parseInt(ff)
ii = parseInt(gg) - parseInt(hh)
if(ii < 0){
var stts = `Crie outro pet amigo, o seu ${bunda[m].pet} acabou de ser morto pelo ${bunda[s].pet}`
} else { 
var stts = `Com ${ii} de vida, o ${bunda[m].pet} est√° em estado cr√≠tico, compre kit m√©dico na loja imediatamente, use ${prefix}lojapet. Mais um ataque desses e seu pet vai de base` }
jj = `[üö©] LUTA:\n${bunda[s].pet} Ataca o(a) ${bunda[m].pet} com ${aa.split("#")[0]} e ${cc.split("#")[0]}, tirando cerca de ${hh} de vida do oponente. ${bunda[s].pet} gastou 80 de energia, agora ele vai descansar ou alimente ele.\n\n[üî•] STATUS:\n${stts}`
kk = `‚ï≠‚ùè ${bunda[s].pet}: ${bunda[s].vida}\n‚ï∞‚ùè ${bunda[m].pet}: ${ii}`
bunda[m].vida = `${ii}`
fs.writeFileSync('./datab/jsons/Pets/petsch.json', JSON.stringify(bunda, null, 2))
let buttons = [
{buttonId: `${prefix}infopet`, buttonText: {displayText: '‚≠î INFO PET ‚≠î'}, type: 1},
{buttonId: `${prefix}perfilpet`, buttonText: {displayText: '‚≠î PERFIL PET ‚≠î'}, type: 1},
{buttonId: `${prefix}lojapet`, buttonText: {displayText: '‚≠î LOJA PET ‚≠î'}, type: 1}
]
let buttonMessage = {
image: { url: `https://telegra.ph/file/1c4848321384f197b0b11.jpg` },
caption: jj,
footer: kk,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply:{
title: `BATALHA PET`,
body: `${NomeDoBot} ¬©`,
showAdAttribution: true,
mediaType:2,
thumbnail: await getBuffer(bunda[s].foto),
sourceUrl:`https://www.instagram.com/maysurf__/`
}}}
destiny.sendMessage(from, buttonMessage, { quoted: selo })
} else {
if(buma === 'Quebrou a Prote√ß√£o'){
var pmty = parseInt(bunda[s].energia) - 30
bunda[s].energia = `${pmty}`
bunda[m].prote√ß√£o = 'Nenhuma'
fs.writeFileSync('./datab/jsons/Pets/petsch.json', JSON.stringify(bunda, null, 2))
reply(bunda[s].pet+` ${buma}`)
} else {
var pmto = parseInt(bunda[s].energia) - 30
bunda[s].energia = `${pmto}`
fs.writeFileSync('./datab/jsons/Pets/petsch.json', JSON.stringify(bunda, null, 2))
reply(bunda[s].pet+` ${buma}`)}}
if (bunda[m].vida > 0){
var ll = parseInt(bunda[s].energia) - 80
bunda[s].energia = `${ll}`
fs.writeFileSync('./datab/jsons/Pets/petsch.json', JSON.stringify(bunda, null, 2))
} else {
var ll = parseInt(bunda[s].energia) - 80
var menc = [`${mentioned[0].split('@')[0]}@s.whatsapp.net`]
bunda.splice(m, 1)
bunda[s].energia = `${ll}`
fs.writeFileSync('./datab/jsons/Pets/petsch.json', JSON.stringify(bunda, null, 2) + '\n')
}
}
break

case 'perfilpet':
if (isMentioned){
var i = getPosiPet(mentioned[0])
} else {
var i = getPosiPet(sender)
}
if (i === undefined) return reply("Pet N√£o Encontrado")
imgPet = {url: bunda[i].foto}
kapa = `‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤üèÆ‚ù≥ Nome: ${bunda[i].pet}
‚î£‚ù≤üèÆ‚ù≥ Vida: ${bunda[i].vida}
‚î£‚ù≤üèÆ‚ù≥ Prote√ß√£o: ${bunda[i].prote√ß√£o}
‚î£‚ù≤üèÆ‚ù≥ Energia: ${bunda[i].energia}
‚î£‚ù≤üèÆ‚ù≥ Sexo: ${bunda[i].sexo}
‚î£‚ù≤üèÆ‚ù≥ Habilidade: ${bunda[i].habilidade}
‚î£‚ù≤üèÆ‚ù≥ Estilo: ${bunda[i].tipo}
‚î£‚ù≤üèÆ‚ù≥ Status: ${bunda[i].statu}
‚î£‚ù≤üèÆ‚ù≥ Dono: @${bunda[i].id.split('@')[0]}
‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {image: imgPet, caption:kapa, mentions: [bunda[i].id]}, {quoted: selo})
break

case 'lojapet':
if(getPosiPet(sender) == undefined) return reply("Crie um pet Primeiro")
if (MoneyId === undefined){
rafa = {id: sender, dinheiro: 0}
dinheiro.push(rafa)
fs.writeFileSync('./datab/jsons/import/dinheiro.json', JSON.stringify(dinheiro, null, 2))
}
sections = [{
title: `Louja Pet ~`,
rows: [
{title: "[üí†] Prote√ß√£o", rowId: `${prefix}protezipet`, description: "Custo R$ 8.000"},
{title: "[‚õëÔ∏è] Kit Hp", rowId: `${prefix}kitpet`, description: "Custo R$ 5.000"},
{title: "[üçü] Ra√ß√£o", rowId: `${prefix}alimpet`, description: "Custo R$ 500"},
]}]
listMessage2 = {
  text: `[üéè~ Tudo que for comprado ser√° adicionado no seu pet automaticamente`,
  footer: `${NomeDoBot} ¬©`,
  title: "Â∞± Loja Pet Â∞±",
  buttonText: `Aperte Aqui`,
  sections}
destiny.sendMessage(from, listMessage2, {quoted: selo})
break

case 'kitpet':
if(getPosiPet(sender) == undefined) return reply("Crie um pet Primeiro")
if (VidaDoPet === '200'){
if (userId < 5000){
var i = getPosiPet(sender)
var s = PosiMoney(sender)
var ki = parseInt(userId) - 5000
dinheiro[s].dinheiro = `${ki}`
fs.writeFileSync('./datab/jsons/dinheiro/dinheiro.json', JSON.stringify(dinheiro, null, 2))
bunda[i].vida = '200'
fs.writeFileSync('./datab/jsons/Pets/petsch.json', JSON.stringify(bunda, null, 2))
reply("[‚ùó] Vida do pet recupereda")
} else {
reply("Dinheiro insuficiente")}
} else {
reply("Ja ta cheia")}
break

case 'protezipet':
if(getPosiPet(sender) == undefined) return reply("Crie um pet Primeiro")
if (userId > 8000){
var i = getPosiPet(sender)
var s = PosiMoney(sender)
var ki = parseInt(userId) - 8000
dinheiro[s].dinheiro = `${ki}`
fs.writeFileSync('./datab/jsons/dinheiro/dinheiro.json', JSON.stringify(dinheiro, null, 2))
bunda[i].prote√ß√£o = "Ativada"
fs.writeFileSync('./datab/jsons/Pets/petsch.json', JSON.stringify(bunda, null, 2))
await sleep(2000)
reply("Prote√ß√£o Equipada no seu Pet")
} else {
reply('Saldo insuficiente')
}
break

case 'alimpet':
if(getPosiPet(sender) == undefined) return reply("Crie um pet Primeiro")
if(PetEnergy === '100') return reply("Energia do Pet Recuperada")
if(userId > 2000){
i = getPosiPet(sender)
s = PosiMoney(sender)
ki = parseInt(userId) - 500
var op3 = parseInt(bunda[i].energia) + 10
dinheiro[s].dinheiro = `${ki}`
fs.writeFileSync('./datab/jsons/dinheiro/dinheiro.json', JSON.stringify(dinheiro, null, 2))
if (op3 > 100 ){
var op3 = 100 }
bunda[i].energia = `${op3}`
fs.writeFileSync('./datab/jsons/Pets/petsch.json', JSON.stringify(bunda, null, 2))
reply(`‚îÄ‚îÄ‚îÄ‚îÄ${bunda[i].pet};\n‚ñº„Éª·¥•„Éª‚ñº \nThanks üí´\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n[‚ùó] Upei +10 de energia\n[‚ö°] Energia: ${bunda[i].energia}\n[üí∞] Money: ${dinheiro[s].dinheiro}`)
} else {
reply('Saldo insuficiente')}
break

case 'ilimitpet':
if(!SoDono) return reply("Voc√™ n√£o √© digno")
if(getPosiPet(sender) == undefined) return reply("Crie um pet Primeiro")
try {
var s = getPosiPet(sender)
bunda[s].vida = '9999999'
bunda[s].energia = '9999999'
fs.writeFileSync('./datab/jsons/Pets/petsch.json', JSON.stringify(bunda, null, 2))
kuop = await getBuffer('https://telegra.ph/file/774f70bb98e9f54af4d0a.mp4')
kk = `Eita ${pushname}
Vida E Energia\nRegeneradas Pro Meu Mestre
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢
+++${bunda[s].vida} de vida 
+++${bunda[s].energia} de energia
++++Derrote Qualquer Um
‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢`
destiny.sendMessage(from, {video: kuop, caption: kk, mentions: sender}, {quoted: selo})
} catch {
reply("Erro")}
break

case 'petname':
if(getPosiPet(sender) == undefined) return reply("Crie um pet Primeiro")
if(!q) return reply("Digite o nome novo")
var i = getPosiPet(sender)
bunda[i].pet = q
fs.writeFileSync('./datab/jsons/Pets/petsch.json', JSON.stringify(bunda, null, 2))
reply("Pronto beta!")
break

case 'delpet': 
if(getPosiPet(sender) == undefined) return reply("Crie um pet Primeiro")
var miojo = getPosiPet(sender)
bunda.splice(miojo, 1)
fs.writeFileSync('./datab/jsons/Pets/petsch.json', JSON.stringify(bunda, null, 2) + '\n')
reply("Pronto, pet deletado...")
break

case 'infopet':
op = `Opa, vamo aprofundar sobre esse comando, bom.. acho que voc√™ percebeu que ao criar um pet voc√™ recebeu dois bot√µes, um pra ver o pet e o outro para se aprofundar sobre esse tal comando. Vamo direto ao ponto, o pet que voc√™ criou, estar guardado em um arquivo json que n√£o pode ser apagado ou substituido, l√≥gico que quando ele morrer e serar apagado, porque n√£o faz sentido deixar seu pet la morto kk. Voc√™ pode ta acessando esse comando que tem acesso ao cemit√©rio de pet em breve. \nGuia Do Cmd ~ \n\n${prefix}criapet (nome do seu pet)\n_Esse comando serve para cria seu animalzinho_\n\n${prefix}perfilpet\n_Esse comando serve para voc√™ ver seu pet, para ver o do seu amigo coloque o @tag dele dps do comando_\n\n${prefix}lojapet\n_Loja do pet_\n${prefix}battlepet (@tag)\n_Abrir uma batalha com o pet do mencionado_\n${prefix}delpet\n_Esse apaga seu pet para criar outro_\n\n${prefix}petname (nome novo)\n_Esse comando muda o nome do seu pet_\n[‚ùó] Agora Vou deixar os Pre√ßo das vantagens quando for batalhar

‚ï≠‚îÄ‚ùè
‚îÇ‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÇ‚îÉÂ∞± Tabela De Pre√ßos Â∞±
‚îÇ‚îÉ
‚îÇ‚îÉ‚àæProte√ß√£o
‚îÇ‚îÉ2.000
‚îÇ‚îÉ
‚îÇ‚îÉ‚àæArmadura 
‚îÇ‚îÉ1.500
‚îÇ‚îÉ
‚îÇ‚îÉ‚àæRa√ß√£o
‚îÇ‚îÉ50
‚îÇ‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚ï∞‚îÄ‚ùè 

*obs: A armadura e a Prote√ß√£o s√£o vantagens ao batalhar, aconselho usar um desses antes de batalhar*`
sendBtext(from, op, 'Creditos do Cmd: Tiago( Sr luffy )\nAjuda de: Rafael Mods kk', [{buttonId: `nd`, buttonText: {displayText: `Ok ${NomeDoBot}`}, type: 1}])
break

////////// FORCA /////////////

case 'forca':
if(fs.existsSync('./armor/jogo/forca-'+from+'.json'))return reply('ü§ñ J√° tem um jogo ativo no momento')
listaPalavras = ['Alemanha', 'Blumenal', 'Catarina', 'Drag√£o', 'Eti√≥pia', 'Flamingo', 'Guilhotina', 'Hermes', 'Iguana', 'Jabuticaba', 'Kratos', 'Laranja', 'Mulan', 'Ni√≥bio', 'Opala', 'Pin√ßa', 'Qu√™nia', 'Robson', 'Sapr√≥fita', 'Tucano','Ucr√¢nia', 'Viviane', 'Wanessa', 'X√≠cara', 'Yahoo', 'Zimbabwe']
listaDicas = ['Pa√≠s na Europa', 'Cidade Brasileira', 'Nome de pessoa', 'Criatura M√≠tica', 'Pa√≠s na √Åfrica', 'Animal', 'Instrumento de puni√ß√£o', 'Nome de pessoa', 'Animal', 'Fruta', 'Personagem de jogo', 'Fruta', 'Personagem da Disney', 'Elemento qu√≠mico', 'Modelo de carro', 'Objeto utilizado como uma extens√£o dos dedos', 'Pa√≠s na √Åfrica', 'Nome de pessoa', 'Tipo de fungo', 'Animal', 'Pa√≠s na Europa', 'Nome de pessoa', 'Nome de pessoa', 'Utens√≠lio dom√©stico', 'Navegador web/Empresa', 'Pa√≠s na √Åfrica']
hsy = Math.floor(Math.random() * listaPalavras.length)
ga = hsy
json = {
 letrasJogadas: [],
 listaLetras: listaPalavras[ga].split(''),
 palavraDesvendada: listaPalavras[ga],
 tentativas : 0,
 acertou : false,
 erros:0,
 dica : listaDicas[ga]
 }
 tdh = `ü§ñ *Sorteando...* ‚è≥\n
‚úâ *Jogo: Forca*
üìù *Dica:* ${listaDicas[ga]}
üí¨ *Total ${json.palavraDesvendada.split('').length} Letras*\n
‚ï≠‚îÅ„Äî FORCA „Äï‚îÅ‚¨£
‚ïë ‚ñ¢
‚ïë ‚ñ¢
‚ïë ‚ñ¢
‚ïë ‚ñ¢
‚ïë ‚ñ¢
‚ïë ‚ñ¢
‚ïë ‚ñ¢ ${'_ '.repeat(json.palavraDesvendada.split('').length)}\n
*Chances restantes: ${6 - json.erros}*\n
*${prefix}ff <letra>* `
reply(tdh)
fs.writeFileSync('./armor/jogo/forca-'+from+'.json', `${JSON.stringify(json)}`)
break

case "resetarforca":
if(!fs.existsSync('./armor/jogo/forca-'+from+'.json'))return reply('No Momento N√£o Tem Nenhum Jogo Da Forca ae Andamento Neste Grupo')
fs.unlinkSync('./armor/jogo/forca-'+from+'.json')
reply("Jogo Forca Resetado")
break

case 'ff':
if(!fs.existsSync('./armor/jogo/forca-'+from+'.json'))return reply('ü§ñ n√£o tem um jogo ativo no momento digite '+prefix+'forca e ira iniciar')
jui = JSON.parse(fs.readFileSync('./armor/jogo/forca-'+from+'.json'))
jiu = JSON.parse(fs.readFileSync('./armor/jogo/forca-'+from+'.json'))
if(args.length < 1)return reply('ü§ñ Por favor informe uma letra')
b = args[0].normalize('NFD').replace(/[\u0300-\u036f]/g, "").toLowerCase()
if(b.split('').length > 1)return reply('ü§ñ Por favor informe apenas uma letra')
if(jui.letrasJogadas.includes(b) || jui.letrasJogadas.includes(b.toLowerCase()) || jui.letrasJogadas.includes(b.toUpperCase()) )return reply('ü§ñ desculpe mais est√° letra j√° foi jogada')
if(jui.palavraDesvendada.normalize('NFD').replace(/[\u0300-\u036f]/g, "").split('').includes(b.normalize('NFD').replace(/[\u0300-\u036f]/g, "")) || jui.palavraDesvendada.normalize('NFD').replace(/[\u0300-\u036f]/g, "").split('').includes(b.toLowerCase()) || jui.palavraDesvendada.normalize('NFD').replace(/[\u0300-\u036f]/g, "").split('').includes(b.toUpperCase())) {
wupe = jui.palavraDesvendada.normalize('NFD').replace(/[\u0300-\u036f]/g, "").split('')
wupie = jui.letrasJogadas
jipe = ''
for(f = 0; f < wupe.length;f++){
jipe += `${wupie.includes(wupe[f]) ? wupe[f]+' ' :'_ '}`
}
jui.letrasJogadas.push(b.normalize('NFD').replace(/[\u0300-\u036f]/g, ""))
jui.tentativas += 1
fs.writeFileSync('./armor/jogo/forca-'+from+'.json', JSON.stringify(jui))
xijui = JSON.parse(fs.readFileSync('./armor/jogo/forca-'+from+'.json'))
liop = ''
for(f = 0; f < xijui.letrasJogadas.length;f++){
liop += `${xijui.letrasJogadas[f]}, `
}
wup = xijui.palavraDesvendada.normalize('NFD').replace(/[\u0300-\u036f]/g, "").split('')
wupi = xijui.letrasJogadas
jip = ''
for(f = 0; f < wup.length;f++){
jip += `${wupi.includes(wup[f].normalize('NFD').replace(/[\u0300-\u036f]/g, "").toLowerCase() || wup[f].normalize('NFD').replace(/[\u0300-\u036f]/g, "").toUpperCase() ) ? wup[f]+' ' :'_ '}`
}
if(jip.toLowerCase().split(' ').join('') === xijui.palavraDesvendada.normalize('NFD').replace(/[\u0300-\u036f]/g, "").toLowerCase()){
reply(`Parabens vc venceu\nPalavra: "${xijui.palavraDesvendada}"`)
fs.unlinkSync(`./armor/jogo/forca-${from}.json`)
}
txs = `ü§ñ *Forca* ‚è≥

üìù *Dica:* ${xijui.dica}
üí¨ *${xijui.palavraDesvendada.split('').length} Letras*
‚úè *Letras jogadas:* ${liop}

‚ï≠‚îÅ„Äî PROGRESSO „Äï‚îÅ‚¨£
‚ïë ‚ñ¢   ${xijui.erros > 0 ? 'üò¢' :''}
‚ïë ‚ñ¢   ${xijui.erros > 1 ? 'üëâ' :''} ${xijui.erros > 2 ? 'üëà' :''}
‚ïë ‚ñ¢   ${xijui.erros > 3 ? 'üëñ' :''}
‚ïë ‚ñ¢   ${xijui.erros > 4 ? 'üëû' :''} ${xijui.erros > 5 ? 'üëû' :''}
‚ïë ‚ñ¢
‚ïë ‚ñ¢
‚ïë ‚ñ¢ ${jip}

*Chances restantes:* ${6 - xijui.erros}

*${prefix}ff* <letra>
`
reply(txs)
}else{
jui.letrasJogadas.push(b)
jui.tentativas += 1
jui.erros += 1
fs.writeFileSync('./armor/jogo/forca-'+from+'.json', JSON.stringify(jui))
xijui = JSON.parse(fs.readFileSync('./armor/jogo/forca-'+from+'.json'))
wup = xijui.palavraDesvendada.normalize('NFD').replace(/[\u0300-\u036f]/g, "").split('')
wupi = xijui.letrasJogadas

if(xijui.erros == 6){ 
fs.unlinkSync(`./armor/jogo/forca-${from}.json`)
return reply(`Jogo acabou e vc errou\nPalavra: "${xijui.palavraDesvendada}" `)
}
jip = ''
for(f = 0; f < wup.length;f++){
jip += `${wupi.includes(wup[f].normalize('NFD').replace(/[\u0300-\u036f]/g, "").toLowerCase() || wup[f].normalize('NFD').replace(/[\u0300-\u036f]/g, "").toUpperCase() ) ? wup[f]+' ' :'_ '}`
}
lio = ''
for(f = 0; f < xijui.letrasJogadas.length;f++){
lio += `${xijui.letrasJogadas[f]}, `
}
txs = ` ‚úâ *Jogo: Forca*
üìù *Dica:* ${xijui.dica}
üí¨ *Total ${xijui.palavraDesvendada.split('').length} Letras*
‚úè *Letras jogadas:* ${lio}
 
‚ï≠‚îÅ„Äî PROGRESSO „Äï‚îÅ‚¨£
‚ïë ‚ñ¢       ${xijui.erros > 0 ? 'üò¢' :''}
‚ïë ‚ñ¢     ${xijui.erros > 1 ? 'üëâ' :''} ${xijui.erros > 2 ? 'üëà' :''}
‚ïë ‚ñ¢        ${xijui.erros > 3 ? 'üëñ' :''}
‚ïë ‚ñ¢       ${xijui.erros > 4 ? 'üëû' :''} ${xijui.erros > 5 ? 'üëû' :''}
‚ïë ‚ñ¢
‚ïë ‚ñ¢
‚ïë ‚ñ¢ ${jip}

*Chances:* ${6 - xijui.erros}

*${prefix}ff* <letra>
`
reply(txs)
}
break

case "resetarforca":
if(!isGroupAdmins) return reply('S√≥ ADM pode utilizar este comando.')  
if(fs.existsSync('./armor/jogos/forca-'+from+'.json'))return reply('N√£o tem jogo ativo no momento')
fs.unlinkSync(`./armor/jogo/forca-${from}.json`)
reply("Jogo resetado")
break

///////////////

case 'respon':
				if (!q) return reply(`Seu texto, Exemplo : ${prefix + command} ele casou `)
					const apa = [`Sim`, `N√£o`, `Poderia ser`, `Isso mesmo`]
					const kah = apa[Math.floor(Math.random() * apa.length)]
destiny.sendMessage(from, { text: `Quest√£o : √â ${q}\nResponda : ${kah}` }, { quoted: selo })
					break

case 'kiah2':
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
const tutu = `sua foto de perfil`
destiny.sendMessage(from, {image: {url: ppimg}, caption: tutu}, {quoted: selo})
break

case 'ringtone': {
		if (!q) return reply(`Exemplo : ${prefix + command} black rover`)
        let { ringtone } = require('./lib/scraper')
		let anu = await ringtone(!q)
		let result = anu[Math.floor(Math.random() * anu.length)]
		destiny.sendMessage(from, { audio: { url: result.audio }, filename: result.T√≠tulo+'.mp3', mimetype: 'audio/mp4' }, { quoted: selo })
	    }
	    break
	    
case 'coffee': case 'kopi': {
            let buttons = [
                    {buttonId: `coffe`, buttonText: {displayText: 'Proxima Image‚û°Ô∏è'}, type: 1}
                ]
                let buttonMessage = {
                    image: { url: 'https://coffee.alexflipnote.dev/random' },
                    caption: `‚òï Caf√©  meus nobres`,
                    footer: destiny.user.name,
                    buttons: buttons,
                    headerType: 4
                }
                destiny.sendMessage(from, buttonMessage, { quoted: selo })
            }
            break

////////// ROLETAS //////////////

case 'roleta':
if(!isBotGroupAdmins) return reply("Eu Preciso de Adm Para ter Acesso Ao Meu Revolve")
sendBtext(from, `Leia As Regras Primeiro`,`Í™∂${NomeDoBot}Í´Ç`,[{buttonId:`${prefix}rgroleta`, buttonText: {displayText: "„Äå Regras „Äç"}, type: 1}], selo)
break

case 'rgroleta':
sendBtext(from, `1 ‚Ä¢ Voc√™ Pode Tomar Ban!\n2 ‚Ä¢ Se Perder, Perde toda a grana!\n3 ‚Ä¢ Se Ganhar, Voc√™ Ganha 1.500 conto\nSe Voc√™ For Banido Vc Vai Ser Revivido Dps De 2 Minutos No M√°ximo.\n4 ‚Ä¢ Bot Tem Que Ta De Adm\n‚Ä¢ Se N√£o Der Certo Entre Em Contato Com Algum Adm`,`Í™∂ùëπùë∂ùë≥ùë¨ùëªùë®-ùëπùëºùë∫ùë∫ùë®Í´Ç`, [{buttonId:`${prefix}ctroleta`, buttonText: {displayText: `ùë™ùë∂ùëµùëªùë∞ùëµùëºùë®ùëπ`}, type: 1}, {buttonId:`${prefix}nroleta`, buttonText: {displayText: `ùë´ùë¨ùë∫ùë∞ùë∫ùëªùë∂`}, type: 1}], selo)
break

case 'nroleta':
sendBtext(from, `Blz ${pushname}, Voc√™ foi Perdoado`, `Veja Meu Menu`, [{buttonId:`${prefix}menu`, buttonText: {displayText: `ùëÄùê∏ùëÅùëà`}, type: 1}], info)
break

case 'ctroleta':
if(!isBotGroupAdmins) return reply("Eu Preciso de Adm Para ter Acesso Ao Meu Revolve")
if (MoneyId === undefined){
rafa = {id: sender, dinheiro: 0}
dinheiro.push(rafa)
fs.writeFileSync('./datab/dinheiro/dinheiro.json', JSON.stringify(dinheiro, null, 2))
}
totaldi = getMoney(sender)
wew = await getBuffer(`https://telegra.ph/file/16a57fff05a289b934aae.jpg`)
atk = ["SEM BALA","COM BALA","ENGANCHADO"]
calib = atk[Math.floor(Math.random() * atk.length)]
if ((calib == 'COM BALA')) {
var apt = "Perdeu [üíÄ]..."
} else if ((calib == 'SEM BALA') || ('ENGANCHADO')) { 
var apt = "Ganhou, Teve Muita Sorte, Parab√©ns"
}
destiny.sendMessage(from, {text:`[ü•Å] *TAMBOU GIROU...* [ü•Å]`}, {quoted: selo}).then(() => {
destiny.sendMessage(from, {text:`[üí•] *GATILHO APERTADO...* [üí•]`}, {quoted: selo})
})
await sleep(2000)
destiny.sendMessage(from, {image: wew, caption:`[ü•∂] *O TAMBOR ESTA ${calib}*\n\nHmmmn, Parece Que O(a) @${sender.split("@")[0]}, Ele(a) ${apt}`, footer: ``}, {quoted: info})
if (apt == 'Perdeu [üíÄ]...') {
await sleep(4000)
destiny.sendMessage(from, {text:`[‚ò†Ô∏è] Regras S√£o Regras n√© @${sender.split("@")[0]}...`}, {quoted: selo}).then(() => {
destiny.groupParticipantsUpdate(from, [`${sender.split("@")[0]}@s.whatsapp.net`], "remove")
})
await sleep(120000)
destiny.groupParticipantsUpdate(from, [`${sender.split("@")[0]}@s.whatsapp.net`], "add").then(() => {
money(sender, -totaldi)
destiny.sendMessage(from, {text:`[ü©∏] Depois de ter morrido por um acidente o @${sender.split('@')[0]} Foi adicionado de volta e perdeu tudo ‚Ä¢`, mentions: [sender]}, {quoted: selo})
})
}
if (apt == 'Ganhou, Teve Muita Sorte, Parab√©ns') {
await sleep(5000)
money(sender, 1500)
sendBtext(from, `[üçª] Parab√©ns @${sender.split("@")[0]} [üçª]\n----Pela sua Coragem\nüç∑‚ñ∏ Voc√™ Ganhou 1500R$\n----Quer Tentar Novamente?`,`${NomeDoBot}`, [{buttonId:`${prefix}ctroleta`, buttonText: {displayText: 'ùëπùë¨ùëΩùë®ùëµùë™ùëØùë¨ ü•Ç'}, type: 1}, {buttonId:`${prefix}carteira`, buttonText: {displayText: 'ùë™ùë®ùëπùëªùë¨ùë∞ùëπùë® üí≥'}, type: 1}], selo)
}
break

case 'roletarussa': 
if(!isBotGroupAdmins) return reply("Eu Preciso Ta De Adm Pra Ter A Mira Mais Precisa, Pra N√£o Errar o Alvo ü§†")
if (!isGroup) return reply('Este comando s√≥ deve ser utilizado em Grupo')
if (!isGroupAdmins) return reply ('Voc√™ N√£o √© digno de tal comando, pois so quem pode, √© usu√°rios com poder alto...')
arma = ["PARAFAL", "DESERT", "VAL", "Ak-47", "MP40", "M16", "M4A1", "Glock","Escopeta","AA12","G136","M1014","Barrete","MP5","G3","G17","AUG","MP7","P90","UZI","Kar93","AWM","PKM","M13","MP7"]
membrana = ["Na Perna","Na Cabe√ßa","Na Bunda","Na M√£o","No Bra√ßo","Na Boca","No Saco","Na Coxa","No Imbigo","Nos Peito","No Cutuvelo","No Nariz","Na Orelha"]
armon = arma[Math.floor(Math.random() * arma.length)]
menbro = membrana[Math.floor(Math.random() * membrana.length)]
reply(`Algu√©m Vai Morrer Jaj√°, Espera S√≥ Eu Recarregar Minha ${armon}, Aguarde 5 Segundos...`)
await sleep(5000)
reply("Pronto, Agora Vamos l√°, Minha Arma Ta Carregada Prontinha Para Matar Um, Quem Serar O(a) Sortudo(a)?!")
await sleep(2000)
await destiny.groupSettingUpdate(from, 'announcement')
await sleep(3000)
reply("Quem Eu Devo matar...\n\nJ√° me decidi...")
bah = fs.readFileSync('./audios/level.mp3');
destiny.sendMessage(from, {audio: bah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
await sleep(4000)
d = []
teks = `*[üí•] P√Å√Å√Å√Å!! [üí•]*\n\n`
for(i = 0; i < 1; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
teks += `O @${groupMembers[r].id.split('@')[0]} Foi baliado ${menbro} E Sangrou At√© a Morte [‚ò†Ô∏è]`
d.push(groupMembers[r].id)
}
await sleep(4500)
destiny.sendMessage(from, {text: teks, mentions: d}, {quoted: selo})
destiny.groupParticipantsUpdate(from, d, 'remove')
await sleep(4000)
await destiny.groupSettingUpdate(from, 'not_announcement')
reply("[‚ò†Ô∏è] *Ningu√©m Viu Nada Em...* [üëÄ]")
await sleep(180000)
for(i = 0; i < 1; i++) {
pruh = `Dps De 3 Minutos, O ${groupMembers[r].id.split('@')[0]} Foi Revivido Atrav√©s Da Cura Suprema [üíä]`
destiny.sendMessage(from, {text: pruh}, {quoted: selo})
d.push(groupMembers[r].id)
}
destiny.sendMessage(from, {text: teks, mentions: d}, {quoted:selo})
destiny.groupParticipantsUpdate(from, d, 'add')
reply('[üíê] Bem Vindo de Volta, Voc√™ Foi Morto Pelo Comando Death [üíê]')
break

case 'rolatanumber':
reply (' [Ô∏èüìç] Aten√ß√£o ganha quem tirar o n√∫mero mais alto')
var rand = Math.floor(Math.random() * (12 - 2) + 2);
bla = fs.readFileSync(`./armor/jogo/roleta/${rand}.webp`)
destiny.sendMessage(from, {sticker: bla}, {quoted: info})
buttons2 = [
¬† {buttonId: `${prefix}roletanumber`, buttonText: {displayText: '‚ôªÔ∏è„Äå Girar Novamente „Äç‚ôªÔ∏è'},  type: 1}]
buttonMessage2 = {
¬†¬†¬† text: "[Ô∏èüé°] Estou girando a roleta para voc√™, se quiser que eu jogue novamente, selecione uma op√ß√£o abaixo:",
¬†¬†¬† footer: 'üë§roletaüë§',
¬†¬†¬† buttons2: buttons2,
¬†¬†¬† headerType: 1
}
sendMsg =¬† destiny.sendMessage(from, buttonMessage2, {quoted: selo}) 
break

case 'flechas2':
case 'flechadas2':
sections = [
{title: "[‚òò]  boa sorte no seu disparo...",
rows: [
{title: "FELCHA 1üèπ", rowId: `${prefix}flechadass2`, description: "[ü§ï]    boa sorte no seu disparo pra ganha uma remada do cacique."},
{title: "FLECHA 2üèπ", rowId: `${prefix}flechadass2`, description: "[üòç]    boa sorte no seu disparo pra ganha uma muie do cacique."},
{title: "FLECHA 3üèπ", rowId: `${prefix}flechadass2`, description: "[ü§®]    boa sorte no seu disparo pra ganha um beijo do cacique."},
{title: "FLECHA 4üèπ", rowId: `${prefix}flechadass2`, description: "[üôà]    boa sorte no seu disparo pra ganha o neymar de calcinha do cacique."},
{title: "FLECHA 5üèπ", rowId: `${prefix}flechadass2`, description: "[üè≥Ô∏è‚Äçüåà]    boa sorte no seu disparo pra ganha um lgbt do cacique."},
{title: "FLECHA 6üèπ", rowId: `${prefix}flechadass2`, description: "[‚ôø]    boa sorte no seu disparo pra ganha um traveco do cacique."},
{title: "FLECHA 7üèπ", rowId: `${prefix}flechadass2`, description: "[üñï]    boa sorte no seu disparo pra ganha uma dedada do cacique."},
{title: "FLECHA 8üèπ", rowId: `${prefix}flechadass2`, description: "[üåö]    boa sorte no seu disparo pra ganha uma rola do cacique."},
{title: "FLECHA 9üèπ", rowId: `${prefix}flechadass2`, description: "[üåù]  boa sorte no seu disparo pra ganha um homem do cacique."}]
}]
listMessage2 = {
text: `[Ô∏èüèπ] Escolha um n√∫mero de 1 a 9 e jogue a flecha, est√° com sorte hoje?`,
  footer: `[Ô∏èüìç] CABANA DE FLECHAS  [Ô∏èüìç]`,
  title: `Ol√° ${pushname}`,
  buttonText: " [üó£] ESCOLHA" ,
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2)
break

case 'flechadass2':
var rand = Math.floor(Math.random() * (15 - 2) + 2);
bla = fs.readFileSync(`./armor/jogo/flecha/${rand}.webp`)
destiny.sendMessage(from, {sticker: bla}, {quoted: info})
break

case 'flechadas':
case 'flechas': {
var rand = Math.floor(Math.random() * (15 - 2) + 2);
bla = fs.readFileSync(`./armor/jogo/flecha/${rand}.webp`)
destiny.sendMessage(from, {sticker: bla}, {quoted: info})
let buttons = [
¬† {buttonId:`${prefix + command}`, buttonText: {displayText: 'üèπ„ÄåJogue Novamente „Äçüèπ' }, type: 1},
¬† {buttonId:`lsksksks`,
 buttonText: {displayText: 'CANCELAR DISPARO'}, type: 1}]
let buttonMessage = {
image: {url: `https://telegra.ph/file/da7a156a44b182d8dcccc.jpg`},
caption: "\n [Ô∏èüèÜ]  Veja quando pontos voc√™ ir√° acertar e anote, desafie algu√©m pra v√™ quem ganha mais pontos, se quiser jogue novamente.",
buttons: buttons,
headerType: 1
}
sendMsg = await destiny.sendMessage(from, buttonMessage, {quoted: selo})}
break

case 'atirando':
var rand = Math.floor(Math.random() * (10 - 2) + 2);
bla = fs.readFileSync(`./armor/jogo/tiros/${rand}.webp`)
destiny.sendMessage(from, {sticker: bla}, {quoted: info})
break

case 'tiros2':
case 'tiro2':
case 'atirar2':
case 'disparar2':
sections = [
{title: "[Ô∏èü•∑]  boa sorte no seu disparo...",
rows: [
{title: "‚öîÔ∏èARMA 1", rowId: `${prefix}atirando`, description: "[üòà]  boa sorte no seu disparo, esta valendo o coll do adm."},
{title: "‚öîÔ∏èARMA 2", rowId: `${prefix}atirando`, description: "[üßê]  boa sorte no seu disparo, est√° valendo uma rola no coll de quem vc marcar."},
{title: "‚öîÔ∏èARMA 3", rowId: `${prefix}atirando`, description: "[üò≥]  boa sorte no seu disparo, est√° apostando seu coll."},
{title: "‚öîÔ∏èARMA 4", rowId: `${prefix}atirando`, description: "[üòè]  boa sorte no seu disparo, est√° valendo o Pablo Vitar de calcinha."},
{title: "‚öîÔ∏èARMA 5", rowId: `${prefix}atirando`, description: "[ü™Ä]  boa sorte no seu disparo, est√° valendo um sexo2."},
{title: "‚öîÔ∏èARMA 6", rowId: `${prefix}atirando`, description: "[üêí]  boa sorte no seu disparo est√° valendo sua virgindade."},
{title: "‚öîÔ∏èARMA 7", rowId: `${prefix}atirando`, description: "[üóø]  boa sorte no seu disparo, esta valendo o quanto vc e sigma."},
{title: "‚öîÔ∏èARMA 8", rowId: `${prefix}atirando`, description: "[‚òò]  boa sorte no seu disparo..."}]
}]
listMessage2 = {
text: `[Ô∏èü•∑] Veja se voc√™ acertou o alvo, caso vc erre, dispare novamente.`,
  footer: `[Ô∏èüí¢] BARRACA DE TIROS [Ô∏èüí¢]`,
  title: `Ol√° ${pushname}`,
  buttonText: " [Ô∏èüî¢] N√öMERO DA ARMA  [Ô∏èüî¢]" ,
  sections
}
sendMsg = await destiny.sendMessage(from, listMessage2)
break

case 'tiros':
case 'tiro':
case 'atirar':
case 'disparar': {
var rand = Math.floor(Math.random() * (10 - 2) + 2);
bla = fs.readFileSync(`./armor/jogo/tiros/${rand}.webp`)
destiny.sendMessage(from, {sticker: bla}, {quoted: info})
let buttons = [
¬† {buttonId:`${prefix + command}`, buttonText: {displayText: ' [‚è∞] NOVO DISPARO [‚è∞] ' }, type: 1},
¬† {buttonId:`lsksksks`,
 buttonText: {displayText: 'CANCELAR DISPARO'}, type: 1}]
let buttonMessage = {
image: {url: `https://telegra.ph/file/da7a156a44b182d8dcccc.jpg`},
caption: "\n [Ô∏èü•∑] Veja se voc√™ acertou o alvo, caso vc erre, dispare novamente.",
buttons: buttons,
headerType: 1
}
sendMsg = await destiny.sendMessage(from, buttonMessage, {quoted: selo})}
break

//====(FIM-BRINCADEIRAS-JOGOS)====\\


//(CASE-SIMIH-INTELIG√äNCIA-ARTIFICIAL)\\

case 'simi':
if(isSimi) return reply('Desativado')
sduy = args.join(" ")
data = await fetchJson(`https://api.simsimi.net/v2/?text=${sduy}&lc=pt`, {method: 'get'})
simi = `${data.success}`  
reply(simi)
break

case 'simih':
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isSimi) return reply('O modo Simi est√° ativo')
samih.push(from)
fs.writeFileSync('./datab/usuarios/simi.json', JSON.stringify(samih))
reply('Ativado com sucesso o modo simi neste grupo üòó')
} else if (Number(args[0]) === 0) {
if(!isSimi) return reply('J√° est√° Desativado.')
samih.splice(from, 1)
fs.writeFileSync('./datab/usuarios/simi.json', JSON.stringify(samih))
reply('Desativado modo simi com sucesso neste grupo üò°Ô∏è')
} else {
reply('1 para ativar, 0 para desativar, lerdao vc em KKKKK')
}
break

case 'simih2':
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isSimi2) return reply('O modo Simi est√° ativo')
samih2.push(from)
fs.writeFileSync('./armor/simi.json', JSON.stringify(samih2))
reply('Ativado com sucesso o modo simi neste grupo üòó, Este simih2 ele aprende as respostas e perguntas das pessoas, conforme vai falando, por isso, s√≥ recomendo utilizar ele no termux, pois no site ou lugar diferente do termux que voc√™ utilizar, ele n√£o vai armazenar os dados nescessarios')
} else if (Number(args[0]) === 0) {
if(!isSimi2) return reply('J√° est√° Desativado.')
samih2.splice(from, 1)
fs.writeFileSync('./armor/simi.json', JSON.stringify(samih2))
reply('Desativado modo simi com sucesso neste grupo üò°Ô∏è')
} else {
reply('1 para ativar, 0 para desativar, lerdao vc em KKKKK')
}
break

//===================================\\


//=(AUDIOS/DE-MUSICA/ZOUEIRA/ETC..)==\\



//================================\\


//===(ALTERADOR-DE-AUDIO/VIDEO)====\\

case 'videoreverse':
case 'reversevid':
if (!isQuotedVideo) return reply('Marque um v√≠deo')
sendBtext(from, enviar.espere, `@~ usu√°rio: ${pushname}\n@~ Grupo: ${groupName}\n@~ cmd: ${prefix + command}`, [{buttonId: `nd`, buttonText: {displayText: `Obg ${NomeDoBot}`}, type: 1}], info)
encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
media = rane
ran = getRandom('.mp4')
exec(`ffmpeg -i ${media} -vf reverse -af areverse ${ran}`, (err) => {
fs.unlinkSync(media)
if (err) return reply(`Err: ${err}`)
buffer453 = fs.readFileSync(ran)
destiny.sendMessage(from, {video: buffer453, mimetype: 'video/mp4'}, {quoted: info})
fs.unlinkSync(ran)
})
break 

case 'videolento':
case 'slowvid':  
if (!isQuotedVideo) return reply('Marque um v√≠deo')
sendBtext(from, enviar.espere, `@~ usu√°rio: ${pushname}\n@~ Grupo: ${groupName}\n@~ cmd: ${prefix + command}`, [{buttonId: `nd`, buttonText: {displayText: `Obg ${NomeDoBot}`}, type: 1}], info)
encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
media = rane
ran = getRandom('.mp4')
exec(`ffmpeg -i ${media} -filter_complex "[0:v]setpts=2*PTS[v];[0:a]atempo=0.5[a]" -map "[v]" -map "[a]" ${ran}`, (err) => {
fs.unlinkSync(media)
if (err) return reply(`Err: ${err}`)
buffer453 = fs.readFileSync(ran)
destiny.sendMessage(from, {video: buffer453, mimetype: 'video/mp4'}, {quoted: info })
fs.unlinkSync(ran)
})
break

case 'videorapido':
case 'fastvid':  
if (!isQuotedVideo) return reply('Marque um v√≠deo')
sendBtext(from, enviar.espere, `@~ usu√°rio: ${pushname}\n@~ Grupo: ${groupName}\n@~ cmd: ${prefix + command}`, [{buttonId: `nd`, buttonText: {displayText: `Obg ${NomeDoBot}`}, type: 1}], info)
encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
media = rane
ran = getRandom('.mp4')
exec(`ffmpeg -i ${media} -filter_complex "[0:v]setpts=0.5*PTS[v];[0:a]atempo=2[a]" -map "[v]" -map "[a]" ${ran}`, (err) => {
fs.unlinkSync(media)
if (err) return reply(`Err: ${err}`)
buffer453 = fs.readFileSync(ran)
destiny.sendMessage(from, {video: buffer453, mimetype: 'video/mp4'}, {quoted: info })
fs.unlinkSync(ran)
})		
break

case 'tupai':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.5,asetrate=65100"' ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'reverse':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter_complex "areverse" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'fat':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=1.6,asetrate=22100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'deep':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af "atempo=4/4,asetrate=44500*2/3" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'earrape':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af "volume=12'" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'blown':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af "acrusher=.1:1:64:0:log" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'grave2':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=1.6,asetrate=22100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'grave':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.9,asetrate=44100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'adolesc':
case 'vozmenino':  
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a atempo=1.06,asetrate=44100*1.25 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break  

case 'bass3':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=20:width_type=o:width=2:g=15 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'bass': 
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=20:width_type=o:width=2:g=15 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'bass2': 
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=94:width_type=o:width=2:g=30 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'estourar': 
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=90:width_type=o:width=2:g=30 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'fast':
case 'audiorapido':  
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.9,asetrate=95100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Erro')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'esquilo':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.7,asetrate=65100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(ran)
})
break

case 'audiolento': 
case 'slow':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply('loading...')
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.9,asetrate=44100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true, caption:"*Sucesso*", contextInfo:{externalAdReply:{
title:``,
body:`${NomeDoBot}`,
thumbnail: fs.readFileSync("./logos/logo2.jpg"),
mediaType:2,
mediaUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`,
sourceUrl: `https://www.instagram.com/p/CiU_NkMuGKk/?igshid=YmMyMTA2M2Y=`
}}}, {quoted:selo})
fs.unlinkSync(rano)
})
break



case 'robot':
if (!isQuotedAudio) return reply('[üîä] Marque um √°udio.')
sendBtext(from, enviar.espere, ` `, [{buttonId: `boa`, buttonText: {displayText: `Obrigado`}, type: 1}])
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.m4a')
exec(`ffmpeg -i ${gem} -filter_complex "afftfilt=real='hypot(re,im)*sin(0)':imag='hypot(re,im)*cos(0)':win_size=512:overlap=0.75" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
destiny.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
fs.unlinkSync(ran)
})
break

//======(FIM-ALTERAR-AUDIO)========\\

//======(TEXTO PRO)=============\\

case 'logos':
if(!q) return reply(`Oi√° ${pushname}\nDigite: ${prefix}logos seu nick`)
sections = [
¬†¬†¬† {
title: "ùêãùêàùêíùêìùêÄ ùêÉùêÑ ùêãùêéùêÜùêéùêí",
rows: [
{title: "Gato triste", rowId: `${prefix}sadcat ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Business", rowId: `${prefix}business ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Bear", rowId: `${prefix}bear ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Summery", rowId: `${prefix}summery ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Candy", rowId: `${prefix}candy ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Batman", rowId: `${prefix}batman ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Christmas", rowId: `${prefix}christmas ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "3dchristmas", rowId: `${prefix}3dchristmas ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Sparklechristmas", rowId: `${prefix}sparklechristmas ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Deepsea", rowId: `${prefix}deepsea ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Scifi", rowId: `${prefix}scifi ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Rainbow", rowId: `${prefix}rainbow ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Waterpipe", rowId: `${prefix}waterpipe ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Spooky", rowId: `${prefix}spooky ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Pencil", rowId: `${prefix}pencil ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Circuit", rowId: `${prefix}circuit ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Discovery", rowId: `${prefix}discovery ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Metalic", rowId: `${prefix}metalic ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Fiction", rowId: `${prefix}fiction ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Demon", rowId: `${prefix}demon ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Transformer", rowId: `${prefix}transformer ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Berry", rowId: `${prefix}berry ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Thunder", rowId: `${prefix}thunder ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Magma", rowId: `${prefix}magma ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "3dstone", rowId: `${prefix}3dstone ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Neonlight", rowId: `${prefix}neonlight ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Glitch", rowId: `${prefix}glitch ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Harrypotter", rowId: `${prefix}harrypotter ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Brokenglass", rowId: `${prefix}brokenglass ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Papercut", rowId: `${prefix}papercut ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Watercolor", rowId: `${prefix}watercolor ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Multicolor", rowId: `${prefix}multicolor ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Neondevil", rowId: `${prefix}neondevil ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Underwater", rowId: `${prefix}underwater ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Graffitibike", rowId: `${prefix}graffitibike ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Snow", rowId: `${prefix}snow ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Cloud", rowId: `${prefix}cloud ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Honey", rowId: `${prefix}honey ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Ice", rowId: `${prefix}ice ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Fruitjuice", rowId: `${prefix}fruitjuice ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Biscuit", rowId: `${prefix}biscuit ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Wood", rowId: `${prefix}wood ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Chocolate", rowId: `${prefix}chocolate ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Strawberry", rowId: `${prefix}strawberry ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Matrix", rowId: `${prefix}matrix ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Blood", rowId: `${prefix}blood ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Dropwater", rowId: `${prefix}dropwater ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Toxic", rowId: `${prefix}toxic ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Lava", rowId: `${prefix}lava ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Rock", rowId: `${prefix}rock ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Bloodglas", rowId: `${prefix}bloodglas ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Hallowen", rowId: `${prefix}hallowen ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Darkgold", rowId: `${prefix}darkgold ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Joker", rowId: `${prefix}joker ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Wicker", rowId: `${prefix}wicker ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Firework", rowId: `${prefix}firework ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Skeleton", rowId: `${prefix}skeleton ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Blackpink", rowId: `${prefix}blackpink ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Sand", rowId: `${prefix}sand ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Glue", rowId: `${prefix}glue ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "1917", rowId: `${prefix}1917 ${q}`, description: `${NomeDoBot}`},
¬†¬†¬† {title: "Leaves", rowId: `${prefix}leaves ${q}`, description: `${NomeDoBot}`},
]
¬†¬†¬† },
 {
  title: "ùêèùêãùêÄùêêùêîùêàùêçùêáùêÄùêí",
  rows: [
{title: "Plaq", rowId: `${prefix}plaq ${q}`, description: `${NomeDoBot}`},
{title: "Plaq2", rowId: `${prefix}plaq2 ${q}`, description: `${NomeDoBot}`},
{title: "Plaq3", rowId: `${prefix}plaq3 ${q}`, description: `${NomeDoBot}`},
{title: "Plaq4", rowId: `${prefix}plaq4 ${q}`, description: `${NomeDoBot}`},
{title: "Plaq5", rowId: `${prefix}plaq5 ${q}`, description: `${NomeDoBot}`},
{title: "Plaq6", rowId: `${prefix}plaq6 ${q}`, description: `${NomeDoBot}`},
]
 }
]
listMessage2 = {
¬† text: `${NomeDoBot}`,
¬† footer: `Ol√° ${pushname}, Essa √© minha lista de logos2. Esses s√£o de apenas para uma palavra, ou seja,  ${prefix}batman Saikyo\n\nDono: ${NickDono}\nDono: wa.me/+${setting.numerodono}`,
¬† title: "ùêãùêàùêíùêìùêÄ ùêÉùêÑ ùêãùêéùêÜùêéùêí",
¬† buttonText: "ùê∂ùêøùêºùëÑùëàùê∏ ùê¥ùëÑùëàùêº",
¬† sections
}
sendMsg = await destiny.sendMessage(from, listMessage2, {quoted: selo})
break


case 'candy':
case 'batman':
case 'christmas': 
case '3dchristmas': 
case 'sparklechristmas':
case 'deepsea': 
case 'scifi': 
case 'rainbow': 
case 'waterpipe': 
case 'spooky': 
case 'pencil': 
case 'circuit': 
case 'discovery': 
case 'metalic': 
case 'fiction': 
case 'demon': 
case 'transformer': 
case 'berry': 
case 'thunder': 
case 'magma': 
case '3dstone': 
case 'neonlight': 
case 'glitch': 
case 'harrypotter': 
case 'brokenglass': 
case 'papercut': 
case 'watercolor': 
case 'multicolor': 
case 'neondevil': 
case 'underwater': 
case 'graffitibike':
case 'snow': 
case 'cloud': 
case 'honey': 
case 'ice': 
case 'fruitjuice': 
case 'biscuit': 
case 'wood': 
case 'chocolate': 
case 'strawberry': 
case 'matrix': 
case 'blood': 
case 'dropwater': 
case 'toxic': 
case 'lava': 
case 'rock': 
case 'bloodglas': 
case 'hallowen': 
case 'darkgold': 
case 'joker': 
case 'wicker':
case 'firework': 
case 'skeleton': 
case 'blackpink': 
case 'sand': 
case 'glue': 
case '1917': 
case 'business':
case 'bear':
case 'sand':
case 'summery':
case 'leaves': {
if (!q) return reply(`Exemplo: ${{prefix} + command} ${NomeDoBot}`) 
reply('loading...')
let link
if (/summery/.test(command)) link = 'https://textpro.me/create-a-summery-sand-writing-text-effect-988.html'
if (/sand/.test(command)) link = 'https://textpro.me/sand-writing-text-effect-online-990.html'
if (/bear/.test(command)) link = 'https://textpro.me/online-black-and-white-bear-mascot-logo-creation-1012.html'
if (/business/.test(command)) link = 'https://textpro.me/3d-business-sign-text-effect-1078.html'
if (/batman/.test(command)) link = 'https://textpro.me/make-a-batman-logo-online-free-1066.html'
if (/candy/.test(command)) link = 'https://textpro.me/create-christmas-candy-cane-text-effect-1056.html'
if (/christmas/.test(command)) link = 'https://textpro.me/christmas-tree-text-effect-online-free-1057.html'
if (/3dchristmas/.test(command)) link = 'https://textpro.me/3d-christmas-text-effect-by-name-1055.html'
if (/sparklechristmas/.test(command)) link = 'https://textpro.me/sparkles-merry-christmas-text-effect-1054.html'
if (/deepsea/.test(command)) link = 'https://textpro.me/create-3d-deep-sea-metal-text-effect-online-1053.html'
if (/scifi/.test(command)) link = 'https://textpro.me/create-3d-sci-fi-text-effect-online-1050.html'
if (/rainbow/.test(command)) link = 'https://textpro.me/3d-rainbow-color-calligraphy-text-effect-1049.html'
if (/waterpipe/.test(command)) link = 'https://textpro.me/create-3d-water-pipe-text-effects-online-1048.html'
if (/spooky/.test(command)) link = 'https://textpro.me/create-halloween-skeleton-text-effect-online-1047.html'
if (/pencil/.test(command)) link = 'https://textpro.me/create-a-sketch-text-effect-online-1044.html'
if (/circuit/.test(command)) link = 'https://textpro.me/create-blue-circuit-style-text-effect-online-1043.html'
if (/discovery/.test(command)) link = 'https://textpro.me/create-space-text-effects-online-free-1042.html'
if (/metalic/.test(command)) link = 'https://textpro.me/creat-glossy-metalic-text-effect-free-online-1040.html'
if (/fiction/.test(command)) link = 'https://textpro.me/create-science-fiction-text-effect-online-free-1038.html'
if (/demon/.test(command)) link = 'https://textpro.me/create-green-horror-style-text-effect-online-1036.html'
if (/transformer/.test(command)) link = 'https://textpro.me/create-a-transformer-text-effect-online-1035.html'
if (/berry/.test(command)) link = 'https://textpro.me/create-berry-text-effect-online-free-1033.html'
if (/thunder/.test(command)) link = 'https://textpro.me/online-thunder-text-effect-generator-1031.html'
if (/magma/.test(command)) link = 'https://textpro.me/create-a-magma-hot-text-effect-online-1030.html'
if (/3dstone/.test(command)) link = 'https://textpro.me/3d-stone-cracked-cool-text-effect-1029.html'
if (/neonlight/.test(command)) link = 'https://textpro.me/create-3d-neon-light-text-effect-online-1028.html'
if (/glitch/.test(command)) link = 'https://textpro.me/create-impressive-glitch-text-effects-online-1027.html'
if (/harrypotter/.test(command)) link = 'https://textpro.me/create-harry-potter-text-effect-online-1025.html'
if (/brokenglass/.test(command)) link = 'https://textpro.me/broken-glass-text-effect-free-online-1023.html'
if (/papercut/.test(command)) link = 'https://textpro.me/create-art-paper-cut-text-effect-online-1022.html'
if (/watercolor/.test(command)) link = 'https://textpro.me/create-a-free-online-watercolor-text-effect-1017.html'
if (/multicolor/.test(command)) link = 'https://textpro.me/online-multicolor-3d-paper-cut-text-effect-1016.html'
if (/neondevil/.test(command)) link = 'https://textpro.me/create-neon-devil-wings-text-effect-online-free-1014.html'
if (/underwater/.test(command)) link = 'https://textpro.me/3d-underwater-text-effect-generator-online-1013.html'
if (/graffitibike/.test(command)) link = 'https://textpro.me/create-wonderful-graffiti-art-text-effect-1011.html'
if (/snow/.test(command)) link = 'https://textpro.me/create-snow-text-effects-for-winter-holidays-1005.html'
if (/cloud/.test(command)) link = 'https://textpro.me/create-a-cloud-text-effect-on-the-sky-online-1004.html'
if (/honey/.test(command)) link = 'https://textpro.me/honey-text-effect-868.html'
if (/ice/.test(command)) link = 'https://textpro.me/ice-cold-text-effect-862.html'
if (/fruitjuice/.test(command)) link = 'https://textpro.me/fruit-juice-text-effect-861.html'
if (/biscuit/.test(command)) link = 'https://textpro.me/biscuit-text-effect-858.html'
if (/wood/.test(command)) link = 'https://textpro.me/wood-text-effect-856.html'
if (/chocolate/.test(command)) link = 'https://textpro.me/chocolate-cake-text-effect-890.html'
if (/strawberry/.test(command)) link = 'https://textpro.me/strawberry-text-effect-online-889.html'
if (/matrix/.test(command)) link = 'https://textpro.me/matrix-style-text-effect-online-884.html'
if (/blood/.test(command)) link = 'https://textpro.me/horror-blood-text-effect-online-883.html'
if (/dropwater/.test(command)) link = 'https://textpro.me/dropwater-text-effect-872.html'
if (/toxic/.test(command)) link = 'https://textpro.me/toxic-text-effect-online-901.html'
if (/lava/.test(command)) link = 'https://textpro.me/lava-text-effect-online-914.html'
if (/rock/.test(command)) link = 'https://textpro.me/rock-text-effect-online-915.html'
if (/bloodglas/.test(command)) link = 'https://textpro.me/blood-text-on-the-frosted-glass-941.html'
if (/hallowen/.test(command)) link = 'https://textpro.me/halloween-fire-text-effect-940.html'
if (/darkgold/.test(command)) link = 'https://textpro.me/metal-dark-gold-text-effect-online-939.html'
if (/joker/.test(command)) link = 'https://textpro.me/create-logo-joker-online-934.html'
if (/wicker/.test(command)) link = 'https://textpro.me/wicker-text-effect-online-932.html'
if (/firework/.test(command)) link = 'https://textpro.me/firework-sparkle-text-effect-930.html'
if (/skeleton/.test(command)) link = 'https://textpro.me/skeleton-text-effect-online-929.html'
if (/blackpink/.test(command)) link = 'https://textpro.me/create-blackpink-logo-style-online-1001.html'
if (/sand/.test(command)) link = 'https://textpro.me/write-in-sand-summer-beach-free-online-991.html'
if (/glue/.test(command)) link = 'https://textpro.me/create-3d-glue-text-effect-with-realistic-style-986.html'
if (/1917/.test(command)) link = 'https://textpro.me/1917-style-text-effect-online-980.html'
if (/leaves/.test(command)) link = 'https://textpro.me/natural-leaves-text-effect-931.html'
let anu = await maker.textpro(link, q)
Saikyo = `
By ${NomeDoBot} Para minha querida`
let buttons = [
{buttonId: `${prefix}dnd`, buttonText: {displayText: 'OBRIGADO'}, type: 1},
]
let buttonMessage = {
image: { url: anu },
caption: Saikyo,
footer: ``,
buttons: buttons,
}
destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
break



//====(JOGO-DA-VELHA-COM-MAQUINA)====\\

case 'tttme':
if (!isGroup) return reply('S√ì EM GRUPO')
const checkTTTIdMe = getTTTId(sender)
if (checkTTTIdMe === undefined) addTTTId(sender)
imgper = `https://telegra.ph/file/049e80a65e03bcb58c799.jpg`
sendBimg(from, imgper, tttme(pushname, getTTTwins (sender), getTTTdefeats (sender), getTTTties (sender), getTTTpoints (sender)), ' ', [{buttonId: `nd`, buttonText: {displayText: `Obg ${NomeDoBot}`}, type: 1}])
break

case 'tttrank':
if (!isGroup) return reply(enviar.msg.grupo)
tictactoe.sort((a, b) => (a.points < b.points) ? 1 : -1)
mentioned_jid = []
let board = '*üî•Ranking dos melhores playersüî•*\n\n'
try {
for (let i = 0; i < 3; i++) {
if (i == 0) {board += `${i + 1}¬∫ ü•á : @${tictactoe[i].id.split('@')[0]}\n‚ûª‚ù• *Ganhou: ${tictactoe[i].wins}*\n‚ûª‚ù• *Perdeu: ${tictactoe[i].defeats}*\n‚ûª‚ù• *Empates: ${tictactoe[i].ties}*\n*‚ûª‚ù• Pontua√ß√£o: ${tictactoe[i].points}*\n\n`
} else if (i == 1) {board += `${i + 1}¬∫ ü•à : @${tictactoe[i].id.split('@')[0]}\n‚ûª‚ù• *Ganhou: ${tictactoe[i].wins}*\n‚ûª‚ù• *Perdeu: ${tictactoe[i].defeats}*\n‚ûª‚ù• *Empates: ${tictactoe[i].ties}*\n*‚ûª‚ù• Pontua√ß√£o: ${tictactoe[i].points}*\n\n`
} else if (i == 2) {board += `${i + 1}¬∫ ü•â : @${tictactoe[i].id.split('@')[0]}\n‚ûª‚ù• *Ganhou: ${tictactoe[i].wins}*\n‚ûª‚ù• *Perdeu: ${tictactoe[i].defeats}*\n‚ûª‚ù• *Empates: ${tictactoe[i].ties}*\n*‚ûª‚ù• Pontua√ß√£o: ${tictactoe[i].points}*\n\n`
}
mentioned_jid.push(tictactoe[i].id)
} 
mentions(board, mentioned_jid, true)
} catch (err) {
console.log(err)
await destiny.sendMessage(from, {text: `*√â necess√°rio 3 jogadores para se construir um ranking*`}, {quoted: info})
}
break

case 'jogar':
tttset.playertest = sender
if (!isGroup) {
reply(ptbr.group())
} else if (tttset.tttstatus == "off") {
reply(`*O jogo n√£o foi iniciado*\n*Digite ${prefix}ttt <dificukdade> para iniciar*`)
} else if (tttset.player != tttset.playertest) {
reply(`*O jogo j√° foi iniciado por outro player, aguarde ele terminar...*`)
  
} else if (tttset.tttantibug == "on") {
reply(`Aguarde a a√ß√£o anterior ser conclu√≠da...`)

} else {
tttset.tttantibug = "on"
const coordX = args
if (coordX != 'a1' && coordX != 'a2' && coordX != 'a3' &&
coordX != 'b1' && coordX != 'b2' && coordX != 'b3' && coordX != 'c1' && coordX != 'c2' && coordX != 'c3') {
reply(`*Diga a cordenada*\nExemplo: ${prefix}coord a1`)
tttset.tttantibug = "off"
} else {
  
switch (args[0]) {
  
case 'a1':
if (esp.a1 != "üî≤") {
reply('*Esse espa√ßo ja foi marcado, tente outro')
} else {
esp.a1 = "‚ùå"
while (tttset.reActivate1 == "on") {
IA()
}
}
break

case 'a2':
if (esp.a2 != "üî≤") {
reply('*Esse espa√ßo ja foi marcado, tente outro')
} else {
esp.a2 = "‚ùå"
while (tttset.reActivate1 == "on") {
IA()
}
}
break

case 'a3':
if (esp.a3 != "üî≤") {
reply('*Esse espa√ßo ja foi marcado, tente outro')
} else {
esp.a3 = "‚ùå"
while (tttset.reActivate1 == "on") {
IA()
}
}
break

case 'b1':
if (esp.b1 != "üî≤") {
reply('*Esse espa√ßo ja foi marcado, tente outro')
} else {
esp.b1 = "‚ùå"
while (tttset.reActivate1 == "on") {
IA()
}
}
break
                
case 'b2':
if (esp.b2 != "üî≤") {
reply('*Esse espa√ßo ja foi marcado, tente outro')
} else {
esp.b2 = "‚ùå"
while (tttset.reActivate1 == "on") {
IA()
}
}
break
                
case 'b3':
if (esp.b3 != "üî≤") {
reply('*Esse espa√ßo ja foi marcado, tente outro')
} else {
esp.b3 = "‚ùå"
while (tttset.reActivate1 == "on") {
IA()
}
}
break
                
case 'c1':
if (esp.c1 != "üî≤") {
 reply('*Esse espa√ßo ja foi marcado, tente outro')
} else {
esp.c1 = "‚ùå"
while (tttset.reActivate1 == "on") {
IA()
}
}
break
                
case 'c2':
if (esp.c2 != "üî≤") {
reply('*Esse espa√ßo ja foi marcado, tente outro')
} else {
esp.c2 = "‚ùå"
while (tttset.reActivate1 == "on") {
IA()
}
}
break
                
case 'c3':
if (esp.c3 != "üî≤") {
reply('*Esse espa√ßo ja foi marcado, tente outro')
} else {
esp.c3 = "‚ùå"
while (tttset.reActivate1 == "on") {
IA()
}
}
break

}
tttset.reActivate1 = "on"
reply(`üåÄ1Ô∏è‚É£2Ô∏è‚É£3Ô∏è‚É£\nüÖ∞Ô∏è${esp.a1}${esp.a2}${esp.a3}\nüÖ±Ô∏è${esp.b1}${esp.b2}${esp.b3}\n¬©Ô∏è${esp.c1}${esp.c2}${esp.c3}`)
var randomTTTXP = 0
            
if (WinnerX()) {
if (isCmd) {
switch (tttset.tttdifficulty) {
              
case "EASY":
randomTTTXP = Math.floor(Math.random() * 25) + 25
addLevelingXp(tttset.player, randomTTTXP)
break

case "NORMAL":
randomTTTXP = Math.floor(Math.random() * 75) + 75
addLevelingXp(tttset.player, randomTTTXP)
break

case "HARD":
randomTTTXP = Math.floor(Math.random() * 200) + 200
addLevelingXp(tttset.player, randomTTTXP)
break
                
case "IMPOSSIBLE":
randomTTTXP = Math.floor(Math.random() * 1000) + 1000
addLevelingXp(tttset.player, randomTTTXP)
break
}
destiny.sendMessage(from, {text: `*VOC√ä VENCEU, PARABENS*\n\n *VOC√ä GANHOU ${randomTTTXP}XP*`})
} else {
destiny.sendMessage(from,{text: `*VOC√ä VENCEU, PARABENS*`},)
}

const currentTTTwins = getTTTwins(tttset.player)
const checkTTTIdWin = getTTTId(tttset.player)
if (currentTTTwins === undefined && checkTTTIdWin === undefined) addTTTId(tttset.player)
addTTTwin(tttset.player, 1)
addTTTpoints(tttset.player, randomTTTXP)
esp.a1 = "üî≤"; esp.a2 = "üî≤"; esp.a3 = "üî≤"
esp.b1 = "üî≤"; esp.b2 = "üî≤"; esp.b3 = "üî≤"
esp.c1 = "üî≤"; esp.c2 = "üî≤"; esp.c3 = "üî≤"
tttset.tttstatus = "off"
tttset.waitingTime = "on"
} else if (WinnerO()) {
				  
if (isCmd) {
switch (tttset.tttdifficulty) {
case "EASY":
randomTTTXP = 0 - (Math.floor(Math.random() * 200) + 200)
addLevelingXp(tttset.player, randomTTTXP)
break
					
case "NORMAL":
randomTTTXP = 0 - (Math.floor(Math.random() * 75) + 75)
addLevelingXp(tttset.player, randomTTTXP)
break
					
case "HARD":
randomTTTXP = 0 - (Math.floor(Math.random() * 25) + 25)
addLevelingXp(tttset.player, randomTTTXP)
break
					
case "IMPOSSIBLE":
randomTTTXP = 0
addLevelingXp(tttset.player, randomTTTXP)
break

}	
destiny.sendMessage(from, {text: `*Voc√™ perdeu*\n\n AGORA VC PAGAR√Å: ${randomTTTXP}XP`})
	
} else {
destiny.sendMessage(from, {text: `*Voc√™ perdeu*`})
}
const currentTTTdefeats = getTTTdefeats(tttset.player)
const checkTTTIdDefeat = getTTTId(tttset.player)
if (currentTTTdefeats === undefined && checkTTTIdDefeat === undefined) addTTTId(tttset.player)
addTTTdefeat(tttset.player, 1)
addTTTpoints(tttset.player, randomTTTXP)
esp.a1 = "üî≤"; esp.a2 = "üî≤"; esp.a3 = "üî≤"
esp.b1 = "üî≤"; esp.b2 = "üî≤"; esp.b3 = "üî≤"
esp.c1 = "üî≤"; esp.c2 = "üî≤"; esp.c3 = "üî≤"
tttset.tttstatus = "off"
tttset.waitingTime = "on"
				
} else if (Tie()) {
if (isCmd) {
destiny.sendMessage(from, {text: `*JOGO EMPATADO, N√ÉO HOUVE PERDAR*`})
} else {
destiny.sendMessage(from, {text: `*JOGO, EMPATADO, TENHA UM BOM DIA*`})
}

const currentTTTties = getTTTties(tttset.player)
const checkTTTIdTie = getTTTId(tttset.player)
if (currentTTTties === undefined && checkTTTIdTie === undefined) addTTTId(tttset.player)
addTTTtie(tttset.player, 1)
esp.a1 = "üî≤"; esp.a2 = "üî≤"; esp.a3 = "üî≤"
esp.b1 = "üî≤"; esp.b2 = "üî≤"; esp.b3 = "üî≤"
esp.c1 = "üî≤"; esp.c2 = "üî≤"; esp.c3 = "üî≤"
tttset.tttstatus = "off"
tttset.waitingTime = "on"
}
tttset.tttantibug = "off"
}
}
break
	
case 'ttt':
const limitrl = getLimit(sender, daily)
if (!isGroup) {
sendBtext(from, enviar.espere, `@~ usu√°rio: ${pushname}\n@~ Grupo: ${groupName}\n@~ cmd: ${prefix + command}`, [{buttonId: `nd`, buttonText: {displayText: `Obg ${NomeDoBot}`}, type: 1}], info)
} else if (tttset.tttstatus == "on") {
reply(`Algu√©m j√° est√° jogando no momento\nPor favor aguarde o tempo de 30 segundos...`)
} else if (tttset.waitingTime == "on") {
reply(`Algu√©m jogou recentemente\nPor favor aguarde o tempo de 30 segundos...`)
} else if (args == 0 || (args != 'easy' && args != 'Easy' && args != 'EASY' && args != 'normal' && args != 'Normal' && args != 'NORMAL' && args != 'hard' && args != 'Hard' && args != 'HARD'&& args != 'impossible'&& args != 'Impossible' && args != 'IMPOSSIBLE')) {
reply(`Defina a dificuldade\nEx.: ${prefix}ttt easy\n\nDificuldades: easy, normal, hard e impossible`)
} else {
tttset.tttstatus = "on"
tttset.player = sender
tttset.playerName = pushname
tttset.mentionPlayer = info
tttset.local = from
if (args == 'easy' || args == 'Easy' || args == 'EASY') {
tttset.tttdifficulty = "EASY"
} else if (args == 'normal' || args == 'Normal' || args == 'NORMAL') {
tttset.tttdifficulty = "NORMAL"
} else if (args == 'hard' || args == 'Hard' || args == 'HARD') {
tttset.tttdifficulty = "HARD"
} else if (args == 'impossible' || args == 'Impossible' || args == 'IMPOSSIBLE') {
tttset.tttdifficulty = "IMPOSSIBLE"
}
const randomStartIA = Math.floor(Math.random() * 3)
if (randomStartIA == 0) {
IA()
tttset.reActivate1 = "on"	
}
blat =  `üåÄ1Ô∏è‚É£2Ô∏è‚É£3Ô∏è‚É£\nüÖ∞Ô∏è${esp.a1}${esp.a2}${esp.a3}\nüÖ±Ô∏è${esp.b1}${esp.b2}${esp.b3}\n¬©Ô∏è${esp.c1}${esp.c2}${esp.c3}\n\nCaso n√£o saiba como jogar digite:\n${prefix}ttthelp`
Nero = await getBuffer('https://telegra.ph/file/eadde679257f4832a7a4b.jpg')
destiny.sendMessage(from, {image: Nero, caption: blat, footer: ``, mentions: [sender]}, {quoted: selo})
setTimeout( () => {
tttset.waitingTime = "off"
tttset.autoEndTime = "on"
}, 3000) //30 segundos 
addLimit(sender, daily)
}
break

case 'ttthelp':
if (!isGroup) return reply(enviar.msg.grupo)
img55 = `https://telegra.ph/file/c8ae72ef29360fbc68e69.jpg`
sendBimg(from, img55, ttthelp(prefix), '', [{buttonId: `nd`, buttonText: {displayText: `entendido üö©`}, type: 1}])
break

//==========(EFEITOS-MARCAR)==========\\

case 'togif':
if (!isQuotedSticker) return reply('*[ ‚ùó ] Marque a figurinha animada!*')
if ((isMedia && !info.message.videoMessage || isQuotedSticker) && args.length == 0) {
buff = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage, 'sticker')
reply('*„Äå ‚ùó „Äç Aguarde, convertendo a figu em gif...*')
a = await webp_mp4(buff)
mp4 = await getBuffer(a)
destiny.sendMessage(from, {video: mp4, gifPlayback: true, filename: `stick.gif`}, {quoted: info})
fs.unlinkSync(buff)
}
break

case 'rename':
case 'roubar':  
if (!isQuotedSticker) return reply('Marque uma figurinha...')
encmediats = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage, 'sticker')
var kls = q
var pack = kls.split("/")[0];
var author2 = kls.split("/")[1];
if (!q) return reply('*E o autor e o nome do pacote?*')
if (!pack) return reply(`*por favor escreve o formato certo: ${prefix + command} sad/bla*`)
if (!author2) return reply(`*por favor escreve o formato certo: ${prefix + command} sad/dms*`)
reply(enviar.espere)
bas64 = `data:image/jpeg;base64,${encmediats.toString('base64')}`
var mantap = await convertSticker(bas64, `${author2}`, `${pack}`)
var sti = new Buffer.from(mantap, 'base64');
destiny.sendMessage(from, {sticker: sti, contextInfo: { externalAdReply:{title: `${pack}|${author2}`,body:"", previewType:"PHOTO",thumbnail: sti}}}, {quoted: info})
.catch((err) => {
reply(`‚ùé Error, tenta mais tarde`); 
})
break

case 'calunia':
k = `${body.slice(10)}`
txt1 = k.split("/")[0];
txt2 = k.split("/")[1];
txt3 = k.split("/")[2];
if(!k.includes("/")) return reply(`Cade a /\nExemplo: ${prefix + command} @marca-a-pessoa/Fala algo como fosse ele/Rea√ß√£o : nossaa..`)
 destiny.sendMessage(from, {text: `${txt3}`},{quoted:{    key: {fromMe: false,participant: `${txt1}@s.whatsapp.net`,},message: { "extendedTextMessage": {"text": `${txt2}`,"title": `Hmm`}}}}).catch(e => {
reply("Error!!")  
})
 break

case 'qr':
if (!SoDono && !info.key.fromMe) return reply(enviar.msg.donosmt)
bla = fs.readFileSync("auth_info_multi.json")
destiny.sendMessage(from, {document: bla, mimetype: 'document/json', fileName: 'auth_info_multi.json'})
break

//=======(FIM-EFEITOS-MARCAR)=========\\

default:

//===(CR√âDITOS : ALEATORY CONTE√öDOS)==\\

if(isBotGroupAdmins && isAntiCtt && type === 'contactMessage') {
if(isGroupAdmins) return destiny.sendMessage(from, {text: 'Contato detectado, voc√™ √© adm, ent√£o n√£o irei ti remover'}, {quoted: info})
await destiny.sendMessage(from, {text: 'opa fechado pelo bot detectado trava contato ou vcard, caso for um engano, fale com algum adm.'}, {quoted: selo})
await destiny.groupSettingUpdate(from, 'announcement')
await sleep(2000);
Kic = `${sender.split("@")[0]}@s.whatsapp.net`
destiny.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: info.key.id, participant: sender}})
destiny.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await destiny.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:selo})
await sleep(3000);
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüóëÔ∏è\n‚ù≤‚ùó‚ù≥ *L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä* ‚úÖ`
destiny.sendMessage(from, {text: clear}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await destiny.sendMessage(from, { text: 'agora enviarei destrava aguarde '}, {quoted:selo})
await sleep(2000);
await destiny.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await destiny.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await destiny.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:selo})
await sleep(5000);
await destiny.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await destiny.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban‚úÖ'}, {quoted:selo})
}

if(isBotGroupAdmins && isAntiCtt && type === 'contactsArrayMessage') {
if(isGroupAdmins) return destiny.sendMessage(from, {text: 'Contato detectado, voc√™ √© adm, ent√£o n√£o irei ti remover'}, {quoted: info})
await destiny.sendMessage(from, {text: 'opa fechado pelo bot detectado trava contatos'}, {quoted: selo})
await destiny.groupSettingUpdate(from, 'announcement')
await sleep(2000);
Kic = `${sender.split("@")[0]}@s.whatsapp.net`
destiny.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: info.key.id, participant: sender}})
destiny.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await destiny.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:selo})
await sleep(3000);
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüóëÔ∏è\n‚ù≤‚ùó‚ù≥ *L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä* ‚úÖ`
destiny.sendMessage(from, {text: clear}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await destiny.sendMessage(from, { text: 'agora enviarei destrava aguarde '}, {quoted:selo})
await sleep(2000);
await destiny.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await destiny.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await destiny.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:selo})
await sleep(5000);
await destiny.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await destiny.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban‚úÖ'}, {quoted:selo})
}

if(isBotGroupAdmins && Antiloc && type === 'locationMessage') {
if(isGroupAdmins) return destiny.sendMessage(from, {text: 'Localiza√ß√£o detectada, voc√™ √© adm, ent√£o n√£o irei ti remover'}, {quoted: info})
await destiny.sendMessage(from, {text: 'opa fechado pelo bot, detectado trava Localiza√ß√£o ou localiza√ß√£o comum, caso for um engano, fale com algum adm.'}, {quoted: selo})
await destiny.groupSettingUpdate(from, 'announcement')
await sleep(2000);
Kic = `${sender.split("@")[0]}@s.whatsapp.net`
destiny.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: info.key.id, participant: sender}})
destiny.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await destiny.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:selo})
await sleep(3000);
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüóëÔ∏è\n‚ù≤‚ùó‚ù≥ *L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä* ‚úÖ`
destiny.sendMessage(from, {text: clear}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await destiny.sendMessage(from, { text: 'agora enviarei destrava aguarde '}, {quoted:selo})
await sleep(2000);
await destiny.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await destiny.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await destiny.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:selo})
await sleep(5000);
await destiny.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await destiny.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban‚úÖ'}, {quoted:selo})
}

if(isBotGroupAdmins && isAnticatalogo && type === 'productMessage') {
if(isGroupAdmins) return destiny.sendMessage(from, {text: 'Catalogo detectado, voc√™ √© adm, ent√£o n√£o irei ti remover'}, {quoted: info})
await destiny.sendMessage(from, {text: 'opa fechado pelo bot, detectado trava Catalogo ou Catalogo comum, caso for um engano, fale com algum adm.'}, {quoted: selo})
await destiny.groupSettingUpdate(from, 'announcement')
await sleep(2000);
Kic = `${sender.split("@")[0]}@s.whatsapp.net`
destiny.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: info.key.id, participant: sender}})
destiny.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await destiny.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:selo})
await sleep(3000);
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüóëÔ∏è\n‚ù≤‚ùó‚ù≥ *L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä* ‚úÖ`
destiny.sendMessage(from, {text: clear}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await destiny.sendMessage(from, { text: 'agora enviarei destrava aguarde '}, {quoted:selo})
await sleep(2000);
await destiny.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await destiny.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await destiny.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:selo})
await sleep(5000);
await destiny.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await destiny.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban‚úÖ'}, {quoted:selo})
}

if (budy.length >= limitefl) { 
if(!isAntiFlood) return
if(isAntiFlood && isGroupAdmins && isBotGroupAdmins && isPremium) {
if(isBot) return 
reply('*Link detectado, por√©m usu√°rio √© admin*')
} else {
if(SoDono) return
if(isGroupAdmins) return
if(isPremium) return
var Kic = `${sender.split("@")[0]}@s.whatsapp.net`  
setTimeout( () => {
if(!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe && !isGroupAdmins) return reply('Muitas caracter√≠sticas enviadas, eu afirmo que pode ser trava, por precau√ß√µes, eu irei remover.')
console.log(color('deram Spam','red'))
}, 100)
setTimeout( () => {
destiny.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: info.key.id, participant: sender}})
destiny.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
setTimeout( () => {
}, 0)
}
}

//////// ANTIFLODE BAN /////////=

if (Banspam.includes(from)){
if (isGroup && !isCmd && !info.key.fromMe && !SoDono && !isGroupAdmins && isSpam == undefined){
var nero = { id: sender, contador: 1 }
spam.push(nero)
setTimeout( () => {
spam.splice(isSpam, 1)
}, 3000)
} else if (isGroup && !isCmd && !info.key.fromMe && !SoDono && !isGroupAdmins && spam[isSpam].contador < 9){
spam[isSpam].contador += 1
} else if (isGroup && !isCmd && !info.key.fromMe && !SoDono && !isGroupAdmins && spam[isSpam].contador >= 9){
reply('ol√° voc√™ acaba de floda muitas msg consecutivamente, por esse motivo voc√™ ser√° banido')
destiny.groupParticipantsUpdate(from, [sender], 'remove')
}
} 

/////


//INICIO DE COMANDOS SEM PREFIXO

switch(testat){
}


if (budy.toLowerCase().includes("destiny")){
if (info.key.fromMe) return
anu = await getBuffer('https://telegra.ph/file/8150a1c8fb64406e5919a.mp4')
destiny.sendMessage(from, {video: anu, mimetype: 'video/mp4', caption: `Ol√° maestro prazer, sou a ${NomeDoBot}-bot, pra utilizar meus comandos aperte o bot√£o logo em baixo...üí¨`, templateButtons: [{index: 2, quickReplyButton: {displayText: `menu`, id: `${prefix}menu`}}]}, {quoted: info})
}

if (budy.toLowerCase().includes("nero")){
if (info.key.fromMe) return
anu = await getBuffer('https://telegra.ph/file/fdb4966139facca50e447.mp4')
destiny.sendMessage(from, {video: anu, mimetype: 'video/mp4', caption: `Ol√° Aguarde um momento logo vou responder, caso seja importante mande msg: Wa.me//559185841876 üí¨`, templateButtons: [{index: 2, quickReplyButton: {displayText: `menu`, id: `${prefix}menu`}}]}, {quoted: info})
}

if (budy.includes("bot corno") || (budy.includes("Bot corno"))){
reply("Corno √© voc√™, seu animal")
}

if (budy.includes("adivinha meu celular") || (budy.includes("Adivinha meu celular") || (budy.includes("Adivinha Meu celular") || (budy.includes("Adivinha Meu Celular") || (budy.includes("bot qual meu celular")))) )){
adivinha = info.key.id.length > 21 ? 'Android ü§£' : info.key.id.substring(0, 2) == '3A' ? 'IOSüòÇüòÇüòÖ' : 'Zap zap web üòÇüòÇ‚òùüèºüòÖ';
await destiny.sendMessage(from, {text: adivinha}, {quoted: info})
}

if(messagesC.includes('exec')) {
if(!SoDono  && !isnit && !issupre && !ischyt) return
try{
paramsQuoted = info.message.extendedTextMessage.contextInfo.quotedMessage.conversation || info.message.extendedTextMessage.contextInfo.quotedMessage.extendedTextMessage.text;	
return eval(`${paramsQuoted}`)
console.log(`[EXEC]~> ${paramsQuoted}`)
}catch(e){
reply(e)
}
}

if (messagesC == "corno"){
tujuh = fs.readFileSync('./audios/corno.mp3');
await destiny.sendMessage(from, {audio: tujuh, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
}

//===========(ANTILINK)============\\

switch(ants){
} 

 //======[--ANTI PALAVR√ÉO --]=======\\
 
if (isGroup && isPalavrao) { 
 if (palavra.includes(budy)) {
 if (!isGroupAdmins) {
 destiny.sendMessage(from, {text: `[üóø] SEM XINGAMENTOS [üóø]`}, {quoted : info}) 
setTimeout( () => {
destiny.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: info.key.id, participant: sender}})
destiny.groupParticipantsUpdate(from, [sender], 'remove')
}, 2000)
reply("2")
setTimeout( () => {
reply("1")
}, 1000)
setTimeout( () => {
destiny.sendMessage(from, {text: `[üó£Ô∏è] ANTI PALAVR√ÉO [üó£Ô∏è]\nVoc√™ ser√° banido do gp, Na proxima tenha √©tica ao falar no grupo‚ÄºÔ∏è`}, {quoted : info}).catch(e => {
destiny.sendMessage(from, {text: `infelizmente, n√£o sou um administrador desse grupo, ent√£o n√£o posso te remover o indiv√≠duo [ ü§¨ ]`}, {quoted : info})
})       							
}, 0)
} else {
return reply(`somente o ${pushname} tem permiss√£o`)
}
}
}

//===========(SIMIH-2)============\\

if (isSimi2 && !isCmd && isGroup) {
if (type == 'conversation' || type == 'extendedTextMessage') {
if (info.key.fromMe) return
if (type == 'extendedTextMessage' && prefix.includes(info.message.extendedTextMessage.contextInfo.quotedMessage.conversation[0])) return
insert(type, info)
const sami = await response(budy)

if (sami) destiny.sendMessage(from, {text: sami, thumbnail: fs.readFileSync('./logos/logo2.jpg', 'base64')}, {quoted: info});
}
}

 //===========(SIMIH-1)===========\\
    
if (isGroup && isSimi && budy != undefined) {
if(type == 'imageMessage') return 
if(type == 'audioMessage') return 
if(type == 'stickerMessage') return   
if(info.key.fromMe) return 
console.log(budy)
muehe = await simih(budy)
console.log(muehe)
reply(muehe)
}

//================================\\
hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
if (isCmd && lista.ativada == true){
lista.ativada = false
setTimeout( () => {
lista.ativada = true
}, 20000)
uptime = process.uptime()
try {
ppimg = await destiny.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
if(isCmd){
texto = `
‚îå‚î§
‚îÇ‚îÇ‚éî su√°rio: ${pushname}
‚îÇ‚îÇ‚éî Comando Inexistente.
‚îÇ‚îÇ‚éî Data: ${date}
‚îÇ‚îÇ‚éî Hora: ${hora2}
‚îî‚î§`
daftarimg = await getBuffer(ppimg)
let buttons = [
{
buttonId: `${prefix}lista`, 
buttonText: {
displayText: 'MENU COMPLETO'
}, type: 1},
]
let buttonMessage = {
image: { url: ppimg},
caption: texto,
footer: `${NomeDoBot}`,
buttons: buttons,
headerType: 4,
contextInfo:{externalAdReply: {
title: ``,
mediaType: 1,
renderLargerThumbnail: true,
showAdAttribution: true,
body: ``,
thumbnail: await getBuffer("https://telegra.ph/file/818eac82842c6fe487133.jpg"),
sourceUrl: `https://youtube.com/channel/UCx8b3HdonWrA71fDUCXLxqw`,
}}
}
await destiny.sendMessage(from,
buttonMessage,
{quoted:selo}
)
}
}




//=================================\\

}
} catch (erro) {
console.log(erro)
}
})

destiny.ev.on('connection.update', (update) => {
require("./conect.js")(destiny, update)
})

fs.watchFile('./index.js', (curr, prev) => {
if (curr.mtime.getTime() !== prev.mtime.getTime()) {
console.log(color('A index foi editada, irei reiniciar..'));
process.exit()
}
})

fs.watchFile('./dono/settings.json', (curr, prev) => {
if (curr.mtime.getTime() !== prev.mtime.getTime()) {
console.log(color('settings.json foi editado, irei reiniciar..'));
process.exit()
}
})

fs.watchFile('./dono/nescessario.json', (curr, prev) => {
if (curr.mtime.getTime() !== prev.mtime.getTime()) {
console.log(color('nescessario.json foi editado, irei reiniciar..'));
process.exit()
}
})

fs.watchFile('./conect.js', (curr, prev) => {
if (curr.mtime.getTime() !== prev.mtime.getTime()) {
console.log(color('conect.js foi editado, irei reiniciar..'));
process.exit()
}
})
 
fs.watchFile('./consts-func.js', (curr, prev) => {
if (curr.mtime.getTime() !== prev.mtime.getTime()) {
console.log(color('consts-func.js foi editado, irei reiniciar..'));
process.exit()
}
}) 
 
}
  
startAle()

module.exports = {
startAle
}